   #next Cookie connecté » Flux Cookie connecté » Flux des commentaires

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : ____________________ Rechercher

   Non classé

Le serverless pour les nuls

   19 janvier 2019 Samson Laisser un commentaire

   Dans cet article, je vais donc vous expliquer les concepts les plus
   importants à retenir de l’architecture serverless

   IFRAME:
   https://www.youtube.com/embed/HaehHcLVCTo?version=3&rel=1&fs=1&autohide
   =2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   L’architecture serverless est un modèle de cloud computing dans lequel
   le client peut créer et exécuter ses applications sans devoir gérer la
   partie infrastructures et notamment les serveurs, d’où le terme
   “serverless”, ou “sans serveur” en français.

   Evidemment, l’application, et notamment son code, s’exécute toujours
   sur des serveurs. Parce que oui, on a toujours besoin des
   infrastructures IT pour faire tourner les applications.

   La particularité du modèle serverless elle est simple : le développeur
   doit juste fournir son code. Tout le reste est pris en charge par le
   fournisseur de services cloud.

   Le modèle “serverless” va donc faire abstraction de la partie
   infrastructures IT  pour le développeur. Ce qui veut dire que Le
   développeur s’affranchit ainsi des contraintes de l’infrastructure et
   peut se concentrer sur son travail : le développement.

   Evidemment, il y a des règles à respecter pour rentrer dans le modèle
   serverless

   Premièrement, le développeur va devoir repenser la conception de son
   code.  En effet, le code d’exécution n’est plus celui de toute
   l’application, le code d’exécution doit être décomposée en fonctions.
   Chaque fonction a un seul et unique but. Et l’ensemble de ces fonctions
   forme l’application.

   D’où le terme « Function as a Service » (FaaS) souvent associé au
   “serverless”. Le développeur a la responsabilité de coder sa ou ses
   fonctions. Et Le reste, c’est à la charge du fournisseur de services
   cloud.

   En gros, pour le développeur, ça veut dire :
     * Plus besoin de définir le nombre de serveurs, leur puissance, plus
       besoin de mettre en service, de mettre à l’échelle, d’entretenir,
       de superviser, de les mettre à jour, et toutes autres actions
       concernant la gestion des serveurs.
     * Mais aussi et c’est important : plus besoin de gérer le déploiement
       de son application  sur les différents serveurs.
     * Finis aussi les problématiques de stockage, de load balancing ou
       d’autres problématiques réseau, etc

   Pour le développeur, il faut juste déposer son code et le reste c’est
   le fournisseur de services cloud qui s’en occupe!

   Passons au fonctionnement de cette « fonction »

   Cette fonction va être déclenchée par des événements. Par exemple si la
   fonction est sollicitée par une requête HTTP. La requête déclenche
   l’exécution du code et donc la fonction. Et ici, la requête va
   déclencher la fonction qui va interroger une base de données (donc une
   action sur un autre service)

   A noter que les événements déclencheurs peuvent être divers : que ce
   soit l’ajout d’un fichier sur un espace de stockage ou alors une
   nouvelle entrée dans une BDD

   Ensuite, l’hébergeur cloud garantit le scaling automatique de la
   fonction selon les pics de trafic. Imaginons que la fonction B est
   beaucoup plus sollicitée que les autres, dans ce cas là, la fonction B
   sera exécutée plusieurs fois, cad que plusieurs « unités de travail »
   de la fonction B tourneront en parallèle pour répondre à la charge de
   travail en hausse. Ici B1, B2 et B3 sont la même instance de la
   fonction B mais tournant en en même temps pour répondre au pic de
   charge.

   Et a contrario lors de faible charge, seules les unités nécessaires
   sont éxécutées. Ici la fonction A ne nécessite qu’une seule unité de
   travail pour traiter la demande.

   Et s’il n’y a pas de sollicitation de la fonction alors elle n’est pas
   exécutée. Comme la fonction C ici que vous ne voyez pas car elle n’est
   pas lancée car non sollicitée.

   Pour aller plus loin sur ce modèle d’architecture par fonctions, je
   vous invite fortement à regarder sur les microservices où j’explique
   plus longuement les spécificités de ce type d’architecture.

   Autre point structurant du modèle serverless : la facturation

   La facturation est basée sur les ressources consommées ou le temps réel
   d’exécution du code, avec quand même la milliseconde comme unité de
   paiement. Ce qui veut aussi dire qu’en l’absence de trafic,
   l’utilisateur ne paie rien.

   C’est là tout l’intérêt économique du modèle “serverless”, fini le coût
   des serveurs : leur achats, leur gestion, leur entretiens, etc. surtout
   quand ceux ci sont sous utilisés

   Et en plus, ce modèle de paiement à l’usage incite à l’optimisation de
   la performance du code. Réduire le temps d’exécution d’une application
   serverless permet de diminuer le coût du service, et donc la facture à
   la fin du mois

   Exemple concret : AWS Lambda

   Maintenant que vous avez compris le principe, voyons quelques services
   serverless, le plus connu est AWS Lambda. AWS Lambda est un service
   d’Amazon Web Services (AWS) et il va suivre les principes que l’on a vu
   :
     * Il exécute le code seulement quand c’est nécessaire.
     * AWS lambda s’adapte automatiquement à la charge de travail
     * Et le client ne paye que le temps de calcul utilisé.

   Le prérequis est d’avoir un code dans un langage compatible avec AWS
   Lambda comme Node.js, Java, C#  et Python et respecter le temps limite
   d’exécution de la fonction

   Là je parle d’AWS parce que c’est l’offre que je connais le mieux. Mais
   c’est la même logique derrière Azure Functions de Microsoft et Google
   Cloud Functions de Google Cloud.

   Allez maintenant, on va voir à quoi ressemble une architecture
   serverless sur AWS

   Architecture serverless AWS

   L’architecture serverless est la plupart du temps une conception en
   fonctions qui vont déclencher des actions sur d’autres services.

   Dans notre exemple, les 2 fonctions sont développées en utilisant AWS
   Lambda et sont exposés via une API avec le service AWS API Gateway. Ces
   API sont le point d’entrée qui déclenche la fonction Lambda
   voulu.  Ici, on est sur un site web proposant la vente de cookies. Ici
   le client va demander la liste des cookies vegan. Dans ce cas, la
   fonction Lambda « Liste » extraire la liste des cookies avec que des
   ingrédients vegans. Ce qui déclenche le traitement du service dans le
   service de base de données DynamoDB. Ensuite, Lorsque le client fait un
   achat de cookies, il déclenche une fonction lambda « Achat » qui
   enregistre cette entrée dans AWS DynamoDB

   Ensuite, l’architecture serverless est adaptée pour la construction de
   workflows automatisés basées sur les fonctions Lambdas qui vont servir
   de liens entre les différents services AWS.

   Dans cet exemple : Un nouveau fichier est déposé sur un bucket S3
   (bucket S3 étantun service d’espace de stockage dans le cloud). Cette
   action déclenche une fonction qui va le décompresser et l’insérer dans
   DynamoDB. Cette écriture dans Dynamo DB va lui même déclencher une
   autre fonction Lambda qui va lancer le service SNS pour envoyer un SMS
   de notification

   Les limites du modèle

   Le serverless n’est pas adaptés à tous les cas d’usage. Les contraintes
   de temps d’exécution du serverless ne sont pas adaptées pour
   l’exécution de tâches lourdes et complexes (comme le traitement vidéo
   par exemple). et plus généralement les applications qui ont un trafic
   constant. Il y a donc une nécessité de bien concevoir l’architecture
   d’une application en amont : cela permet de décider si une architecture
   serverless convient pour l’application.

   Enfin, dernière contrainte de ce modèle : c’est la forte dépendance au
   fournisseur de services cloud et plus particulièrement à son framework
   : chaque fournisseur de service cloud impose des règles différentes
   (timeouts, langages supportés, etc.). Ce qui veut dire que pour migrer
   après ça va être très compliqué. Vous êtes souvent donc prisonnier des
   règles du fournisseur de services cloud qui peuvent changer.


   AWS lambdacloud computingFaaSgoogle cloud functionserverless

   Non classé

La Transformation digitale / numérique pour les nuls

   21 octobre 2018 Samson Laisser un commentaire

   Le développement technologique s’accélère et les innovations sont de
   plus en plus nombreuses.  Face à ces changements inévitables, les
   entreprises ont le choix :
     * Soit elles s’adaptent en s’appropriant ces nouvelles technologies
       pour innover
     * Soit elles peuvent ne pas réagir et mourir, dépassé par les
       concurrents qui auront réussi à tirer bénéfices de ces nouvelles
       technologies.

   Et c’est en ça que la transformation numérique est vitale pour les
   entreprises.

   Alors en quoi consiste la transformation numérique( ou appelé aussi
   transformation digitale)?

   IFRAME:
   https://www.youtube.com/embed/HjAxHRMc7mI?version=3&rel=1&fs=1&autohide
   =2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent


   Il s’agit d’un processus continu permettant aux entreprises d’intégrer
   les nouvelles technologies, comme par exemple le cloud, l’IoT ou
   l’intelligence artificielle, et ceci à tous les aspects de leurs
   activités et aux différents niveau de l’entreprise.

   Mais attention, la transformation numérique, ce n’est pas que des
   problématiques technologiques, il y a un aspect humain très important.
   Que ce soit par exemple une nouvelle culture à mettre en place, une
   nouvelle façon de gérer l’humain ou une nouvelle approche des métiers
   et des process, etc

   La transformation numérique est donc une transformation globale de
   l’entreprise.


   L’objectif c’est de capitaliser sur ces nouvelles technologies pour
   créer de la valeur et bénéficier de nouvelles opportunités business.

   Sinon il y a risque de se faire damer le pion face par des concurrents
   plus rapide, ou alors par les GAFA championne du numérique mais aussi
   par nombreuses start-up qui menace les positions des plus grandes
   entreprises.


   Maintenant qu’on a vu les enjeux, voyons 3 piliers cles d’une
   transformation numérique réussie  :

   Le premier est l’expérience client qui doit être une priorité. Pour
   l’optimiser, les entreprises doivent tirer le meilleur du digital pour
   pouvoir satisfaire, fidéliser et faire rêver le client. Sinon il ira
   voir ailleurs. Les nouvelles technologies du digital permettent ainsi
   de créer de la valeur pour le client.

   Pour être un peu plus concret, je vais prendre l’exemple des nouvelles
   technologies autour de la donnée. La donnée est considéré aujourd’hui
   par tous comme un élément clé dans cette révolution numérique.

   Les entreprises qui vont se demarquer sont celles qui vont maitriser
   les technologies capable de capitaliser sur ces données pour en créer
   de la valeur. par exemple avec le big data, et l’intelligence
   artificielle,


   Le deuxième pilier est une organisation tournée vers l’agilité . Dans
   un marché changeant et incertain; être agile est fondamental pour mieux
   s’adapter aux changements et inbtégrer rapidement les nouvelles
   technologies. Les projets sont alors plus nombreux et plus rapides à
   mettre en place.

   Cela passe par la simplification de l’organisation de l’entreprise mais
   aussi les bonnes pratiques pour permettre d’être plus réactif. Par
   exemple les principes du lean start-up, les méthodes agiles ou le
   devops.

   L’objectif de tout ça est d’avoir surtout avoir un  « time to market »
   rapide! Le time to market c’est le délai entre la naissance d’une idée
   et sa mise en place sur le marché. Ce qui veut dire que plus le Time To
   Market est rapide, plus l’entreprise aura des chances de saisir les
   opportunités business en proposant des produits ou services intégrant
   les dernières technologies

   Essayer, s’adapter et évoluer en permanence devient un mode de
   fonctionnement pour les entreprises.


   Enfin dernier pilier :  La transformation est avant tout une question
   d’humains !Rassembler les collaborateurs autour d’une vision commune
   est essetntiel. La simplification de l’organisation et donc la
   suppression des silos favorise le travail collaboratif, l émerge,ce
   d’idées et les prises d’initiatives, tout ça étant nécessaires pour
   développer l’innovation.

   Il est aussi primordial attirer, développer et fidéliser les meilleurs
   profils. Parce que oui, c’est aussi une guerre des talents.


   digitalnumériquetransformation digitaletransformation numérique

   Video

La petite histoire de Linux (en dessins)

   21 octobre 2018 Samson Laisser un commentaire

   Aujourd’hui, je vais vous raconter des anedoctes sympas sur la
   naissance de Linux

   IFRAME:
   https://www.youtube.com/embed/IquNF_DXcF8?version=3&rel=1&fs=1&autohide
   =2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent


   Première chose à retenir sur Linux parce qu’il y a pas mal de confusion
   :
     * Linux est un noyau, c’est pour ça qu’on parle d’ailleurs de “Linux
       kernel”. Kernel veut dire noyau en francais.
     * Et en gros, c’est ça qui permet de démarrer, de faire la liaison
       entre le matériel et le système de la machine, ainsi que de faire
       la liaison entre les applications installées sur la machine.

   Le hic c’est qu’on ne peut pas utiliser ce noyau seul. Il faut un
   environnement (des logiciels autour du noyau afin que tout marche bien
   : des pilotes,, de quoi gérer la machine, etc).

   C’est là où la notion de distribution apparaît :
     * On parle de distribution GNU/Linux quand il s’agit d’une solution
       prête à être intallée par l’utilisateur final sur sa machine.
     * Cette distribution GNU Linux  comprend un noyau Linux ainsi que des
       logiciels sous Licence GNU, en gros on va dire que ce sont des
       logiciels libres qui complètent le noyau pour avoir un système
       d’exploitation complet.
     * Il est à noter qu’on peut aussi très bien trouver des distributions
       qui ne contiennent pas seulement les logiciels GNU, il y a parfois
       d’autre logiciels non GNU.

   Bref, c’est ce noyau Linux + des logiciels complémentaires qui vont
   permettre d’avoir un OS complet.

   Voici des exemples de systèmes d’exploitation “Linux » :
     * Red Hat Enterprise Linux
     * Fedora Linux
     * Debian Linux
     * Ubuntu Linux

   Ensuite il y a aussi souvent une autre confusion entre Linux et
   UNIX. Alors quelle différence?
     * Déjà pour l’anecdote sachez que le système d’exploitation “Linux” a
       été créé dans le but de fournir un équivalent libre au système
       Unix.
     * Linux est un clone d’UNIX en version libre et écrit à partir de
       zéro par Linus Torvalds, le createur du noyau Linux donc,  avec
       l’aide d’une équipe d’informaticiens.
     * Par contre UNIX regroupe un ensemble de systèmes d’exploitation
       différents. Ce ne sont donc pas juste des noyaux mais bien des OS
       complets
     * Comme exemples de système Unix connus, on a HP-UX, IBM AIX, Solaris
       Sun

   Maintenant on va un peu s’intéresser au père de Linux :

   En 1991, l’étudiant finlandais Linus Torvalds qui a alors 22 ans,
   commence le développement d’un noyau de système d’exploitation
   alternatif à MINIX, qui est un clone d’UNIX utilisé à des fins
   pédagogiques pour des étudiants. Linux va au final créer avec son
   nouveau noyau une alternative à UNIX.

   Après quelques mois, Il diffusa le code de son travail via un compte
   FTP de l’Université d’Helsinki. Et pour la petite anecdote le dossier
   contenant ces travaux a été nommé « Linux » par un administrateur du
   serveur FTP.  Linux pour « Linus UNIX » ou en français l’UNIX de
   Linus. Et par la suite, ce nom restera.

   Linus publie par la suite ses travaux sur Internet en demandant à
   d’’autres développeurs de l’aider pour le finaliser. Aujourd’hui Linus
   continue de diriger le développement du noyau Linux


   Concernant la mascotte officielle de Linux, il s’agit d’un manchot du
   nom de TUX. TUX étant un acronyme composé des mots Torvalds et UNIX.  A
   noter que beaucoup pensent à tort que la mascotte de Linux est un
   pingouin, notamment parce qu’en anglais, le mot « manchot » se dit «
   penguin », mais TUX est bien un manchot

   La différence ?

   Le pingouin est un oiseau de l’hémisphère nord qui peut voler, alors
   que le manchot est un oiseau qui ne vit que dans l’hémisphère sud et
   qui est incapable de voler En gros hein!


   Aujourd’hui, bien que peu présent sur les postes de travail, Linux est
   beaucoup plus présent dans le monde des serveurs

   Le noyau Linux équipe aussi la plupart des systèmes embarqués (box,
   robots, aérospatial, drones…). mais aussi les supercalculateurs

   Et pour terminer, comme vous le savez sûrement déjà, Linux domine le
   marché des smartphones via l’OS Android qui s’appuie sur un noyau Linux


   AndroidGNULinusLinuxMINIXnoyauOSsysteme d exploitationTorvaldsTUXUNIX

   Video

Les algorithmes nous contrôlent-ils ?

   30 septembre 2018 Samson Laisser un commentaire

   Aujourd’hui on va parler des algorithmes, le buzzword du moment!

   IFRAME:
   https://www.youtube.com/embed/sp-uCwbs6H8?version=3&rel=1&fs=1&autohide
   =2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Quand le moteur de recherche Google te propose des résultat de
   recherche, c’est en fait un algorithme qui va décider des résultats qui
   te seront présentés et leur classement.

   Quand Netflix te conseille une série, c’est pareil, c’est un algorithme
   qui va te faire ces suggestions.

   Les news qui vont apparaître sur ton fil d’actualité et leur ordre,
   c’est aussi un algorithme. Pareil pour l’ordre des photos et des
   stories sur Intagram, là aussi c’est un algorithme qui organise tout
   ça.

   Le pouvoir des algorithmes est d’autant plus important que le numérique
   fait partie intégrante de notre vie (smartphone, les objets connecté,
   service en ligne, applications, etc). Et quand tu regardes un peu ce
   qu’en pense les médias c’est encore plus anxiogène. Tu as juste
   l’impression d’être l’esclaves des algorithmes, qu’on a perdu notre
   libre arbitre qu’ils nous lavent le cerveau.

   Alors, Les algorithmes nous contrôlent-ils tous?  Je fais cette vidéo
   pour un peu demystifier tout ça justement. Qu’est ce qu’il y a derrière
   les algorithmes, tout ce que vous devez savoir sur le sujet et savoir
   quels sont les vrais enjeux des algorithmes et leur réel pouvoir.


   Déjà voyons ce qu’est un algorithme : un algorithme, c’est tout
   simplement une suite d’instructions permettant de résoudre un problème.
   Et ces instructions doivent pouvoir être applicable mécaniquement, sans
   réfléchir, pour arriver à un résultat.


   Les premiers algorithmes auquels on pense ce sont forcément les
   algorithmes mathematiques. Rappelez vous en primaire… La fameuse
   division euclidienne pour trouver le plus grand commun diviseur. Vous
   avez dû apprendre cet algorithme pour arriver à trouver le plus grand
   commun diviseur entre 2 nombres entiers.

   M’enfin, au dela des mathématiques, il y a bien plus simple comme
   algorithme dans la vie de tous les jours,

   Lorsque vous suivez une recette de cuisine pour faire un gateau. Si
   vous suivez bien la recette avec les bon ingrédients, à la fin le
   resultat c’est le gâteau. La recette c’est en fait un algorithme avec
   une suite d’instructions à éxécuter étape par étape pour faire ce
   gâteau.

   Transposé à l’informatique, les algorithmes permettent tout simplement
   de dire à un programme informatique tout ce qu’il doit faire. Les
   concepteurs de programmes informatiques vont définir dans l’algorithme
   une suite d’opérations logiques pour un arriver à un résultat
   voulu. Tout ça sera ensuite codé dans un langage informatique adapté
   pour pouvoir être appliqué automatiquement par le programme
   informatique.


   Ce sont les algorithmes qui définissent les actions des bots. Ce sont
   les algorithme qui vont décrire les tâches spécifiques que doivent
   réaliser ces programme informatique. Par exemple, les algorithme sont
   derrière les moteur de recherche, les fameux bot twitter qui font des
   actions spécifiques comme retweeter ou liker un mot clé spécifiques
   défini, et ce sont les algorithmes qui sont derrière l’intelligence des
   chatbot comme ceux sur messenger ou bien même les assistants vocaux
   comme Siri ou Alexa.

   Evidemment, il y a quand même une grosse différence entre l’algorithme
   simple du bot twitter qui fait que retweeter bêtement ce qu’on lui a
   dit  aux algorithmes de facebook, netflix ou amazon qui sont capable de
   s’adapter aux consommateurs.

   Cette différence c’est ce qu’on appelle le machine learning.

   Le machine learning c’est en gros quand l’algorithme va utiliser vos
   données pour apprendre et faire des actions plus efficaces. Les
   algorithmes ne sont maintenant plus seulement les instructions de base
   programmées par un développeur. Ils sont capable d’apprendre.  La
   machine peut générer de nouvelles instructions en apprenant à partir à
   la masse de  données qui lui sont fournies.  Ces données sont notamment
   des données personnelles que vous leur fournissez sur vous

   Et c’est comme ça que les algorithmes semblent parfois bien connaître
   nos goûts, nos envies et nos besoins.  Et là vous pensez aux
   suggestions d’Amazon qui des fois sont vraiment bluffantes car c’est ce
   que vous vouliez, la playlist spotify qui vous ait proposé et qui
   correspondent bien à vos goûts


   je vais vous prendre un exemple sympa.

   L’objectif  de netflix c’est de vous faire rester le plus longtemps sur
   sa plateforme parce que c’est l’abonnement qui va rémunérer netflix. Du
   coup, pour que vous restiez sur la plateforme le but c’est que vous
   consommiez toujours plus de contenu.

   La mission de l’algorithme c’est de faire en sorte que vous consommiez
   toujours plus de contenu

   C’est pour ça que l’algorithme doit apprendre à connaitre vos goûts
   pour vous pousser vers les séries ou films susceptibles de vous faire
   continuer à regarder plus.

   Saviez vous que Netflix va jusqu’à personnaliser les vignettes des
   series en fonction des données que netflix possède sur vous.

   Cela a été fait avec Stranger things :

   L’algorithme Netflix est capable de « prédire la probabilité que vous
   cliquiez sur un contenu en fonction d’une image donnée » et la vignette
   avec la plus forte probabilité de vous faire cliquer sera affichée par
   l’algorithme Netflix. C’est comme ça que Netflix arrive à vous faire
   regarder le plus de série possible

   Que ce soit Instagram, Facebook, Amazon, Youtube, aujourd’hui ces
   algorithmes complexes ont besoin de données sur vous pour être plus
   performant. Un des éléments clés à retenir c’est que sans vos données
   personnelles, ces algorithmes ne seraient pas aussi puissants. D’où
   l’importance de bien maitriser ses données personnelles en ligne.

   En tout cas, avec le machine learning, on entre dans la notion
   d’intelligence articielle. On parle de machine learning pour désigner
   la capacité d’une machine à apprendre et donc évoluer.

   La machine acquiert alors  de nouvelles connaissances qu’on ne lui
   avait pas programmés au départ. La machine apprend, s’améliorer et
   ‘évoluer d’elle même grâce à de nouvelles données. C’est pour cela
   qu’on parle d’intelligence artificielle.


   Avec ce que l’on vient de voir, on peut constater une chose : ces
   algorithme ne sont pas NEUTRE. et c’est important de le prendre en
   compte. Ils ont été conçus et codé par des développeurs qui leur a
   transmis une façon de fonctionner et un objectif à atteindre que ce
   soit les news sur fil d’actualité sur facebook, l’exemple des résultats
   de recherches Google, l’ordre des stories et photo sur Instagram, etc

   On a l’impression que c’est objectif mais il est important de retenir
   que ce des gens qui derrière tout ça on mis en place des critères de
   classement en fonction de leurs objectifs et de ses préjugés, de
   contraintes. Quand on parle d’algorithme on a l’impression que c’est
   neutre. Alros que cela peut masquer des convictions politiques, des
   objectifs financiers, des stratégies d’entreprises, etc. D’ailleurs les
   GAFA restent très discret sur le fonctionnement des algorithmes. et
   comme on l’a vu dans la vidéo c’est parce qu’il y a de réels enjeux
   derrière.

   C’est important d’avoir du recul sur l’action des algorithmes et de
   savoir qu’ils ne sont pas neutre pourempêcher que les GAFA et des
   entreprises du numérique de  transférer leur responsabilité sur les
   algorithmes. Lorsque facebook a été utilisé ou plutot leur algorithme
   détourné pour propager des fake news notamment pour les élections
   américaines de 2016, c’est de la faute de facebook, l’algorithme c’est
   juste l’épouvantail. Facebook a une responsabilité de l’utilisation de
   sa plateforme et de ce qui en est fait (et là je vous parle meme pas
   des données).

   Les gens qui ont reussi à hacker ont détourné l’algorithme à leur
   avantages pour diffuser des fake news. C’est à Facebook d’en assumer la
   responsabilité, ils sont responsable de leur algorithme.


   algorithmesBig datadonnées personnellesGAFAIAintelligence
   artificiellemachine learning

   Video

Le DNS pour les nuls

   30 septembre 2018 Samson Laisser un commentaire

   IFRAME:
   https://www.youtube.com/embed/qzWdzAvfBoo?version=3&rel=1&fs=1&autohide
   =2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Sur Internet, quand vous voulez accéder à un site web via votre
   navigateur, on va utiliser ce que l’on appelle un nom de domaine, par
   exemple cookieconnecté.fr, Wikipedia.org, Youtube.com …

   Bref, c’est l’adresse du site web que vous tapez sur votre navigateur.

   Dans la réalité, votre navigateur, lui il va avoir besoin de l’adresse
   IP du serveur sur lequel est hebergé votre site web. Par exemple
   194.153.205.26

   L’adresse IP est un numéro d’identification qui est attribué  à chaque
   appareil connecté à un réseau informatique utilisant l’Internet
   Protocol (d’ailleurs le IP c’est pour Internet Protocol). En gros, ca
   veut dire que chaque ordinateur connecté à internet possède une adresse
   IP.

   Sauf que vous l’avez compris ce serait un peu compliqué pour nous de
   retenir ces adresses IP. Et c’est là qu’intervient le DNS (Domain Name
   System) qui va “traduire” ces noms de domaines en adresses IP. La
   résolution de noms de domaines, c’est la corrélation entre les adresses
   IP et le nom de domaine associé.

   Les serveur DNS sont tout simplement des serveurs qui font la
   correspondance entre les adresses IP et les noms de domaine associés.


   Maintenant, voyons comment tout ça marche un peu plus dans le
   détail. Je vais vous expliquer maintenant à la notion de Hiérarchie
   DNS

   Le système des noms de domaine est en fait une hiérarchie dont le
   sommet est appelé la racine. On représente cette dernière par un point
   “.” pour info ce point n’apparait pas dans les addresses de site web
   qu’on utilise sur Internet mais c’est bien le plus haut niveau.

   Les domaines se trouvant immédiatement sous la racine sont appelés
   domaine de premier niveau “.fr”, .com, .org, etc (ou top domain level
   en français)

   Dans un nom de domaine, les domaines successifs sont séparés par un
   point, les noms de domaines supérieurs étant à droite. Le domaine
   wikipedia.org. est un sous-domaine de .org. et vous l’avez compris
   fr.wikipedia.org est un sous domaine de fr.wikipedia.org

   Il est possible d’avoir plusieurs sous-domaines ainsi qu’une
   délégation, c’est-à-dire une indication que les informations de ce
   sous-domaine sont enregistrées sur un autre serveur.

   On peut voir fr.wikipedia.org comme un sous domaine hébergé sur un
   serveur spécifique par exemple et de.wikipedia.com sur un autre serveur
   spécifique

   La résolution des noms de domaines est réalisée en parcourant la
   hiérarchie depuis le sommet et en suivant les délégations successives.


   Voyons maintenant comment se passe la résolution du nom de domaine avec
   un navigateur

   Imaginez que vous entrez fr.wikipedia.org dans votre navigateur. votre
   navigateur doit commencer par le résoudre en une adresse IP. tous
   simplement Parce qu’il faut qu’il sache à quel serveur se connecter.

   Ici, on va taper fr.wikipedia.org sur notre navigateur. Il va alors
   s’adresser à un serveur dit “récursif”.

   Pour information, les fournisseurs d’accès à Internet mettent à
   disposition de leurs clients ces serveurs récursifs par défaut quand il
   se connecte à Internet. Mais Il existe également des serveurs récursifs
   ouverts comme ceux de Google Public DNS ou OpenDNS ou Cloudfare

   Quand un serveur DNS récursif doit trouver l’adresse IP de
   fr.wikipedia.org, un processus itératif commence pour consulter la
   hiérarchie DNS du nom de domaine :
     * Ce serveur demande aux serveurs DNS de nom racine quels serveurs
       peuvent lui répondre pour la partie org.
     * Le serveur va indiquer quels serveurs connaissent l’information
       pour la zone wikipedia.org.
     * Ensuite, ce serveur donnera à son tour l’information pour avoir
       l’adresse IP du serveur hébergeant fr.wikipedia.org. car il connait
       déjà l’adresse IP du serveur hébergeant le sous domaine fr de
       wikipedia.org

   Et une fois que vous avez l’adresse IP de ce domaine, le navigateur y
   accède est affiche la page demandée

   DNSDNS recursifDomaine Name systemnom de domaineserveur DNS

Navigation des articles

   1 2 … 12 Suivant →

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
   #prev next Cookie connecté » Flux Cookie connecté » Flux des
   commentaires

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : ____________________ Rechercher

   Non classé

Comprendre le métier d’architecte technique

   20 septembre 2018 Samson Laisser un commentaire

   Je suis architecte technique et dans cet article, je vais vous
   expliquer le métier d’architecte technique.

   IFRAME:
   http://www.youtube.com/embed/MjSNAlPloSk?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Avant de savoir ce que fait un architecte technique, il faut d’abord
   savoir ce qu’est  l’architecture d’un SI. Dans le langage courant quand
   on parle d’architecture par exemple de pont, d’immeuble, de maison par
   exemple, on parle de plans de comment ils ont été conçus, structurés,
   organisés, ils ont été élaboré pour répondre à tels ou tels objectifs.
   L’architecture d’un SI, c’est la même chose, c’est comment est
   structuré le SI pour répondre aux objectif de l’organisation.

   Et ce SI, il est organisé en différentes 4 couches, et à chaque couche
   correspond un type d’architecture :
     * Architecture métier définit les processus métiers, la structure
       organisationnelle, les périmètres métiers des différentes
       application, c’est là aussi où on va mettre en avant les éléments
       stratégiques d’un projet
     * Architecture fonctionnelle : c’est la traduction en exigences
       fonctionnelles des besoins métier. On s’assure que les nouvelles
       évolutions respectent les besoins exprimés, et plus largement les
       objectifs de l’organisation.
     * Architecture applicative ou logicielle : c’est l’étape où on va
       traduire des besoins fonctionnels en fonctionnalités logicielles.
       C’est à cette étape que seront décrit les différents composants
       applicatifs d’une solution mais aussi la communication entre cette
       solution et les autres applications du SI
     * Et enfin le dernier niveau c’est l’Architecture technique
       correspond à la mise en oeuvre dans le SI de ce qui a été défini
       successivement dans les niveaux précédents.Et cette partie
       ’infrastructure regroupe tous moyens techniques qui constitue le
       socle technique sur lequel on va faire tourner les applications. Au
       sens large, l’infrastructure technique inclut les serveurs
       évidemment, mais aussi le réseaux, systèmes d’exploitation, bases
       de données, les protocoles de communications, etc.

   On parle d’ailleurs souvent d’architecte infrastructure pour désigner
   les architectes techniques. Et vous l’avez donc compris, moi en tant
   qu’architecte technique, je m’occupe de ce dernier niveau.

   En gros, je vais intervenir sur les projet ou demandes d’évolutions
   ayant impact sur l’architecture technique du SI (que ce soit des
   projets de l’infrastructure ou des nouvelles applications qui vont
   utiliser l’infrastructure)

   Sur la partie Infrastructure :
     * L’architecte technique participe à la définition des différentes
       briques techniques (hébergement cloud, virtualisation, stockage,
       middleware, etc) et évidemment il doit aussi garantir la cohérence
       de ces différentes briques techniques
     * Le but est d’avoir in fine des standards techniques pour répondre
       aux besoins des applications. Par exemple pour un besoin
       d’environnements virtualisés,, vous avez telle ou telle offre, pour
       les BDD ou OS, vous avez telle ou telle techno avec tel ou tel
       version, etc
     * Et c’est justement grâce à ces connaissances que l’architecte
       technique pourra accompagner la mise en oeuvre des applications sur
       le SI

   Sur le papier, ça a l’air simple mais ça ne l’est pas forcément dans la
   pratique :
     * D’un côté, le projet va arriver avec une expression de besoins, une
       feuille de route, les caractéristiques de la solution éditeur, des
       contraintes de coûts et de planning et des exigences techniques (en
       terme de perforamnce, de disponiblité ou d’intégrité, ou tout ce
       qui est SLA)
     * De l’autre côté, Un architecte a un cadre d’architecture à
       respester ou plutôt à faire respecter, avec des principes
       d’architecture, des bonnes pratiques, des normes, un catalogues de
       services d’infrastructures disponibles, des orientations
       stratégiques, etc
     * Et le but ca va être d’essayer de faire matcher tout ça pour
       répondre aux différents points structurants dont on vient de parler

   L’implémentation de cette application sur le SI sera décrite dans un
   dossier d’architecture rédigé par l’architecte technique. Et ce dossier
   d’architecture, c’est en gros comment on réponds aux différents besoins
   et exigences et autres contraintes :
     * comment les différents les composants applicatifs de l’application
       seront mis en production  dans le SI existant,
     * et du coup, dans ce DAT, je vais décrire tout ce qu’il faut pour
       que l’application puisse être mis en production : les machines
       nécessaires, les composants techniques à installer sur cette
       machine et dans quel datacenter se situe cette machine, comment
       cette nouvelle application s’intégre dans le SI, les services
       d’infra qu’elle va utiliser et les ouvertures de flux à faire qu’il
       lui faut pour communiquer avec le reste du SI, qu’est ce qui se
       passe en cas de problème, etc


   A la fin, je dois garantir au projet que la solution est exploitable et
   pérenne dans le SI :
     * Et c’est après la validation du DAT que le projet peut commander
       ses environnements, demander les ouvertures de flux et autres
       prérequis nécessaire pour mettre en production son application.
     * Et les équipes d’exploitation vont ensuite se baser sur ce DAT pour
       mettre en production l’application

   Par contre, même si l’architecte technique est responsable de la
   rédaction du DAT. La conception et la validation de la solution n’est
   pas décidée seul par l’architecte technique. Parce qu’il y a d’une part
   plusieurs parties prenantes qui valident ce DAT.

   Par exemple :
     * Les CDP,
     * les autres architectes, applicatif, fonctionnelles et des
       architectes d’entreprise,
     * La sécurité notamment les RSI
     * etc.

   D’autre part, L’architecte technique c’est un “expert” de haut niveau
   qui est donc assez généraliste pour lui permettre d’avoir une vision
   globale du système d’information. mais c’est surtout quelqu’un qui va
   travailler et s’appuyer sur plein de personnes référentes dans leur
   domaines que ce soit sur le réseau, les middlewares, exploitation, sur
   des services d’infrastructure mais aussi sur des experts sur des
   technos spécifiques.

   Là on parle d’acteurs en interne d’une organisation mais cela peut
   aussi être des prestataires externes que ce soit les editeurs, des
   intégrateurs, des infogérants, etc

   Voilà maintenant, vous savez ce que je fais en tant qu’architecte
   technique!

   architecte infrastructurearchitecte SIarchitecte techniquearchitecture
   SI

   Video

Comprendre l’attaque DDOS

   14 juin 2018 Samson Un commentaire

   IFRAME:
   http://www.youtube.com/embed/n4Zs0qcgjXI?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Pour vous expliquer le principe d’une attaque DDOS, je vais prendre
   l’image du marchand de glaces :

   Le marchand de glace fournit un service simple : il vend les glaces
   gardées au frais dans son camion. Avec ça, Les enfants sont contents et
   les parents ont enfin eux un bref moment de répit le temps que les
   enfants finissent leur glaces. Un monde en harmonie pendant un court
   instant.

   Sauf qu’une bande de sales mioches arrivent et ils ont juste une envie
   : foutre la merde. Leur but c’est juste que personne ne puisse avoir de
   glaces. Ils vont alors faire des demandes sans s’arrêter jusqu’à
   épuiser le marchand de glaces.

   Au bout d’un moment, le marchand de glaces, face à tant de
   sollicitations, il pète un câble, il ferme boutique et les vrais
   clients ne peuvent avoir leurs glaces.

   Eh bien ce que viennent de faire la bande de sales mioches, c’est une
   attaque DDOS.


   DDOS veut dire Distributed Denial of Service, que l’on peut traduire en
   francais par Attaque de deni de service distribué.

   Une attaque DDOS est réalisée simultanément par un réseau de machines
   d’où la notion d’attaque distribuée   En fait, ces machines ont été
   corrompues au préalable par le cybercriminel via la propagation de
   malwares. On appelle aussi “botnet” ce réseau de machines infectées.

   Il est à noter qu’avec l’essor de l’IoT (ou Internet des objets en
   français), les attaques DDOS gagnent en intensité puisque les
   cybercriminels enrôlent les équipements IoT non sécurisés dans les
   botnets.

   Le cybercriminel va alors exécuter une attaque DDos en ordonnant au
   botnet de saturer le service avec de nombreuses requêtes jusqu’à le
   rendre indisponible.c’est la notion de déni de service. Ce qui va alors
   au final empêcher les vrais utilisateurs du service de l’utiliser.

   Quand je parle de service, il faut le comprendre au sens large là j’ai
   prius l’exemple d’un serveur mais  cela peut être aussi un lien réseau,
   une infrastructure, un site web, une application, etc.

   Autre variante, ce sont les attaques DDoS basées sur la réflexion et
   l’amplification.

   Dans ce cas là, le cybercriminels vont tout simplement utiliser des
   machines accessibles sur Internet et donc non corrompues. Ces machines
   appelées des “réflecteurs” ont juste pour pour but de répondre à des
   requêtes émanant d’une source quelconque.

   Le cybercriminel va envoyer des requêtes à ces réflecteurs en utilisant
   l’adresse IP de la victime comme adresse IP source. Le cybercriminel
   fait alors une usurpation d’identité ou plutôt d’adresse IP pour être
   plus précis.

   Les réflecteurs pensent alors que c’est la victime qui a fait la
   requête et ils vont donc envoyer leurs réponses  aux requêtes vers la
   victime.

   Les réflecteurs vont alors créer un trafic non sollicités par la
   victime, qui subit alors une attaque DDOS. Et là où ce type d’attaque
   peut être dangereuse, c’est qu’il peut y avoir un effet
   d’amplification. En effet, Certains protocoles génèrent des réponses
   d’une taille très supérieure à celle de la requête. on peut citer par
   exemple les protocoles DNS (pour Domain Name System) ou NTP (Network
   Time Protocol).

   Cet effet d’amplification permet de saturer encore plus  rapidement la
   bande passante réseau de la victime, ce qui entraîne le déni de
   service.


   Les motifs des attaques DDOS peuvent être divers :

   Les attaques DDOS sont très courantes dans le monde du gaming. Que ce
   soit pour le fun, par représailles, ou par ennui, le but est de faire
   ralentir la bande passante d’un autre joueur (en saturant leur box par
   exemple), et voir même la faire tomber pour l’empêcher de jouer.

   Les attaques DDOS peuvent venir d’activistes comme par exemple avec les
   Anonymous qui mènent des campagnes d’attaques DDOS contre des sites
   gouvernementaux ou extrémistes

   Et enfin, pour les entreprises, cela peut être signe qu’une menace de
   grande ampleur se prépare. C’est pas l’attaque DDOS en soi qui est la
   menace pour les entreprises mais pour les criminels, cela peut être une
   première phase préparer pour une attaque plus importante.

   L’attaque DDOS peut permettre au cybercriminel de tester la capacité
   d’une entreprise à répondre à une attaque.

   L’attaque DDOS sert aussi à faire diversion en saturant les journaux et
   fichiers de données des équipement de sécurité pour brouiller les
   pistes. Ce qui permet aux cybercriminels durant cette période par
   exemple de masquer l’implantation d’un potentiel malware ou même
   l’extraction de données

   attaque de déni de servicecyber attaquecybersécuritéDDOSSSI

   Video

Dessinons l’iMac !

   14 juin 2018 Samson Laisser un commentaire

   Dans ce poste, j’ai envie de vous parler d’une actualité tech en
   dessinant en même temps. Bon, en vrai, j’ai bien envie de tester ce
   nouvel iPad que je me suis resté récemment. Et je me suis dis pourquoi
   pas le tester directement pour une vidéo.

   IFRAME:
   http://www.youtube.com/embed/jwDK7VocjKQ?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent


   Le sujet de cette vidéo est l’iMac qui fête d’ailleurs ses 20 ans cette
   année. Et dans cette vidéo, je reviens sur cet objet qui a vraiment
   marqué un tournant dans l’histoire d’Apple.

   Il y a 20 ans, en mai 1998, Steve Jobs annonce la sortie du premier
   iMac. Il faut savoir que la sortie de l’iMac est un évènement marquant
   dans l’histoire d’Apple pour plusieurs raisons.

   Premièrement, l’iMac marque le retour de Steve Jobs chez Apple. Il faut
   savoir que Steve Jobs a été viré d’Apple en 1985 à cause de mauvais
   résultats financiers. Sauf que cela n’a fait qu’empirer jusqu’à être au
   bord de la faillite. Dos au mur, c’est à ce moment que Steve Jobs a été
   rappelé en secours. Il va alors travailler sur l’iMac pour relancer
   Apple.

   En gros, si l’iMac ne marchait pas, c’en était fini d’Apple.

   Et heureusement pour Apple, l’iMac à remporté un énorme succès : avec
   plus de 800.000 unités vendues l’année de sa sortie, l’iMac à rapporté
   plus de 400 millions à Apple.

   Avec un processeur PowerPC G3 et un modem intégré, l’iMac offrait des
   performances solides pour un ordinateur grand public de l’époque. Mais
   Steve Jobs voulait d’un ordinateur tout-en-un optimisé pour surfer sur
   Internet. D’ailleurs, le i de l’iMac est pour “Internet”.

   Steve Jobs décide par ailleurs de supprimer le lecteur de disquettes,
   ce qui a été très critiqué car c’était la norme à l’époque. Apple a
   parié sur le fait qu’Internet, les réseaux locaux et les CD
   enregistrable deviendrait les nouvelles normes pour transférer et
   échanger des fichiers. Et c’est d’autant plus intelligent qu’ Apple a
   aussi décidé de remplacer les ports ADB, geoport et SCSI par une toute
   nouvelle norme à l’époque : le port USB. L’iMac est ainsi le premier
   ordinateur au monde à proposer exclusivement des ports USB. Et vous
   connaissez la suite pour l’USB.

   Apple a donc pris des risques et a gagné son pari.

   Niveau design, alors que les ordinateurs personnels de l’époque sont
   rectangulaires et gris, l’iMac possède des angles arrondis dans une
   couleur bleu azur translucide. D’autres coloris seront disponible que
   plus tard comme mandarine, citron vert, fraise, raisin…

   Le choix des couleurs a évidemment été mis en avant comme argument
   marketing par Apple.
   Bref, La popularité de l’iMac a permis donc de relancer Apple au bord
   de la faillite. Et au delà d’un succès financier, l’iMac c’est le
   retour d’Apple dans le cœur du grand public  avec un produit innovant
   et différent dans le monde de l’informatique.

   .


   Adobe DrawAppledessiniMaciMac G3iPadPowerPCsteve jobsUSB

   Video

Voyance connectée – Mon premier court métrage

   9 juin 2018 Samson Laisser un commentaire

   IFRAME:
   http://www.youtube.com/embed/HJ_Q2mKtyrI?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Je voulais le faire depuis un petit moment et ça y est : j’ai osé! J’ai
   sorti mon premier court métrage. Le sujet est l’insouciance que nous
   avons à partager nos données personnelles sur Internet (et notamment
   sur les réseaux sociaux). Cette insouciance peut faire tomber notre vie
   privée dans de mauvaises mains (ou yeux).

   Mon conseil : Soyez conscient que ce que vous partagez de vous sur les
   réseaux sociaux , parce que une fois sur Internet, cela sort de votre
   sphère privée et peut être à la portée d’inconnus.

   court métragedonnées personnellesfacebookinstagramreseaux
   sociauxtwittervie privée

   Non classé

La Blockchain pour les nuls

   25 avril 2018 Samson Laisser un commentaire

   IFRAME:
   http://www.youtube.com/embed/bKtFYnrDXFk?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&start=223&wmode=transparent

   La blockchain qui est juste présentée comme la plus grosse révolution
   depuis Internet. Rien que ça. Pourquoi?

   Parce que tout comme Internet, la blockchain va créer de nouvelles
   opportunités et faire tomber les barrières à l’entrée de nombreux
   secteurs d’activité aujourd’hui détenus par des gros acteurs.

   La Blockchain sera à la transaction ce qu’Internet a été à
   l’information. Et dans le cas de la blockchain, ce sont les acteurs qui
   jouent le rôle d’intermédiaire de confiance dans les transactions qui
   vont voir leur position être remise en question (banque, notaire, et
   même les plateformes numériques comme Uber ou AirBnb).


   Aujourd’hui une transaction financière entre 2 personnes nécessite
   l’intervention d’un tiers de confiance.
     * Coralie veut faire un virement à Christophe pour lui payer ses
       carottes,
     * Elle envoie l’ordre de transfert d’argent à sa banque,
     * La banque va vérifier si Coralie possède déjà bien le montant sur
       son compte et elle va aussi vérifier que c’est bien Coralie qui
       demande le virement,
     * Et si c’est le cas,  la banque va faire le transfert du montant
       demandé du compte de Coralie vers le compte de Christophe.

   Ensuite, le rôle de la banque est aussi de garder une trace de tout ce
   que possède ses clients et une trace de l’ensemble des transactions
   effectuées. Pour notre explication, on dira que la banque stocke toutes
   ces informations dans un grand livre de compte.


   Voyons maintenant comment avec la blockchain il est possible de
   s’affranchir de cet intermédiaire de confiance.

   Tout d’abord, avec la blockchain, ce livre de compte devient public .
   C’est à dire qu’il n’est plus détenu que par un seul acteur mais est
   distribué à tous : chaque personne possède alors une copie de ce livre
   de compte et peut consulter l’ensemble des échanges présents et passés.
   Toutes les personnes qui possèdent ce livre de compte constitue le
   réseau de la Blockchain.

   Reprenons le même exemple mais en appliquant les principes d’une
   transaction avec la Blockchain :
     * Coralie lance l’ordre de virement
     * Les différentes personnes du réseau vont alors vérifier dans leur
       livre de compte que Coralie possède bien le montant nécessaire pour
       la transaction.
     * Si c’est le cas, alors la transaction est validée.
     * Chaque personne va alors écrire cette transaction dans une nouvelle
       page de son livre de compte, ce qui met à jour tous les livres de
       compte de la blockchain.

   Vous l’avez compris avec la blockchain ce n’est pas un seul acteur
   central qui valide ou non une transaction mais c’est l’ensemble des
   membres du réseau.

   Maintenant imaginons que vous essayez de tricher par exemple en
   prétendant posséder plus ou en essayant de falsifier votre livre de
   compte, eh bien cela se va se remarquer car tous les autres verront que
   ce n’est pas ce qui est inscrit dans leur copie du registre. Ils
   contesteront donc l’information.

   Et si on y réfléchit bien, dans ce système, on n’a même plus besoin de
   monnaie physique.

   Dès que vous faites une transaction financière, il suffit de l’annoncer
   et tous les livres de compte mettront à jour l’information. Les livres
   de comptes font foi sur ce que chacun possède et sur l’historique des
   transactions. Vous pouvez vérifiez ce que vous possédez et ce que les
   autres possèdent. Et oui c’est le principe des monnaies virtuelles
   comme le bitcoin. On y reviendra plus tard.

   Dans la vraie vie évidemment, ce ne sont pas des livres qui stockent et
   traitent l’information mais des machines avec de la puissance de calcul
   comme des ordinateurs ou des serveurs.

   Techniquement, la blockchain peut donc être vu comme une base de donnée
   distribuée sur différents noeuds de stockage. Ces noeuds de stockage,
   ce sont les utilisateurs qui vont apporter avec leur machines de la
   puissance de calcul et de l’espace de stockage pour faire fonctionner
   la blockchain.

   La blockchain est donc un système décentralisé maintenu par les
   participants du réseau eux-mêmes.


   Tout comme le livre de compte est constituées des pages de
   transactions, la blockchain est une chaîne formée de “blocs de
   transactions”.

   Chaque échange effectué entre ses utilisateurs est enregistrés sous
   forme de « blocs » qui, mis bout à bout, forme donc une « chaîne ».
   D’où la notion de “blockchain” chaîne de blocs.

   Chaque bloc de la blockchain contient :
     * un ensemble de transactions, évidemment
     * Ensuite un bloc est caractérisé par un “hash”, le hash c’est une
       suite de caracteres unique servant à identifier le bloc, c’est
       l’empreinte du bloc en gros
     * Enfin, le bloc contient aussi le “hash” du bloc précédent qui est
       donc l’identifiant unique du bloc qui le précède (pour garantir
       l’ordre du bloc dans la blockchain)


   Bon, maintenant, je vais entrer un peu plus dans le détails pour vous
   expliquer ce hash. Cela fait appel à des notions de cryptographie mais
   pas de panique je vais vous expliquer ça simplement.

   En gros, un algorithme de hashage : c’est une fonction mathématique qui
    va transformer un ensemble de données de départ en une suite de
   caractères.

   Cette suite de caractère est donc le hash et il est spécifique et
   unique aux données qui ont été prises au départ, ce qui veut dire que
   Tout changement même infime dans le message implique un important
   changement du hash.

   Ensuite, les fonctions de hashage ont une spécificité : elles ne
   marchent que dans un sens. Il n’est donc pas possible de retrouver le
   message initial à partir du hash,

   On ne peut rien faire de la seule suite de caractère du hash

   Le hash permet seulement d’avoir la garantie que les données de départ
   n’ont pas été modifié par quelqu’un.

   Parce que s’il est modifié, le hash sera modifié et vous le verriez
   tout de suite.

   Ici par exemple, on peut voir de façon évidente que le hash du bloc 5
   de Christophe est différent, on peut donc en déduire que son bloc a été
   modifié.


   Revenons maintenant au hash d’un bloc. Un nouveau bloc est identifié
   par son hash comme on l’a vu.

   Et ce hash est notamment calculé à partir du:
     * hash du bloc précédent
     * et Les transactions validées du bloc


   Passons maintenant au dernier point important de la Blockchain liée à
   la cryptographie : la signature électronique.

   Chaque demande de transaction dans la Blockchain doit être signé par
   l’émetteur pour être validé.

   Ainsi, si Nicolas essaye de dire que « Coralie donne 1000 BTC à
   Nicolas », les autres ne vous croiront pas tant qu’ils n’auront pas la
   preuve que c’est bien Alice qui a envoyé le message, et cette preuve
   c’est la signature d’Alice.

   Pour comprendre le concept de signature électronique, on va rapidement
   voir le concept de cryptographie asymétrique.

   Prenons encore l’exemple de Coralie qui veut signer son message, pour
   ça, elle va avoir besoin de génèrer un paire de clés de chiffrement :
     * Une clé privée, qui ne doit être communiquée à personne. Alice doit
       être la seule à posséder cette clé privée
     * Et une clé publique, qui peut et doit être communiquée à tout le
       monde. Ces clés publique sont stockés sur chaque ordinateur du
       réseau.
     * Ces 2 clés publiques et privées sont liés mathématiquement. On va
       voir maintenant en quoi.


   Coralie veut lancer un ordre de virement (ex : »Je donne 10 BTC à
   Christophe), elle va chiffrer ce message à l’aide de sa clé privée.
   Chiffrer un message, ça veut dire le rendre incompréhensible. Pour
   pouvoir lire ce message de nouveau, il est nécessaire de le déchiffrer
   et le seul moyen c’est d’utiliser la clé publique associée créée par
   Coralie. En fait seule cette clé publique est capable de déchiffrer les
   messages qui ont chiffres avec cette clé privée.

   Pour déchiffrer ce message sensée venir  de Coralie, les autres
   personnes du réseau vont donc utiliser la clé publique donnée par
   Coralie.

   Si on a réussi à déchiffrer son message à l’aide de la clé publique de
   Coralie , alors on sait que que le message est bien de Coralie, parce
   que seul Coralie possède la clé privé associé.

   C’est comme ça que dans la blockchain, les différentes personnes du
   réseau s’assure bien de l’identité du donneur d’ordre

   Point suivant encore lié à la cryptographie et c’est le dernier
   rassurez-vous!

   Dans la Blockchain, il n’y a pas de vrais noms.  Et heureusement! Vous
   n’avez tout de même pas envie que tout le monde sache ce que vous
   possédez et ce que vous faîtes comme transactions. Dans la pratique, on
   transfère les actifs d’une adresse à une autre.

   L’adresse est tout simplement une hash de la clé publique. Quand un
   utilisateur génère une paire de clés, il génère donc automatiquement
   une adresse à partir de sa clé publique. C’est à cette adresse que les
   BTC seront envoyé. Grâce à ce système, l’anonymat des utilisateurs est
   préservés

   C’est justement pour pouvoir garder l’anonymat que les cybercriminels
   demandent des versements en bitcoins via leur ransomware.



   Les 2 blockchains les plus connus sont aujourd’hui Bitcoin
   (principalement) et Ethereum qui commence à faire parler d’elle. Ces
   blockchains fonctionnent avec leur propre cryptomonnaie

   La blockchain Bitcoin a une cryptomonnaie qui porte le même nom,
   Bitcoin donc alors que la cryptomonnaie de la BC Ethereum est l’Ether.
   D’ailleurs Ethereum permet bien plus que les transactions en
   cryptomonnaie mais ça on verra plus tard dans la vidéo avec les smart
   contracts.

   A noter que les noeuds du stockage sont aussi appelés les “mineurs”. Et
   Lorsque l’on parle de « miner » des bitcoins, cela veut dire utiliser
   la puissance de calculs des machines pour la résolution des problèmes
   mathématiques pour générer un nouveau bloc. Les mineurs qui ont permis
   de créer un nouveau bloc sont ensuite rémunérés pour ce travail avec de
   nouveaux bitcoins


   Maintenant, prenons un exemple de transaction en bitcoin pour voir
   comment ça marche maintenant qu’on a tous les principes de la
   blockchain en tête.
     * Coralie veut transférer un bitcoin à Christophe. Elle transmet
       cette demande à l’ensemble du réseau.
     * Les mineurs vont vérifier l’ensemble de la blockchain pour
       s’assurer que Coralie possède bien ce bitcoin mais ils vont aussi
       vérifier que l’ordre donné émane bien de Coralie
     * Si tout est OK, alors chaque mineur travaille à forger un bloc
       contenant cette transaction
     * Le premier mineur qui réussit à créer le bloc transmet ce bloc aux
       autres membres pour vérification.
     * Pour qu’un nouveau bloc soit validé, il faut qu’il y ait un
       consensus entre les différents membres du réseau.
     * Revenons à notre transaction. Une fois le bloc validé par les
       membres du réseau, chacun ajoute ce dernier bloc deans leur copie
       de la blockchain
     * Et enfin, Christophe possède alors un nouveau bitcoin

   Chaque nouvelle transaction ajoutée à la blockchain, ne pourra être
   effacée. Cela permet d’assurer la validité et l’authenticité d’une
   transaction

   Jusqu’à présent on a parlé que de cryptomonnaies mais on peut très bien
   étendre ce principe de transferts à d’autres actifs

   C’est par exemple le cas avec les titres de propriétés.

   Au Ghana, une majorité des territoires ruraux ne sont pas enregistrés
   dans un cadastre officiel. Bitland, une organisation basée au Ghana,
   propose alors aux institutions et aux personnes d’enregistrer les
   titres de propriété sur la blockchain. La blockchain fournit un
   enregistrement permanent et vérifiable, et permet de cette façon
   d’aider le gouvernement ghanéen à résoudre les conflits.

   Autre exemple d’actifs stockés dans la blockchain? Les diplômes. Le
   Massachussets institute of Technology  ou MIT commence à utiliser la
   blockchain pour certifier le diplôme de leurs étudiants. Le MIT associe
   le diplôme avec l’identifiant unique de l’étudiant. Ces données sont
   cryptées, grâce à une clé privée du MIT, et stockées dans la
   blockchain.

   Les jeunes diplômés peuvent ensuite transmettre leur diplôme aux
   recruteurs, qui peuvent vérifier l’authenticité des informations sur un
   site du MIT.

   Et à terme On peut même imaginer stocker dans la blockchain tous les
   documents légaux  (par exemple des certificats de naissance, mariage,
   divorce, testament, etc).

   Autre cas d’usage : le caractère inaltérable et transparent de la
   blockchain permet de garantir la traçabilité d’un actif.

   Et c’est pour ça que Carrefour a créee la première blockchain
   alimentaire en Europe. Le but est de garantir aux consommateurs  une
   traçabilité complète des produits commercialisés. Ainsi, tous les
   poulets d’Auvergne de Carrefour intégre un QR Code. Avec ce QR code,
   vous accèdez à l’historique des événements de la vie, de l’élevage, de
   la mort et du transport du poulet. Le client pourra s’assurer que le
   poulet a été élevé dans les conditions exigées par Carrefour.

   Et enfin il y a une dernière utilisation de la blockchain qui très peu
   évoqué et qui pourtant peut être à l’origine de nombreuses
   d’innovations : ce sont les smart contracts. Et c’est ce que je vais
   vous expliquer maintenant.

   Un contrat légal traditionnel définit les règles d’un accord entre
   plusieurs parties. Un Smart Contract va lui figer ces règles dans une
   Blockchain. Mais ce n’est pas tout : Dans un second temps,le Smart
   contract permet de déclencher automatiquement des actions en fonction
   des conditions fixés par le contrat, et tout ça sans nécessité d’action
   humaine. C’est pour ça qu’on les qualifie de « smarts »ou intelligents
   en français

   Concrètement, c’est du code logiciel qui fonctionnent sur une chaine de
   blocs et est déclenché par des données externes

   Allez un petit exemple de smart contracts :

   Et c’est d’ailleurs en s’appuyant sur la Blockchain Ethereum que la
   société d’assurance Axa a lancé son premier smat contract Fizzy qui une
   assurance voyage pour les retards de vol d’avion entre Paris et les
   Etats-Unis.

   Ce smart contrat déclenche automatiquement l’indemnisation de l’assuré
   en cas de retard de son avion  et tout ceci sans avoir besoin d’une
   intervention humaine


   Et comme je l’ai dit au début, la blockchain a le potentiel pour
   « ubériser Uber ». Avec la  blockchain, les utilisateurs peuvent
   effectuer des transactions de pair-à-pair c’est à dire directement
   entre eux : que ce soit avec un chauffeur, un loueur ou un autre
   particulier.

   Ce qu’il est possible de se passer des plateformes intermédiaires,
   comme Uber, AirBnB, Blablacar qui constituent aujourd’hui le cœur de la
   révolution numérique apportées par Internet


   bitcoinblockchaincryptomonnaiedisruptionethereuminternetmonnaie
   virtuellerevolutiontransaction

Navigation des articles

   ← Précédent 1 2 3 … 12 Suivant →

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
   #Cookie connecté » Flux Cookie connecté » Flux des commentaires Cookie
   connecté » Flux de résultats de la recherche pour
   "{search_term_string}"

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : {search_term_string} Rechercher

Rien de trouvé

   Désolé, mais rien ne correspond à votre recherche. Veuillez réessayer
   avec des mots différents.
   Rechercher : {search_term_string} Rechercher

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
   #next Cookie connecté » Flux Cookie connecté » Flux des commentaires

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : ____________________ Rechercher

   Non classé

Le serverless pour les nuls

   19 janvier 2019 Samson Laisser un commentaire

   Dans cet article, je vais donc vous expliquer les concepts les plus
   importants à retenir de l’architecture serverless

   IFRAME:
   http://www.youtube.com/embed/HaehHcLVCTo?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   L’architecture serverless est un modèle de cloud computing dans lequel
   le client peut créer et exécuter ses applications sans devoir gérer la
   partie infrastructures et notamment les serveurs, d’où le terme
   “serverless”, ou “sans serveur” en français.

   Evidemment, l’application, et notamment son code, s’exécute toujours
   sur des serveurs. Parce que oui, on a toujours besoin des
   infrastructures IT pour faire tourner les applications.

   La particularité du modèle serverless elle est simple : le développeur
   doit juste fournir son code. Tout le reste est pris en charge par le
   fournisseur de services cloud.

   Le modèle “serverless” va donc faire abstraction de la partie
   infrastructures IT  pour le développeur. Ce qui veut dire que Le
   développeur s’affranchit ainsi des contraintes de l’infrastructure et
   peut se concentrer sur son travail : le développement.

   Evidemment, il y a des règles à respecter pour rentrer dans le modèle
   serverless

   Premièrement, le développeur va devoir repenser la conception de son
   code.  En effet, le code d’exécution n’est plus celui de toute
   l’application, le code d’exécution doit être décomposée en fonctions.
   Chaque fonction a un seul et unique but. Et l’ensemble de ces fonctions
   forme l’application.

   D’où le terme « Function as a Service » (FaaS) souvent associé au
   “serverless”. Le développeur a la responsabilité de coder sa ou ses
   fonctions. Et Le reste, c’est à la charge du fournisseur de services
   cloud.

   En gros, pour le développeur, ça veut dire :
     * Plus besoin de définir le nombre de serveurs, leur puissance, plus
       besoin de mettre en service, de mettre à l’échelle, d’entretenir,
       de superviser, de les mettre à jour, et toutes autres actions
       concernant la gestion des serveurs.
     * Mais aussi et c’est important : plus besoin de gérer le déploiement
       de son application  sur les différents serveurs.
     * Finis aussi les problématiques de stockage, de load balancing ou
       d’autres problématiques réseau, etc

   Pour le développeur, il faut juste déposer son code et le reste c’est
   le fournisseur de services cloud qui s’en occupe!

   Passons au fonctionnement de cette « fonction »

   Cette fonction va être déclenchée par des événements. Par exemple si la
   fonction est sollicitée par une requête HTTP. La requête déclenche
   l’exécution du code et donc la fonction. Et ici, la requête va
   déclencher la fonction qui va interroger une base de données (donc une
   action sur un autre service)

   A noter que les événements déclencheurs peuvent être divers : que ce
   soit l’ajout d’un fichier sur un espace de stockage ou alors une
   nouvelle entrée dans une BDD

   Ensuite, l’hébergeur cloud garantit le scaling automatique de la
   fonction selon les pics de trafic. Imaginons que la fonction B est
   beaucoup plus sollicitée que les autres, dans ce cas là, la fonction B
   sera exécutée plusieurs fois, cad que plusieurs « unités de travail »
   de la fonction B tourneront en parallèle pour répondre à la charge de
   travail en hausse. Ici B1, B2 et B3 sont la même instance de la
   fonction B mais tournant en en même temps pour répondre au pic de
   charge.

   Et a contrario lors de faible charge, seules les unités nécessaires
   sont éxécutées. Ici la fonction A ne nécessite qu’une seule unité de
   travail pour traiter la demande.

   Et s’il n’y a pas de sollicitation de la fonction alors elle n’est pas
   exécutée. Comme la fonction C ici que vous ne voyez pas car elle n’est
   pas lancée car non sollicitée.

   Pour aller plus loin sur ce modèle d’architecture par fonctions, je
   vous invite fortement à regarder sur les microservices où j’explique
   plus longuement les spécificités de ce type d’architecture.

   Autre point structurant du modèle serverless : la facturation

   La facturation est basée sur les ressources consommées ou le temps réel
   d’exécution du code, avec quand même la milliseconde comme unité de
   paiement. Ce qui veut aussi dire qu’en l’absence de trafic,
   l’utilisateur ne paie rien.

   C’est là tout l’intérêt économique du modèle “serverless”, fini le coût
   des serveurs : leur achats, leur gestion, leur entretiens, etc. surtout
   quand ceux ci sont sous utilisés

   Et en plus, ce modèle de paiement à l’usage incite à l’optimisation de
   la performance du code. Réduire le temps d’exécution d’une application
   serverless permet de diminuer le coût du service, et donc la facture à
   la fin du mois

   Exemple concret : AWS Lambda

   Maintenant que vous avez compris le principe, voyons quelques services
   serverless, le plus connu est AWS Lambda. AWS Lambda est un service
   d’Amazon Web Services (AWS) et il va suivre les principes que l’on a vu
   :
     * Il exécute le code seulement quand c’est nécessaire.
     * AWS lambda s’adapte automatiquement à la charge de travail
     * Et le client ne paye que le temps de calcul utilisé.

   Le prérequis est d’avoir un code dans un langage compatible avec AWS
   Lambda comme Node.js, Java, C#  et Python et respecter le temps limite
   d’exécution de la fonction

   Là je parle d’AWS parce que c’est l’offre que je connais le mieux. Mais
   c’est la même logique derrière Azure Functions de Microsoft et Google
   Cloud Functions de Google Cloud.

   Allez maintenant, on va voir à quoi ressemble une architecture
   serverless sur AWS

   Architecture serverless AWS

   L’architecture serverless est la plupart du temps une conception en
   fonctions qui vont déclencher des actions sur d’autres services.

   Dans notre exemple, les 2 fonctions sont développées en utilisant AWS
   Lambda et sont exposés via une API avec le service AWS API Gateway. Ces
   API sont le point d’entrée qui déclenche la fonction Lambda
   voulu.  Ici, on est sur un site web proposant la vente de cookies. Ici
   le client va demander la liste des cookies vegan. Dans ce cas, la
   fonction Lambda « Liste » extraire la liste des cookies avec que des
   ingrédients vegans. Ce qui déclenche le traitement du service dans le
   service de base de données DynamoDB. Ensuite, Lorsque le client fait un
   achat de cookies, il déclenche une fonction lambda « Achat » qui
   enregistre cette entrée dans AWS DynamoDB

   Ensuite, l’architecture serverless est adaptée pour la construction de
   workflows automatisés basées sur les fonctions Lambdas qui vont servir
   de liens entre les différents services AWS.

   Dans cet exemple : Un nouveau fichier est déposé sur un bucket S3
   (bucket S3 étantun service d’espace de stockage dans le cloud). Cette
   action déclenche une fonction qui va le décompresser et l’insérer dans
   DynamoDB. Cette écriture dans Dynamo DB va lui même déclencher une
   autre fonction Lambda qui va lancer le service SNS pour envoyer un SMS
   de notification

   Les limites du modèle

   Le serverless n’est pas adaptés à tous les cas d’usage. Les contraintes
   de temps d’exécution du serverless ne sont pas adaptées pour
   l’exécution de tâches lourdes et complexes (comme le traitement vidéo
   par exemple). et plus généralement les applications qui ont un trafic
   constant. Il y a donc une nécessité de bien concevoir l’architecture
   d’une application en amont : cela permet de décider si une architecture
   serverless convient pour l’application.

   Enfin, dernière contrainte de ce modèle : c’est la forte dépendance au
   fournisseur de services cloud et plus particulièrement à son framework
   : chaque fournisseur de service cloud impose des règles différentes
   (timeouts, langages supportés, etc.). Ce qui veut dire que pour migrer
   après ça va être très compliqué. Vous êtes souvent donc prisonnier des
   règles du fournisseur de services cloud qui peuvent changer.


   AWS lambdacloud computingFaaSgoogle cloud functionserverless

   Non classé

La Transformation digitale / numérique pour les nuls

   21 octobre 2018 Samson Laisser un commentaire

   Le développement technologique s’accélère et les innovations sont de
   plus en plus nombreuses.  Face à ces changements inévitables, les
   entreprises ont le choix :
     * Soit elles s’adaptent en s’appropriant ces nouvelles technologies
       pour innover
     * Soit elles peuvent ne pas réagir et mourir, dépassé par les
       concurrents qui auront réussi à tirer bénéfices de ces nouvelles
       technologies.

   Et c’est en ça que la transformation numérique est vitale pour les
   entreprises.

   Alors en quoi consiste la transformation numérique( ou appelé aussi
   transformation digitale)?

   IFRAME:
   http://www.youtube.com/embed/HjAxHRMc7mI?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent


   Il s’agit d’un processus continu permettant aux entreprises d’intégrer
   les nouvelles technologies, comme par exemple le cloud, l’IoT ou
   l’intelligence artificielle, et ceci à tous les aspects de leurs
   activités et aux différents niveau de l’entreprise.

   Mais attention, la transformation numérique, ce n’est pas que des
   problématiques technologiques, il y a un aspect humain très important.
   Que ce soit par exemple une nouvelle culture à mettre en place, une
   nouvelle façon de gérer l’humain ou une nouvelle approche des métiers
   et des process, etc

   La transformation numérique est donc une transformation globale de
   l’entreprise.


   L’objectif c’est de capitaliser sur ces nouvelles technologies pour
   créer de la valeur et bénéficier de nouvelles opportunités business.

   Sinon il y a risque de se faire damer le pion face par des concurrents
   plus rapide, ou alors par les GAFA championne du numérique mais aussi
   par nombreuses start-up qui menace les positions des plus grandes
   entreprises.


   Maintenant qu’on a vu les enjeux, voyons 3 piliers cles d’une
   transformation numérique réussie  :

   Le premier est l’expérience client qui doit être une priorité. Pour
   l’optimiser, les entreprises doivent tirer le meilleur du digital pour
   pouvoir satisfaire, fidéliser et faire rêver le client. Sinon il ira
   voir ailleurs. Les nouvelles technologies du digital permettent ainsi
   de créer de la valeur pour le client.

   Pour être un peu plus concret, je vais prendre l’exemple des nouvelles
   technologies autour de la donnée. La donnée est considéré aujourd’hui
   par tous comme un élément clé dans cette révolution numérique.

   Les entreprises qui vont se demarquer sont celles qui vont maitriser
   les technologies capable de capitaliser sur ces données pour en créer
   de la valeur. par exemple avec le big data, et l’intelligence
   artificielle,


   Le deuxième pilier est une organisation tournée vers l’agilité . Dans
   un marché changeant et incertain; être agile est fondamental pour mieux
   s’adapter aux changements et inbtégrer rapidement les nouvelles
   technologies. Les projets sont alors plus nombreux et plus rapides à
   mettre en place.

   Cela passe par la simplification de l’organisation de l’entreprise mais
   aussi les bonnes pratiques pour permettre d’être plus réactif. Par
   exemple les principes du lean start-up, les méthodes agiles ou le
   devops.

   L’objectif de tout ça est d’avoir surtout avoir un  « time to market »
   rapide! Le time to market c’est le délai entre la naissance d’une idée
   et sa mise en place sur le marché. Ce qui veut dire que plus le Time To
   Market est rapide, plus l’entreprise aura des chances de saisir les
   opportunités business en proposant des produits ou services intégrant
   les dernières technologies

   Essayer, s’adapter et évoluer en permanence devient un mode de
   fonctionnement pour les entreprises.


   Enfin dernier pilier :  La transformation est avant tout une question
   d’humains !Rassembler les collaborateurs autour d’une vision commune
   est essetntiel. La simplification de l’organisation et donc la
   suppression des silos favorise le travail collaboratif, l émerge,ce
   d’idées et les prises d’initiatives, tout ça étant nécessaires pour
   développer l’innovation.

   Il est aussi primordial attirer, développer et fidéliser les meilleurs
   profils. Parce que oui, c’est aussi une guerre des talents.


   digitalnumériquetransformation digitaletransformation numérique

   Video

La petite histoire de Linux (en dessins)

   21 octobre 2018 Samson Laisser un commentaire

   Aujourd’hui, je vais vous raconter des anedoctes sympas sur la
   naissance de Linux

   IFRAME:
   http://www.youtube.com/embed/IquNF_DXcF8?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent


   Première chose à retenir sur Linux parce qu’il y a pas mal de confusion
   :
     * Linux est un noyau, c’est pour ça qu’on parle d’ailleurs de “Linux
       kernel”. Kernel veut dire noyau en francais.
     * Et en gros, c’est ça qui permet de démarrer, de faire la liaison
       entre le matériel et le système de la machine, ainsi que de faire
       la liaison entre les applications installées sur la machine.

   Le hic c’est qu’on ne peut pas utiliser ce noyau seul. Il faut un
   environnement (des logiciels autour du noyau afin que tout marche bien
   : des pilotes,, de quoi gérer la machine, etc).

   C’est là où la notion de distribution apparaît :
     * On parle de distribution GNU/Linux quand il s’agit d’une solution
       prête à être intallée par l’utilisateur final sur sa machine.
     * Cette distribution GNU Linux  comprend un noyau Linux ainsi que des
       logiciels sous Licence GNU, en gros on va dire que ce sont des
       logiciels libres qui complètent le noyau pour avoir un système
       d’exploitation complet.
     * Il est à noter qu’on peut aussi très bien trouver des distributions
       qui ne contiennent pas seulement les logiciels GNU, il y a parfois
       d’autre logiciels non GNU.

   Bref, c’est ce noyau Linux + des logiciels complémentaires qui vont
   permettre d’avoir un OS complet.

   Voici des exemples de systèmes d’exploitation “Linux » :
     * Red Hat Enterprise Linux
     * Fedora Linux
     * Debian Linux
     * Ubuntu Linux

   Ensuite il y a aussi souvent une autre confusion entre Linux et
   UNIX. Alors quelle différence?
     * Déjà pour l’anecdote sachez que le système d’exploitation “Linux” a
       été créé dans le but de fournir un équivalent libre au système
       Unix.
     * Linux est un clone d’UNIX en version libre et écrit à partir de
       zéro par Linus Torvalds, le createur du noyau Linux donc,  avec
       l’aide d’une équipe d’informaticiens.
     * Par contre UNIX regroupe un ensemble de systèmes d’exploitation
       différents. Ce ne sont donc pas juste des noyaux mais bien des OS
       complets
     * Comme exemples de système Unix connus, on a HP-UX, IBM AIX, Solaris
       Sun

   Maintenant on va un peu s’intéresser au père de Linux :

   En 1991, l’étudiant finlandais Linus Torvalds qui a alors 22 ans,
   commence le développement d’un noyau de système d’exploitation
   alternatif à MINIX, qui est un clone d’UNIX utilisé à des fins
   pédagogiques pour des étudiants. Linux va au final créer avec son
   nouveau noyau une alternative à UNIX.

   Après quelques mois, Il diffusa le code de son travail via un compte
   FTP de l’Université d’Helsinki. Et pour la petite anecdote le dossier
   contenant ces travaux a été nommé « Linux » par un administrateur du
   serveur FTP.  Linux pour « Linus UNIX » ou en français l’UNIX de
   Linus. Et par la suite, ce nom restera.

   Linus publie par la suite ses travaux sur Internet en demandant à
   d’’autres développeurs de l’aider pour le finaliser. Aujourd’hui Linus
   continue de diriger le développement du noyau Linux


   Concernant la mascotte officielle de Linux, il s’agit d’un manchot du
   nom de TUX. TUX étant un acronyme composé des mots Torvalds et UNIX.  A
   noter que beaucoup pensent à tort que la mascotte de Linux est un
   pingouin, notamment parce qu’en anglais, le mot « manchot » se dit «
   penguin », mais TUX est bien un manchot

   La différence ?

   Le pingouin est un oiseau de l’hémisphère nord qui peut voler, alors
   que le manchot est un oiseau qui ne vit que dans l’hémisphère sud et
   qui est incapable de voler En gros hein!


   Aujourd’hui, bien que peu présent sur les postes de travail, Linux est
   beaucoup plus présent dans le monde des serveurs

   Le noyau Linux équipe aussi la plupart des systèmes embarqués (box,
   robots, aérospatial, drones…). mais aussi les supercalculateurs

   Et pour terminer, comme vous le savez sûrement déjà, Linux domine le
   marché des smartphones via l’OS Android qui s’appuie sur un noyau Linux


   AndroidGNULinusLinuxMINIXnoyauOSsysteme d exploitationTorvaldsTUXUNIX

   Video

Les algorithmes nous contrôlent-ils ?

   30 septembre 2018 Samson Laisser un commentaire

   Aujourd’hui on va parler des algorithmes, le buzzword du moment!

   IFRAME:
   http://www.youtube.com/embed/sp-uCwbs6H8?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Quand le moteur de recherche Google te propose des résultat de
   recherche, c’est en fait un algorithme qui va décider des résultats qui
   te seront présentés et leur classement.

   Quand Netflix te conseille une série, c’est pareil, c’est un algorithme
   qui va te faire ces suggestions.

   Les news qui vont apparaître sur ton fil d’actualité et leur ordre,
   c’est aussi un algorithme. Pareil pour l’ordre des photos et des
   stories sur Intagram, là aussi c’est un algorithme qui organise tout
   ça.

   Le pouvoir des algorithmes est d’autant plus important que le numérique
   fait partie intégrante de notre vie (smartphone, les objets connecté,
   service en ligne, applications, etc). Et quand tu regardes un peu ce
   qu’en pense les médias c’est encore plus anxiogène. Tu as juste
   l’impression d’être l’esclaves des algorithmes, qu’on a perdu notre
   libre arbitre qu’ils nous lavent le cerveau.

   Alors, Les algorithmes nous contrôlent-ils tous?  Je fais cette vidéo
   pour un peu demystifier tout ça justement. Qu’est ce qu’il y a derrière
   les algorithmes, tout ce que vous devez savoir sur le sujet et savoir
   quels sont les vrais enjeux des algorithmes et leur réel pouvoir.


   Déjà voyons ce qu’est un algorithme : un algorithme, c’est tout
   simplement une suite d’instructions permettant de résoudre un problème.
   Et ces instructions doivent pouvoir être applicable mécaniquement, sans
   réfléchir, pour arriver à un résultat.


   Les premiers algorithmes auquels on pense ce sont forcément les
   algorithmes mathematiques. Rappelez vous en primaire… La fameuse
   division euclidienne pour trouver le plus grand commun diviseur. Vous
   avez dû apprendre cet algorithme pour arriver à trouver le plus grand
   commun diviseur entre 2 nombres entiers.

   M’enfin, au dela des mathématiques, il y a bien plus simple comme
   algorithme dans la vie de tous les jours,

   Lorsque vous suivez une recette de cuisine pour faire un gateau. Si
   vous suivez bien la recette avec les bon ingrédients, à la fin le
   resultat c’est le gâteau. La recette c’est en fait un algorithme avec
   une suite d’instructions à éxécuter étape par étape pour faire ce
   gâteau.

   Transposé à l’informatique, les algorithmes permettent tout simplement
   de dire à un programme informatique tout ce qu’il doit faire. Les
   concepteurs de programmes informatiques vont définir dans l’algorithme
   une suite d’opérations logiques pour un arriver à un résultat
   voulu. Tout ça sera ensuite codé dans un langage informatique adapté
   pour pouvoir être appliqué automatiquement par le programme
   informatique.


   Ce sont les algorithmes qui définissent les actions des bots. Ce sont
   les algorithme qui vont décrire les tâches spécifiques que doivent
   réaliser ces programme informatique. Par exemple, les algorithme sont
   derrière les moteur de recherche, les fameux bot twitter qui font des
   actions spécifiques comme retweeter ou liker un mot clé spécifiques
   défini, et ce sont les algorithmes qui sont derrière l’intelligence des
   chatbot comme ceux sur messenger ou bien même les assistants vocaux
   comme Siri ou Alexa.

   Evidemment, il y a quand même une grosse différence entre l’algorithme
   simple du bot twitter qui fait que retweeter bêtement ce qu’on lui a
   dit  aux algorithmes de facebook, netflix ou amazon qui sont capable de
   s’adapter aux consommateurs.

   Cette différence c’est ce qu’on appelle le machine learning.

   Le machine learning c’est en gros quand l’algorithme va utiliser vos
   données pour apprendre et faire des actions plus efficaces. Les
   algorithmes ne sont maintenant plus seulement les instructions de base
   programmées par un développeur. Ils sont capable d’apprendre.  La
   machine peut générer de nouvelles instructions en apprenant à partir à
   la masse de  données qui lui sont fournies.  Ces données sont notamment
   des données personnelles que vous leur fournissez sur vous

   Et c’est comme ça que les algorithmes semblent parfois bien connaître
   nos goûts, nos envies et nos besoins.  Et là vous pensez aux
   suggestions d’Amazon qui des fois sont vraiment bluffantes car c’est ce
   que vous vouliez, la playlist spotify qui vous ait proposé et qui
   correspondent bien à vos goûts


   je vais vous prendre un exemple sympa.

   L’objectif  de netflix c’est de vous faire rester le plus longtemps sur
   sa plateforme parce que c’est l’abonnement qui va rémunérer netflix. Du
   coup, pour que vous restiez sur la plateforme le but c’est que vous
   consommiez toujours plus de contenu.

   La mission de l’algorithme c’est de faire en sorte que vous consommiez
   toujours plus de contenu

   C’est pour ça que l’algorithme doit apprendre à connaitre vos goûts
   pour vous pousser vers les séries ou films susceptibles de vous faire
   continuer à regarder plus.

   Saviez vous que Netflix va jusqu’à personnaliser les vignettes des
   series en fonction des données que netflix possède sur vous.

   Cela a été fait avec Stranger things :

   L’algorithme Netflix est capable de « prédire la probabilité que vous
   cliquiez sur un contenu en fonction d’une image donnée » et la vignette
   avec la plus forte probabilité de vous faire cliquer sera affichée par
   l’algorithme Netflix. C’est comme ça que Netflix arrive à vous faire
   regarder le plus de série possible

   Que ce soit Instagram, Facebook, Amazon, Youtube, aujourd’hui ces
   algorithmes complexes ont besoin de données sur vous pour être plus
   performant. Un des éléments clés à retenir c’est que sans vos données
   personnelles, ces algorithmes ne seraient pas aussi puissants. D’où
   l’importance de bien maitriser ses données personnelles en ligne.

   En tout cas, avec le machine learning, on entre dans la notion
   d’intelligence articielle. On parle de machine learning pour désigner
   la capacité d’une machine à apprendre et donc évoluer.

   La machine acquiert alors  de nouvelles connaissances qu’on ne lui
   avait pas programmés au départ. La machine apprend, s’améliorer et
   ‘évoluer d’elle même grâce à de nouvelles données. C’est pour cela
   qu’on parle d’intelligence artificielle.


   Avec ce que l’on vient de voir, on peut constater une chose : ces
   algorithme ne sont pas NEUTRE. et c’est important de le prendre en
   compte. Ils ont été conçus et codé par des développeurs qui leur a
   transmis une façon de fonctionner et un objectif à atteindre que ce
   soit les news sur fil d’actualité sur facebook, l’exemple des résultats
   de recherches Google, l’ordre des stories et photo sur Instagram, etc

   On a l’impression que c’est objectif mais il est important de retenir
   que ce des gens qui derrière tout ça on mis en place des critères de
   classement en fonction de leurs objectifs et de ses préjugés, de
   contraintes. Quand on parle d’algorithme on a l’impression que c’est
   neutre. Alros que cela peut masquer des convictions politiques, des
   objectifs financiers, des stratégies d’entreprises, etc. D’ailleurs les
   GAFA restent très discret sur le fonctionnement des algorithmes. et
   comme on l’a vu dans la vidéo c’est parce qu’il y a de réels enjeux
   derrière.

   C’est important d’avoir du recul sur l’action des algorithmes et de
   savoir qu’ils ne sont pas neutre pourempêcher que les GAFA et des
   entreprises du numérique de  transférer leur responsabilité sur les
   algorithmes. Lorsque facebook a été utilisé ou plutot leur algorithme
   détourné pour propager des fake news notamment pour les élections
   américaines de 2016, c’est de la faute de facebook, l’algorithme c’est
   juste l’épouvantail. Facebook a une responsabilité de l’utilisation de
   sa plateforme et de ce qui en est fait (et là je vous parle meme pas
   des données).

   Les gens qui ont reussi à hacker ont détourné l’algorithme à leur
   avantages pour diffuser des fake news. C’est à Facebook d’en assumer la
   responsabilité, ils sont responsable de leur algorithme.


   algorithmesBig datadonnées personnellesGAFAIAintelligence
   artificiellemachine learning

   Video

Le DNS pour les nuls

   30 septembre 2018 Samson Laisser un commentaire

   IFRAME:
   http://www.youtube.com/embed/qzWdzAvfBoo?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Sur Internet, quand vous voulez accéder à un site web via votre
   navigateur, on va utiliser ce que l’on appelle un nom de domaine, par
   exemple cookieconnecté.fr, Wikipedia.org, Youtube.com …

   Bref, c’est l’adresse du site web que vous tapez sur votre navigateur.

   Dans la réalité, votre navigateur, lui il va avoir besoin de l’adresse
   IP du serveur sur lequel est hebergé votre site web. Par exemple
   194.153.205.26

   L’adresse IP est un numéro d’identification qui est attribué  à chaque
   appareil connecté à un réseau informatique utilisant l’Internet
   Protocol (d’ailleurs le IP c’est pour Internet Protocol). En gros, ca
   veut dire que chaque ordinateur connecté à internet possède une adresse
   IP.

   Sauf que vous l’avez compris ce serait un peu compliqué pour nous de
   retenir ces adresses IP. Et c’est là qu’intervient le DNS (Domain Name
   System) qui va “traduire” ces noms de domaines en adresses IP. La
   résolution de noms de domaines, c’est la corrélation entre les adresses
   IP et le nom de domaine associé.

   Les serveur DNS sont tout simplement des serveurs qui font la
   correspondance entre les adresses IP et les noms de domaine associés.


   Maintenant, voyons comment tout ça marche un peu plus dans le
   détail. Je vais vous expliquer maintenant à la notion de Hiérarchie
   DNS

   Le système des noms de domaine est en fait une hiérarchie dont le
   sommet est appelé la racine. On représente cette dernière par un point
   “.” pour info ce point n’apparait pas dans les addresses de site web
   qu’on utilise sur Internet mais c’est bien le plus haut niveau.

   Les domaines se trouvant immédiatement sous la racine sont appelés
   domaine de premier niveau “.fr”, .com, .org, etc (ou top domain level
   en français)

   Dans un nom de domaine, les domaines successifs sont séparés par un
   point, les noms de domaines supérieurs étant à droite. Le domaine
   wikipedia.org. est un sous-domaine de .org. et vous l’avez compris
   fr.wikipedia.org est un sous domaine de fr.wikipedia.org

   Il est possible d’avoir plusieurs sous-domaines ainsi qu’une
   délégation, c’est-à-dire une indication que les informations de ce
   sous-domaine sont enregistrées sur un autre serveur.

   On peut voir fr.wikipedia.org comme un sous domaine hébergé sur un
   serveur spécifique par exemple et de.wikipedia.com sur un autre serveur
   spécifique

   La résolution des noms de domaines est réalisée en parcourant la
   hiérarchie depuis le sommet et en suivant les délégations successives.


   Voyons maintenant comment se passe la résolution du nom de domaine avec
   un navigateur

   Imaginez que vous entrez fr.wikipedia.org dans votre navigateur. votre
   navigateur doit commencer par le résoudre en une adresse IP. tous
   simplement Parce qu’il faut qu’il sache à quel serveur se connecter.

   Ici, on va taper fr.wikipedia.org sur notre navigateur. Il va alors
   s’adresser à un serveur dit “récursif”.

   Pour information, les fournisseurs d’accès à Internet mettent à
   disposition de leurs clients ces serveurs récursifs par défaut quand il
   se connecte à Internet. Mais Il existe également des serveurs récursifs
   ouverts comme ceux de Google Public DNS ou OpenDNS ou Cloudfare

   Quand un serveur DNS récursif doit trouver l’adresse IP de
   fr.wikipedia.org, un processus itératif commence pour consulter la
   hiérarchie DNS du nom de domaine :
     * Ce serveur demande aux serveurs DNS de nom racine quels serveurs
       peuvent lui répondre pour la partie org.
     * Le serveur va indiquer quels serveurs connaissent l’information
       pour la zone wikipedia.org.
     * Ensuite, ce serveur donnera à son tour l’information pour avoir
       l’adresse IP du serveur hébergeant fr.wikipedia.org. car il connait
       déjà l’adresse IP du serveur hébergeant le sous domaine fr de
       wikipedia.org

   Et une fois que vous avez l’adresse IP de ce domaine, le navigateur y
   accède est affiche la page demandée

   DNSDNS recursifDomaine Name systemnom de domaineserveur DNS

Navigation des articles

   1 2 … 12 Suivant →

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
   #prev next Cookie connecté » Flux Cookie connecté » Flux des
   commentaires

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : ____________________ Rechercher

   Video

Les microservices expliqués simplement

   25 mars 2018 Samson Laisser un commentaire

   IFRAME:
   http://www.youtube.com/embed/ucHwp1jUS2w?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&start=73&wmode=transparent

   Pour donner une définition des microservices, on peut dire que c’est
   une approche d’architecture logicielle où une application est
   décomposée en plusieurs petits services. Et ces services sont souvent
   spécialisés dans une seule tâche.

   A noter que quand on parle de service, il faut comprendre service
   métier, c’est à dire un groupe de services techniques qui fournissent
   une fonctionnalité avec un sens métier.

   Si on prend l’exemple d’un site de vente en ligne, on aura des
   microservices par exemple pour le panier, la page d’accueil,
   l’historique, l’inventaire, etc

   Ensuite, l’architecture microservices a été inventée pour répondre aux
   problèmes rencontrées par les applications dites monolithes.

   Une application monolithe est une application qui a pour ambition de
   traiter toutes les demandes possibles et répondre à un maximum de cas
   d’usage. Sauf qu’avec le temps, les applications ont tendance à grossir
   en intégrant toujours plus de nouvelles fonctionnalités mais en
   supprimant rarement les anciennes fonctionnalités, même lorsqu’elles
   deviennent inutiles ou obsolètes. Et avec le temps les différentes
   briques développent des interdépendances entre elles. Et avec ça, la
   quantité de code augmente et ce code devient de plus en plus complexe.

   Il devient alors impossible d’avoir en tête un modèle global du projet.
   On se retrouve devant une application difficile à maîtriser et à faire
   évoluer.

   Enfin, plus un projet est gros, plus il est critique pour l’entreprise,
   et moins on va prendre de risques pour tester des nouveautés, on va
   donc préférer la stabilité à l’innovation

   La réponse de l’architecture microservices à ce problème est simple :
   découper l’application en différents modules fonctionnels, en
   microservices.

   Chaque microservice exécute une partie spécifique et unique de
   l’application. Et ces services peuvent être accédés par le client via
   l’API du microservice correspondant. Le but de l’architecture
   microservices est de redonner un maximum d’agilité et d’évolutivité à
   une application.

   Côté technique l’architecture microservices est très souvent couplé à
   la technologie des conteneurs, et notamment Docker.

   Quant aux conteneurs, Le principe est d’avoir un conteneur par unité de
   microservices. Ainsi, Chaque microservice a son propre environnement
   d’exécution pour héberger son code. Avec les conteneurs, Il est donc
   très facile en fonction du besoin d’adapter le nombre de microservices,
   à la hausse comme à la baisse.

   SI un service est plus demandé lors d’un pic de charge, il suffit de
   créer plus de conteneurs fournissant ce microservice. A contrario,
   quand la demande de ce service diminue, il suffit de ne garder que le
   minimum de microservices pour couvrir la demande. Dans l’architecture
   microservices, il suffit juste d’adapter le nombre de ce microservice
   au besoin alors que dans les application monolithe, il aurait fallu
   modifier la totalité de l’application à cause des interdépendance.

   Et c’est en étant couplé avec l’utilisation des conteneurs que Chaque
   microservice devient autonome vis à vis des autres microservices
   Un microservice peut être alors modifiée, supprimée ou déployée sans
   impacter les autres microservices.

   Ce qui veut dire qu’avec une application découpée en microservices, il
   est plus simple de cibler les différentes parties impactées d’une
   application lors d’une évolution. Ce qui facilite la modification des
   parties concernées sans risque pour le reste de l’application non
   impliqué.

   Du coup, les mises à jour et nouvelles fonctionnalités peuvent être
   déployées beaucoup plus facilement et rapidement, rendant le
   déploiement continu possible.

   Concernant l’organisation humaine, la taille des projets est limitée à
   une équipe de quelques personnes. Chaque équipe est autonome et va donc
   gérer son organisation et sa base de code.
   Une équipe est alors libre des choix techniques en fonction de leurs
   besoins propres.

   Terminons par des points d’attention à propos des microservices
   Et tout ce que l’on vient de voir doit permettre aux entreprise d’avoir
   un atout très très important et c’est d’ailleurs ça qui va pousser à
   l’adoption des microservices.

   Et cette carotte c’est le fait d’avoir un time to market plus rapide.
   Le time to market c’est le délai de mise sur le marché.cad le temps
   qu’il y a entre la naissance d’une idée jusqu’à son lancement sur le
   marché. Aujourd’hui un time to market rapide est devenu un facteur
   stratégique majeur, il permet à une entreprise de prendre un avantage
   concurrentiel décisif sur ces concurrents en intégrant la toute
   dernière innovation dans ses produits ou d’adapter ses produits aux
   nouveaux besoins du marché.

   Comme on l’a vu tout à l’heure les microservices permettent justement
   de déployer plus rapidement et facilement. Ce qui veut dire être
   capable de s’adapter plus rapidement à la demande du marché et aux
   nouveautés.

   Par contre et il est important de souligner :

   Plus les itérations sont nombreuses et rapides (notamment dans le cadre
   d’un déploiement continu), plus cela va demander cela va demander aux
   équipes de se synchroniser rapidement.
   Cela va demander une organisation mature pour la communication et
   coordination entre les équipes et une synchronisation de leurs
   priorités et objectifs pour qu’ils soient alignés avec les enjeux
   business


   architecture logicielleconteneurDockermicroservice

   Video

Qu’est ce qu’un bot? (chatbot, botnet, spambot…)

   11 mars 2018 Samson Laisser un commentaire

   IFRAME:
   http://www.youtube.com/embed/BZRr1ABDkKA?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Le terme Bot est la contraction du mot anglais“robot”. Et les bots sont
   des programmes informatique développés à l’origine pour effectuer des
   tâches répétitives.

   Principalement parce que cela permet de faire économiser du temps aux
   humains et d’autre part parce que les bots sont bien plus efficace pour
   ce genre de tâches répétitives. Du coup il existe autant de variété de
   bot que de tâches automatisables. Et comme nous les humains, on est des
   grosses feignasses, on demande aux bots de faire plein de trucs à notre
   place.

   Voyons quelques exemples pour mieux comprendre le grand nombre mais
   aussi la diversité des bots sur le web.

   Premier exemple, les robots d’indexation chez Google. Ces bots passent
   leur temps à parcourir le web, à analyser des tonnes d’informations
   pour pouvoir indexer les pages web pour le moteur de recherche. C’est
   d’ailleurs comme ça que Google arrive à proposer des résultats
   pertinents. C’est donc le boulot d’indexation de ces bots qui t’évite
   de perdre des heures à regarder chaque page web une par une à la
   recherche de la bonne information.

   Autre exemple : Sur twitter, des comptes twitter réagissent à des mots
   clés spécifiques. Par exemple si tu tweetes le mot Bitcoin, tu verras
   des comptes débarquer liker ton tweet ou même te répondre. Ce sont des
   compte twitter qui peuvent être tenus par des vraies personnes mais qui
   sont aidés par des bots. Le but de ces bots c’est de repérer toutes les
   personnes intéressées par le sujet et essayer de capter leur attention.

   Ensuite, Il est aussi possible de créer des bots pour lire des vidéos
   Youtube  ou mettre des likes automatiquement. Il y a des entreprises
   qui vendent des likes.

   Bref tout ça pour dire qu’on peut faire faire et qu’on fait déjà faire
   beaucoup de choses sur internet par des bots, ce qui explique qu’ils
   sont en plus grand nombre en terme de trafic sur le web que les
   humains.

   Bon là c’étaient des exemples de bots qui exécutent des tâches simples
   et basiques. Mais avec le progrès, certains bots deviennent des
   applications à part entière avec une gamme très large de
   fonctionnalités. En effet, certains intégrent même des programmes
   d’Intelligence Artificielle. Prenons l’exemple des des chatbot qui sont
   très à la mode en ce moment.

   Alors le chatbot, c’est un logiciel programmé pour simuler une
   conversation en langage naturel par messagerie d’où le terme “chat”.

   C’est le cas avec les bots messenger de facebook : tu peux demander le
   temps qu’il fait dehors avec le chat Bot Poncho ou commander une pizza
   via le chatbot de Pizzahut.

   Plus besoin de lignes de commande, suffit juste de leur poser une
   question comme si on s’adressait à un autre humain. Et le chatbot va au
   besoin affiner la demande à travers une conversation pour mieux
   comprendre le besoin et ainsi fournir le service demandé.

   Comme ça tu n’as plus qu’à demander à ton chatbot. Et le chatbot lui va
   s’occuper de s’interfacer avec la bonne application ou base de données
   pour répondre à ta demande. Ces chatbots se comporte donc comme des
   assistants personnels.

   Et le niveau suivant de ces bots assistants personnels c’est de
   s’affranchir de l’ordinateur ou du mobile, on peut par exemple citer
   Google Home ou Alexa d’Amazon. Dans ce cas, il suffit juste de parler,
   c’est encore plus simple et plus naturel.

   Bon, Là j’ai parlé des bots sympas qui aident les humains mais il
   existe aussi des mauvais bots dont les actions ont une finalité
   malveillante. Par exemple, il existe une version mauvais bot
   d’indexation Google, c’est le spambot.

   Les spambots parcourt le web à la recherche des adresses mail qu’il
   trouve sur des sites web ou de forums de discussions par exemple. Le
   but de construire des listes d’adresses pour l’envoi de spam.

   Les mauvais bots ne sont que des actions malveillantes automatisés
   après tout.

   Enfin, une catégorie de mauvais bot bien plus dangereux : les Botnets.

   Les botnets désignent un réseau de machines zombies, c’est à dire
   contrôlés à l’insu des utilisateurs par un cybercriminel.

   Les botnets malveillants peuvent par exemple :
     * Réaliser des opérations de phishing ;
     * Infecter d’autres machines par diffusion de malwares ;
     * Participer à des attaques de déni de service (qu’on appelle aussi
       DDoS) ;
     * Récupérer des informations sur les machines compromises (mots de
       passe, informations personnelles ou données bancaire).

   AIautomatisationbotbotnetchatbotIAintelligence artificielle

   Video

Le chiffrement SSL/TLS pour les débutants

   27 février 2018 Samson Un commentaire

   Bonjour à tous!

   Dans cette vidéo je vais vous parler de chiffrement des communication
   sur le web. Plus concrètement c’est lorsque vous surfez sur des sites
   en https. Alors oui, vous savez maintenant que le S c’est pour dire que
   la communication est sécurisée car chiffrée.

   Et dans cette vidéo, je vous explique comment tout ça marche dans cette
   vidéo.



   IFRAME:
   http://www.youtube.com/embed/7W7WPMX7arI?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Mais voyons ce qu’est le chiffremement web avec un exemple :
     * Lorsque vous vous connectez sur le site de votre banque, la
       connexion se fait toujours en https pour des raisons de sécurité
     * Vous pouvez vérifier ce sera toujours le cas (ou alors changez de
       banque!)
     * Mais que se passerait-il si la communication se faisait en HTTP?

   Eh bien c’est simple, toutes les informations échangées transiteraient
   en clair. Ce qui veut dire qu’une personne malveillante peut
   intercepter les échanges avec votre banque et donc avoir toutes les
   informations qui y transitent

   En fait le HTTPS c’est une connexion HTTP dans un tunnel chiffré
   SSL/TLS. Et ce tunnel va sécuriser vos échanges car mêmce si une
   personne malveillante intercepte vos échanges, les informations sont
   chiffrées et donc incompréhensibles pour elles.

   SSL veut Secure Sockets Layer. TLS veut dire Transport Layer Security.
   SSL et TLS sont des protocoles de sécurisation des échanges sur
   Internet. Aujourd’hui c’est TLS qui est utilisé, SSL étant obsolète.
   Mais on parle parfois de SSL/TLS pour parler juste de TLS.


   Maintenant voyons ce qui se passe derrière ce chiffrement SSL/TLS.

   Le chiffrement consiste à transformer vos données afin de les rendre
   illisible grâce un algorithme de chiffrement et une clé de chiffrement

   La clé de chiffrement est utilisé par un algorithme, pour chiffrer et
   déchiffrer des données utiles (l’information qu’on veut faire
   transiter). La clé de chiffrement c’est une donnée (en gros c’est une
   suite de bits comme une phrase ou une série de chiffres) qu’on peut
   voir comme un mdp. Un algorithme de chiffrement c’est juste une méthode
   de chiffrement, cad une façon de rendre inintelligible vos données.

   Pour pouvoir lire ces données de nouveau, il est nécessaire de
   connaître l’algorithme et la clé de chiffrement pour les déchiffrer


   Maintenant que vous avez compris ça, passons à la notion de
   cryptographie symétrique :
    1. Ici Alice et Bob ont la même clé secrète.
    2. Alice veut envoyer un message à Bob. Elle veut que personne d’autre
       que Bob ne puisse lire ce message. Du coup, elle prend sa clé
       secrète et va chiffrer le message avec
    3. Elle envoie le message chiffré à Bob
    4. Lorsque Bob recoit le message d’Alice, il ne peut pas encore le
       comprendre à la reception. Il faut d’abord qu’il déchiffre le
       message avec la même clé secrète. Et c’est seulement là qu’il
       pourra lire le message
    5. Et si Bob veut répondre à Alice de façon sécurisé, il peut utiliser
       la clé secrète pour chiffrer sa réponse et ensuite l’envoyer à
       Alice.

   Il y a donc une seule clé pour chiffrer et déchiffrer un message

   Le Gros problème de la cryptographie symétrique c’est l’échange de ces
   clés. En effet, Le fait que les 2 personnes. doivent utiliser la même
   clé impose d’avoir un canal sécurisé pour l’échange de la clé parce que
   si quelqu’un d’autre arrive à s’emparer de la clé… il sera capable de
   lire le message…

   Passons maintenant à la cryptographie asymétrique

   Le principe du chiffrement asymétrique repose sur l’utilisation de 2
   clefs :
     * on appelle une des 2 clefs la clef privée et l’autre la clef
       publique.
     * Quand l’utilisateur chiffre avec la première clef, il peut
       déchiffrer avec la deuxième clé
     * Quand l’utilisateur chiffre avec la deuxième clef, il peut
       déchiffrer avec la première clef.
     * Peu importe l’ordre des clés utilisés parce qu’en fait ces 2 clés
       ou algorithme de chiffrement sont liés mathématiquement

   Reprenons avec Alice qui a maintenant une clé privée et une clé
   publique :
     * La clef privée n’est jamais transmise à personne (ça porte bien son
       nom d’ailleurs).
     * Par contre, Alice peut diffuser sa clé publique à n’importe qui,
     * Donc là Alice a envoyé sa clé publique à Bob pour que les 2 puisse
       communiquer

   Voyons maintenant comment ça marche :
    1. Ici Bob et Alice se sont transmis leur clé publique et garde leur
       clé privé
    2. Bob veut envoyer un message à Alice et veut que seul Alice puisse
       lire le message. Il chiffre donc son message avec la clef publique
       d’Alice
    3. Alice déchiffre le message avec sa clef privée (il n’y a qu’elle
       qui possède cette clef). Alice est la seule à pouvoir déchiffrer
       les messages qui lui sont adressés
    4. De façon similaire, Si Alice veut répondre à Bob. Alice utilise la
       clef publique de Bob pour envoyer le message;
    5. Bob utilisera sa propre clef privée pour le déchiffrer le message

   Ce procédé assure la confidentialité de l’échange c’est-à-dire être sûr
   que Alice et Bob sont les seuls à échanger.

   Bob est sûr que seul Alice peut lire son message puisque Bob a utilisé
   la clef publique d’Alice pour chiffrer son message. Seule la clé privé
   d’Alice peut déchiffrer le message de bob. Bob est donc sûr que seule
   Alice peut lire le message et inversement pour Alice avec la clef
   publique de Bob

   Ensuite la cryptographie asymétrique garantit aussi l’authenticité de
   l’expéditeur :
     * C’est-à-dire que pour Bob c’est être sur le message d’Alice vient
       bien Alice)
     * Eh oui parce que si Bob réussit à déchiffrer le message avec la clé
       publique d’Alice c’est que le message a été chiffré avec la clé
       privée d’Alice
     * Tous ceux qui ont la clé publique peuvent déchiffrer le message
       d’Alice, mais seule Alice possède sa clé privé
     * Si Bob arrive a déchiffrer le message avec la clé publique d’Alice
       il sait que le message est bien d’Alice

   Le problème va venir de la transmission de la clé publique. Notamment
   si une personne malveillante, qu’on va appeler M pour la suite, se
   positionne entre Alice et Bob, et se fait passer pour l’un d’eux et
   donne sa clé publique à la place. C’est l’attaque du MITM ou de l’homme
   du milieu en français

   Il va diffuser une clé publique à Bob en se faisant passer pour ALice.
   Bob croit alors que c’est la clé publique d’Alice. Alice et Bob ont
   tous les deux la clef publique de M, en pensant qu’ils ont celle de
   leur interlocuteur. M intercepte et modifie l’échange de clefs entre
   Alice et Bob.

   Du coup, lorsque Alice veut envoyer un message à Bob, elle va l’envoyer
   en chiffrant avec la clé publique supposé appartenir à Bob. En fait, M
   va intercepter le message, il va le déchiffrer avec sa clé privé et
   lire le message. Ensuite pour ne pas éveiller les soupçon, il va
   chiffrer le message avec la clé publique de bob et envoyer le message à
   Bob.

   Comme ça Bob déchiffre avec sa clé privé pour lire le message. M est
   donc capable de lire les conversations entre les 2 et de récupérer des
   informations importantes.

   Et à l’inverse, quand bob veut échanger avec alice, il utilise la clé
   publique de M pour chiffrer et M fait la même chose cad qu’il
   intercepte le message, l’ouvre, le lit et le rechiffre avec la clé
   publique d’alice.

   Pour éviter que probleme de MITM, il faudrait pouvoir certifier
   l’identité du porteur de cette clé. Et ça c’est le rôle du certificat.

   Un certificat  est un fichier avec ensemble de données contenant :
     * une clef publique (au minimum)
     * des informations pouvant identifier la personne : nom, e-mail,
       localisation…
     * des informations liées au certificat, notamment sa date de validité
     * Et une signature électronique d’une autorité de certification

   La signature électronique est la preuve le certificat a bien été
   vérifiée par l’autorité de certification puisque qu’il y a sa
   signature. Elle est la garantie de son intégrité (cad la preuve que le
   document n’a pas subit d’altération entre l’instant où il a été signé
   par son auteur et celui où il a été consulté).

   A noter que la signature électronique du certificat c’est la
   combinaison de vos information et de votre clé publique, tout ça
   chiffré par la clé privé de l’autorité de certification

   une Autorité de Certification est l’institution responsable d’émettre
   ces certificats et elle garantit que les informations contenus dans ces
   certificats sont correctes.

   Dans notre cas, si Alice veut créer son certificat, il faut qu’elle
   fournisse sa clé publique et des informations sur elle à l’autorité de
   certification et des sous (parce que ce n’est pas gratuit), qui elle
   vérifie tout ça, L’autorité de certification va créer un certificat
   pour Alice avec la signature électronique de l’AC,

   Le certificat atteste donc  que la clef publique du certificat
   appartient bien à la personne désignée dans le certificat.


   Maintenant que vous avez toutes ces notions en tête, on peut passer à
   l’explication du chiffrement SSL/TLS.

   Imaginons que vous voulez vous connecter à votre banque, vous allez
   taper l’adresse de votre banque en https sur votre navigateur :
    1. Vous allez envoyer une demande de connexion sécurisée à votre
       banque
    2. Votre banque va alors vous envoyer son certificat avec sa clé
       publique
    3. Votre navigateur vérifie la signature du certificat et sa validité.
       Il faut savoir que le navigateur a déjà un certain nombre de clés
       publique d’AC dans sa base de données
    4. Ensuite le navigateur va prendre la clé publique de l’AC qui a
       certifié le certificat de la banque.
    5. Il va déchiffrer la signature du certificat, s’il y arrive. Cela
       veut dire que le certificat est de confiance car seul l’AC possède
       sa clé privé
    6. Si tout est OK, le client et le serveur négocie ensemble pour se
       mettre d’accord sur un algorithme de chiffrement ainsi qu’une clé
       secrète commune qu’ils vont utiliser pour cette session d’échange,
       connus de 2 seulement comme dans la cryptographie symétrique
    7. C’est avec cette clé que vous allez chiffrer et déchiffrer vos
       échanges avec votre banque et donc communiquer de façon sécurisé

   chiffrementchiffrement webclé de chiffrementclé privéeclé
   publiquecryptographiecryptographie asymétriquecryptographie
   symétriquehttpHTTPSman in the middle

   Non classé

Démystifier le RGPD / GDPR (avec la CNIL)

   10 février 2018 Samson Laisser un commentaire

   Vous avez dû surement voir énormément de titres racoleurs sur le RGPD :
     *         “Etes-vous prêt pour le RGPD?”
     *         “Attention, le RGPD arrive! Préparez vous !”
     *         “Faites le quizz pour savoir si vous êtes conforme au RGPD”
     *         “Le TOP 10 des raisons pour se mettre au RGPD, le 4ème va
       vous étonner!” (Bon OK, ça je l’ai inventé)

   Tout ça montre que le RGPD est un sujet qui suscite beaucoup
   d’interrogations. Et c’est pour cette raison qu’avec la CNIL, on a
   décidé de faire cette vidéo FAQ spécial RGPD pour répondre à vos
   questions.

   IFRAME:
   http://www.youtube.com/embed/OUMGp3HHel4?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&start=836&wmode=transparent




   Petit rappel du RGPD

   RGPD veut dire Règlement général sur la protection des données. On voit
   aussi souvent le terme GDPR qui est la traduction en anglais pour
   General data protection Regulation.

   Il s’agit du texte de référence européen en matière de protection des
   données personnelles pour les résidents de l’Union européenne. En gros,
   le RGPD va harmoniser la régulation des données personnelles  dans
   l’ensemble des pays de l’Union Européenne.

   Et Il est applicable à partir du 25 mai 2018.

   Par donnée personnelle on entend « toute information se rapportant à
   une personne physique identifiée ou identifiable » donc, à la fois des
   données de type nom, prénom, un numéro d’identification, des données de
   localisation, un identifiant en ligne, etc,



   Q1 de Philippe par mail : Vous parlez des structures qui vont être
   impactées dans votre vidéo  mais il semble après avoir surfé sur le Web
   que toutes les entreprises ne sont pas concernées.

   Pourriez-vous me dire précisément quels sont les critères qui font
   qu’une structure doit mener des actions en lien avec RGPD ?

   La règle d’or, c’est que le RGPD s’applique à une organisation à chaque
   fois :
     * qu’ elle traite des données personnelles,
     * qu’un résident européen est directement visé par un traitement de
       données.

   En d’autres termes cela veut dire que le RGPD s’applique aussi bien sur
     *  une organisation établie sur le territoire de l’Union européenne
     *  qu’une organisation hors UE qui met en œuvre des traitements pour
       fournir des biens et des services aux résidents européens.

   Exemple : Les entreprises US comme Uber, les GAFA ou les sites de
   ecommerce chinois doivent donc respecter le RGPD dès lors qu’ils
   ciblent les résidents européens.

   Le RGPD s’applique à tous les organismes quelque soit leur taille, leur
   secteur ou leur caractère public ou privé.

   Le RGPD concerne donc :
     *         Les entreprises
     *         Les organismes publics,
     *         Les associations
     *         Ainsi que les sous-traitants dont les activités rentrent
       dans ce cadre

   Toutes les entreprises doivent respecter le règlement.

   Mais en fonction de la sensibilité des données, de leur volumétrie et
   des impacts des données sur le business, le travail de conformité au
   RGPD de l’organisation sera différent.

   Exemple : Une grosse entreprise multinationale (de grande surface par
   exemple) qui traite de volumétrie importante de données aura des
   problématiques plus importantes sur la gestion et le suivi, et
   l’organisation interne de ses données.

   Alors qu’une startup de santé qui gère peu de clients mais qui traite
   des données relatives à leur santé (donc avec un fort impact sur les
   libertés des personnes). Cette startup va avoir un plus gros travail de
   sécurisation des données (peu de données mais des données très
   sensibles)

   Voici les types de données considérées comme sensibles
     * des données qui révèlent l’origine prétendument raciale ou
       ethnique, les opinions politiques, philosophiques ou religieuses,
       l’appartenance syndicale,
     * des données concernant la santé ou l’orientation sexuelle,
     * des données génétiques ou biométriques,
     *  des données d’infraction ou de condamnation pénale,

   Enfin concernant les structures impactées, il faut aussi prendre en
   compte les sous traitants. Et c’est un grand changement du RGPD, il est
   à noter que les sous-traitants ont désormais une responsabilité propre
   et sont tenus de respecter des obligations spécifiques.

   Ils ont notamment une obligation de conseil auprès du responsables de
   traitement (donc leur client) et doivent donc l’aider à respecter le
   règlement, ou encore une obligation d’assurer la sécurité des données
   qui leur sont confiées.

   Le responsable du traitement (l’entreprise qui contracte avec le
   sous-traitant) n’est donc plus le seul responsable. Le sous-traitant
   l’est aussi.

   Donc avec le RGPD, le responsable de traitement et le sous-traitant
   pourront être sanctionnés !


   Q2 Quel impact aura le #RGPD pour le monde associatif ? Des infos
   précises au sujet de la mise en conformité de ces structures ?

   Oui cela concerne les associations comme on l’a vu. Et voici plus
   concrètement les actions pour la mise en conformité au RGPD pour les
   associations.

   Une petite association qui souhaite refaire son site et qui prévoit de
   collecter des données devra notamment prévoir des mentions
   d’information :
     *  informer les personnes de qui est derrière la collecte,
     *  combien de temps seront conservé les fichiers
     *  la finalité des données collectées
     *  et comment les personnes peuvent exercer leurs droits

   Pour information, Vous avez même un Générateur de mentions dans les
   liens dans la description (qui a été fait par la CNIL pour vous aider :
   https://www.cnil.fr/fr/modeles/mention

   Et comme l’association traite des données (un fichier d’adhérents, un
   fichier RH sur ses salariés…), elle devra :
     * tenir un registre des traitements de ces données.
     * être en mesure de répondre à des sollicitations d’une personne de
       qui on a récupéré des données à accéder à ces informations (accès,
       modification et droit suppression)
     * penser à prévoir des clauses sur la protection des données dans le
       contrat qu’elle passe avec un sous traitant.


   Q3 Si je ne suis pas une organisation mais que je collecte des données
   personnel sur mon site je rentre dans le cadre de cette loi?

   Cela dépend de la finalité, si c’est pour une activité exclusivement
   personnelle, le RGPD ne s’applique pas.

   Mais si c’est dans le cadre pro et que vous tentez par exemple d’en
   tirer des revenus comme avec bannières publicitaires, vente de données,
   partenariats, etc, ça rentre dans le champ du RGPD

   Autre cas, si c’est fait dans le cadre pro et même si vous ne retirez
   aucun bénéfice par exemple en tant que consultant d’une société X, vous
   donnez des conseils sur un blog pro, le RGPD s’applique

   Et pour rappel, dans tous les cas, la protection de la vie privée est
   un  principe énoncé à l’article 9 du code civil et même dans la Charte
   des droits fondamentaux de l’UE et ça, ça concerne tout le monde !



   Q4 : Le DPO c’est que pour les grandes entreprises ?

   NON!

   Toutes les organisations peuvent désigner un délégué. Dans certains
   cas, désigner un DPO est obligatoire.

   Pour rappel, le DPO (Data protection officer) ou Délégué à la
   protection des données, c’est le « Chef d’orchestre » de la conformité
   en matière de protection des données au sein de son organisme,

   Ses missions vont être  :
     * d’informer et de conseiller l’organisation, ainsi que leurs
       employés ;
     * de contrôler le respect du RGPD ;
     * de conseiller l’organisme sur la réalisation d’une analyse d’impact
       relative à la protection des données et d’en vérifier l’exécution ;
     * de coopérer avec la CNIL et d’être son point de contact privilégié

   A noter que pour les petites structures (ex: startup où il y a peu
   personnes), il est évidemment possible de faire appel à un délégué
   externe, partagé avec plusieurs organismes.

   Le DPO est obligatoire pour les cas suivants :
     *  Tous les organismes publics, (ex.une mairie, un ministère)
     *  Les organisations dont les activités de base exigent un suivi
       régulier et systématique à grande échelle des personnes concernées
       (ex : compagnie d’assurance, banques, publicité ciblée sur internet
        exemple). Pas nécessaire pour un fleuriste
     *  Les organismes dont les activités de base les amènent à traiter à
       grande échelle des données dites « sensibles » (ex. un hôpital, une
       compagnie d’assurance, un site de rencontre).

   Plus d’informations sur le DPO :
   https://www.cnil.fr/fr/devenir-delegue-la-protection-des-donnees


   Q5 : Est-ce qu’il y a un label qui prouve qu’on est conforme au RGPD?

   Alors, la CNIL délivre bien des labels qui sont pour l’instant que sur
   4 domaines spécifiques. Oui des labels sont prévus pas le RGPD mais ce
   n’est pas obligatoire pour justifier qu’on est conforme au RGPD.

   Pour prouver sa conformité au RGPD, le plus important est de mettre en
   place un certain nombre d’actions et  prouver par une documentation
   écrite que vous assurez une protection des données en continu. C’est ce
   qu’on appelle « l’accountability ». Cela revient donc à montrer comment
   des actions ont été mises en œuvre et à les rendre vérifiable. On
   pourrait le traduire en français par l’« obligation de rendre compte ».

   Voici un exemple de démarches pour aller vers la conformité au RGPD

   On va les séparer en 3 grandes étapes :

   Pour commencer :
     * Il faudra mettre des mentions d’information sur vos formulaires. Et
       j’en ai déjà parlé mais j’insiste encore une fois mais il est très
       important d’informer de la finalité des différentes données
       collectées
     * mettre un formulaire de contact pour que les gens qui se souhaitent
       puissent accéder à l’ensemble des données qui les concernent,
     * Demander dans certains cas l’accord des personnes et leur donner la
       possibilité de retirer leur accord.
     * assurer, des mesures sécurité des données adaptées à la sensibilité
       du fichier.

   Dans un second temps, il faudra :
     *  Analyser votre SI, vos fichiers et tous les documents qui
       contiennent des données personnelles.
     *  Vous devrez également élaborer un registre des traitements.
     *   Pensez aussi à revoir les clauses de confidentialité passées avec
       vos sous-traitants exemple de clause à adapter ici
       https://www.cnil.fr/fr/sous-traitance-exemple-de-clauses
     *  Notifiez à la CNIL les violations de données dont vous êtes
       victimes

   Enfin, si vous traitez, par exemple, des données sensibles ou à risque
   ou que vous faite du tracking à grande échelle Une analyse d’impact sur
   la protection des données (PIA) est obligatoire car il y a un risque
   élevé pour les personnes concernées ! Elle vous permet d’anticiper et
   traiter les risques pour les droits et libertés des personnes.



   Q6 Est ce que les sanctions touchent aussi les organisations publiques?

   Pour rappel les sanctions du RGPD peuvent aller jusqu’à 4 % du chiffre
   d’affaires annuel mondial ou 20 millions d’euros.  La somme la plus
   importante entre les 2 est retenue.


   Il y a une vrai nécessité pour les collectivités de prendre en compte
   les exigences car en cas de manquement – et outre des avertissements
   publics – les CNIL européennes pourront prononcer des amendes
   administratives allant jusqu’à 20 millions d’euros.

   Enfin, il estr à noter que l’l’Etat ne peut pas recevoir de sanction
   financière, contrairement aux collectivités territoriales. Par contre,
   l’Etat peut quand même être sanctionné (avec des. sanction publiques
   par exemple)


   Q7 Quel est le délai raisonnable de réponse d’un site internet pour la
   demande d’informations sur les données perso renseignées ?

   Délai raccourci pour les droits : meilleurs délais ! Ce qui veut dire 1
   mois maximum après réception de la demande.

   Prolongation possible de 2 mois mais uniquement si vous en informez la
   personne et que vous prouvez que la demande est complexe et nécessite
   un délai supplémentaire


   Q8 Quid des délais obligatoires et réglementaires de conservation des
   données (paie, RH, compta, etc… ) vs droit d’effacement RGPD ?

   Dans le cadre du futur règlement, les organismes doivent tenir une
   documentation interne complète et notamment « un registre » sur leurs
   traitements de données personnelles.

   Un registre permet de justement de s’assurer que les différents
   traitements respectent bien les nouvelles obligations légales et
   notamment les durées de conservation.

   Ce qui implique notamment de fixer des règles strictes pour déterminer
   :
     * Quelles données qui doivent être supprimées une fois que l’objectif
       est atteint ?
     * Quelles données qui doivent être conservées au titre d’obligations
       légales ?

   Par exemple une facture doit être conservée 10 ans mais uniquement dans
   « vos archives intermédiaires ». En clair, les données existent
   toujours mais ne seront plus accessibles que par le comptable ou le
   service contentieux de l’entreprise.


   Dernière partie :  les confusions

   Parmi les questions qui ont été posées, j’ai vu qu’il y avait beaucoup
   de confusions et d’incompréhension, ou d’idées reçues du coup, je vais
   faire cette dernière partie pour revenir sur ça en disant ce que le
   RGPD n’est pas.

   LE RGPD est un big bang :

   RGPD ce n’est pas un big bang, le RGPD n’est pas apparu comme ça du
   jour au lendemain.

   Pour rappel, il existait déjà la loi Informatique et libertés qui date
   de 1978 qui est une  loi française dont le but est de réglementer le
   traitement des données personnelles, c’est-à-dire préserver les
   libertés des personnes dans un contexte d’informatisation croissante de
   la société.

   Depuis 1978, elle a été modifiée à plusieurs reprises pour se conformer
   aux directives européennes et à l’évolution des usages.

   Le Règlement Général sur la Protection des Données (RGPD) vient donc
   renforcer la loi Informatique et libertés qui fera l’objet d’une
   adaptation.

   RGPD : seulement des solutions techniques ?

   RGPD, ce n’est pas une préconisation de solutions techniques
   d’anonymisation des données, de chiffrements, etc. parce qu’il y avait
   beaucoup de questions sur le sujet.

   Le RGPD c’est un cadre pour définir ce qui est attendu en termes de
   protection des données personnelles des résidents européens pour que
   les organisations puisse s’y conformer et être sûr que ce soit le cas à
   différents niveaux (SI, process, documentation, etc)

   En parlant de ça, on voit souvent des outils (logiciel, solution
   hardware) certifiés RGPD dont l’achat permet  d’être 100 % conforme au
   RGPD

   La conformité au RGPD ne dépend pas d’une solution technique. La
   conformité s’obtient par un effort soutenu à tous les niveaux,
   combinant des mesures humaines (comme sensibiliser les utilisateurs),
   des mesures organisationnelles (prévoir des procédures pour gérer les
   incidents afin de pouvoir réagir en cas de violation de données, gérer
   la sous-traitance…) et des mesures techniques (comme authentifier les
   utilisateurs et gérer les habilitations, sécuriser les postes de
   travail, sécuriser les échanges avec d’autres organisations).

   Et pour avoir un premier guide des chantiers à mener, vous avez le
   guide de sécurité de la CNIL :
   https://www.cnil.fr/fr/principes-cles/guide-de-la-securite-des-donnees-
   personnelles

   Enfin, pour terminer ce post, je tiens à remercier la CNIL pour leur
   aide. Et ça a été un vrai plaisir de collaborer avec eux pour faire
   cette vidéo.

   Liens utiles vers de la documentation rédigée par la CNIL pour vous
   aider à mieux comprendre le RGPD et se conformer au règlement :

   https://www.cnil.fr/fr/principes-cles/guide-de-la-securite-des-donnees-
   personnelles

   https://www.cnil.fr/fr/principes-cles/reglement-europeen-se-preparer-en
   -6-etapes

   https://www.cnil.fr/fr/cartographier-vos-traitements-de-donnees-personn
   elles

   https://www.cnil.fr/fr/outil-pia-telechargez-et-installez-le-logiciel-d
   e-la-cnil

   https://www.cnil.fr/fr/sous-traitance-exemple-de-clauses

   https://www.cnil.fr/fr/modeles/mention

   https://www.cnil.fr/fr/devenir-delegue-la-protection-des-donnees




   CNILcomplianceconformitédata protection officerdonnées
   personnellesDPOeuropeFAQGDPRGeneral Data Protection
   Regulationquestionsregelement européen de protection des donnéesRGPDvie
   privée

   Non classé

Kubernetes pour les débutants

   26 janvier 2018 Samson Laisser un commentaire

   IFRAME:
   http://www.youtube.com/embed/NChhdOZV4sY?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

Kubernetes et les conteneurs

   Pour comprendre ce qu’est Kubernetes, il faut d’abord savoir ce qu’est
   un conteneur :
     * En gros, la virtualisation par conteneur est une méthode de
       cloisonnement au niveau de l’OS basé sur la technologie de
       virtualisation Linux LXC, pour Linux Containers.
     * Le principe est de faire tourner des environnements Linux isolés
       les uns des autres dans des conteneurs tout en se partageant le
       même noyau Linux, le Kernel donc.

   Le conteneur virtualise seulement l’environnement d’exécution (comme le
   processeur, la mémoire vive ou le système de fichier…) et ne virtualise
   donc pas la machine entière comme pour une VM (Pas de virtualisation
   d’OS inviténotamment dans un conteneur par rapport à une VM).

   Le conteneur est donc plus léger que la VM, ce qui permet de créer
   beaucoup plus de conteneurs que de VM sur un même serveur. Docker est
   un exemple de technologie de virtualisation par container.

   A noter que pour le reste de la vidéo, je vais prendre l’exemple des
   conteneurs Docker pour illustrer les fonctionnalités de kubernetes.

   Et justement comme un conteneur est fortement relié au kernel, le
   conteneur n’a pas “conscience” de ce qui se passe en dehors de ce
   kernel et de la machine hôte.

   Et c’est là que Kubernetes intervient :
     * c’est Kubernetes qui va apporter l’orchestration et la gestion des
       conteneurs sur des clusters de serveurs
     * Dis autrement, Kubernetes permet ainsi de prendre en charge
       plusieurs kernel et pouvoir gérer les conteneurs sur ces différents
       serveur hôtes Linux (qu’ils soient physique ou virtuel d’ailleurs).
       Ces clusters peuvent couvrir des hôtes situés dans des clouds
       publics, privés ou hybrides.

Les fonctionnalités de Kubernetes

   Les fonctionnalités d’orchestration de Kubernetes vous permettent de :
     * créer des services applicatifs ( que ce soir front end ou backend)
       et ceci sur plusieurs conteneurs,
     * planifier l’exécution de ces conteneurs dans un cluster,
     * garantir leur intégrité au fil du temps.
     * assurer leur monitoring

   Avec Kubernetes, le développeur n’ a plus à s’occuper de la gestion des
   VM, il à disposition directement son environnement d’exécution (qui est
   le conteneur) pour y déployer son code, et c’est kubernetes qui
   s’occupe des couches d’infrastructures sous-jacentes.

   Avec Kubernetes, le développeur n’a plu à s’occuper de la partie
   infrastructure, il n’a pas besoin de savoir où tournent leur
   applications, l’infra sous-jacente est masquée pour le développeur

Architecture de Kubernetes

   Il y a d’abord le Kubernetes Master qui est le serveur contrôlant les
   nodes : ce sont des noeuds esclaves et ce sont des machines hébergeant
   les hôtes Docker qui exécutent les tâches qui leur sont assignées. Au
   sein d’un node tourne un pod. Le pod est un environnement d’exécution
   d’un ou plusieurs conteneur(s) Docker.

   C’est le master qui va dire quel node va faire tourner un pod non
   ordonnancé en se basant sur la disponibilité des ressources. Le master
   gère l’utilisation des ressources sur chaque node afin de s’assurer que
   la charge de travail n’est pas en excès par rapport aux ressources
   disponibles.

   Pour accomplir cet objectif, l’ordonnanceur doit connaître les
   ressources disponibles et celles actuellement assignées sur les
   serveurs. Et c’est ces information qui sont apporté par les kubelets.
   Kubelet est un composant exécuté sur des nœuds et qui s’assure que les
   conteneurs définis ont démarré et fonctionnent comme comme prévus lors
   de leur conception. Si un noeud tombe par exemple, c’est Kubelet qui va
   le signaler au master.

   Et c’est le master qui vérifie le nombre de copies identiques demandée
   d’un pod qui doivent s’exécuter dans le cluster. Le master gère la
   résilience des pod.


   Voyons de plus près la notion de  pod :
     * Cet environnement d’exécution peut contenir un ou plusieurs
       conteneur(s) Docker (on va déployer deux containers sur un même POD
       s’il est nécessaire de partager des ressources locales).
     * En effet Tous les conteneurs d’un pod partagent une même adresse
       IP, un même nom d’hôte et les même ports réseau et d’autres
       ressources.
     * La scalabilité horizontale sera réalisée en instanciant
       l’application dans de multiples pods,

   Un volume c’est un espace de stockage accessible à tous les conteneurs
   sur un pod.

   Il repond à 2 besoins :
     * le premier c’est le besoin de préserver les données au delà du
       cycle de vie d’un conteneur : les données et fichiers dans un
       conteneur sont éphémères, donc si des données utilisées par les
       conteneurs doivent être conservés au dela du cycle de vie d’un
       contneeur, ces données seront stocké dans le volume.
     * Ensuite, le volume est necessaire pour Le partage des données entre
       2 conteneurs : quand plusieurs conteneurs s’exécutent dans un même
       pod, il est souvent nécessaire de partager les fichiers (et
       données) entre eux. Et c’est réalisé via le volume.

   Passons maintenant à la notion de service :
     * Le « Service » est un point d’entrée permettant un accès «
       load-balancé » à un groupe de containers identiques, autrement dit
       c’est une VIP ou Virtual IP.
     * Kubernetes fournit un service de routage en assignant une adresse
       IP et un nom de domaine à un service, et équilibre la charge du
       trafic vers les différents pods.
     * Les requêtes de service sont alors transférés par Kubernetes vers
       un des pods.


   Fonctionnement de Kubernetes

   Kubernetes s’exécute au-dessus de l’OS et interagit avec les pods de
   conteneurs qui s’exécutent sur les nœuds.

   Le master Kubernetes reçoit les commandes de la part d’un
   administrateur (ou d’une équipe DevOps) et relaie ces instructions aux
   nodes. Comme on l’a vu tout à l’heure, ce système de transfert
   fonctionne avec une multitude de services et choisit automatiquement le
   nœud le plus adapté pour chaque tâche. Il alloue ensuite les ressources
   aux pods désignés dans ce nœud pour qu’ils effectuent la tâche requise.

   Lorsque le Kubernetes master planifie un pod dans un nœud, le kubelet
   de ce nœud ordonne à Docker de lancer les conteneurs spécifiés. Docker
   démarre/arrête les conteneurs, comme d’habitude.

   Le kubelet collecte ensuite en continu le statut de ces conteneurs via
   Docker et rassemble ces informations sur le serveur master.

   On voit donc qu’avec Kubernetes, les ordres proviennent d’un système
   automatisé et non plus d’un administrateur qui assigne manuellement des
   tâches à tous les nœuds pour chaque conteneur.

   containerconteneurDevOpsDockerkubeletkuberneteskubernetes
   masternodeorchestrateurpodserviceswarmvolume

Navigation des articles

   ← Précédent 1 2 3 4 … 12 Suivant →

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
   #next Cookie connecté » Flux Cookie connecté » Flux des commentaires

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : ____________________ Rechercher

   Non classé

Le serverless pour les nuls

   19 janvier 2019 Samson Laisser un commentaire

   Dans cet article, je vais donc vous expliquer les concepts les plus
   importants à retenir de l’architecture serverless

   IFRAME:
   https://www.youtube.com/embed/HaehHcLVCTo?version=3&rel=1&fs=1&autohide
   =2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   L’architecture serverless est un modèle de cloud computing dans lequel
   le client peut créer et exécuter ses applications sans devoir gérer la
   partie infrastructures et notamment les serveurs, d’où le terme
   “serverless”, ou “sans serveur” en français.

   Evidemment, l’application, et notamment son code, s’exécute toujours
   sur des serveurs. Parce que oui, on a toujours besoin des
   infrastructures IT pour faire tourner les applications.

   La particularité du modèle serverless elle est simple : le développeur
   doit juste fournir son code. Tout le reste est pris en charge par le
   fournisseur de services cloud.

   Le modèle “serverless” va donc faire abstraction de la partie
   infrastructures IT  pour le développeur. Ce qui veut dire que Le
   développeur s’affranchit ainsi des contraintes de l’infrastructure et
   peut se concentrer sur son travail : le développement.

   Evidemment, il y a des règles à respecter pour rentrer dans le modèle
   serverless

   Premièrement, le développeur va devoir repenser la conception de son
   code.  En effet, le code d’exécution n’est plus celui de toute
   l’application, le code d’exécution doit être décomposée en fonctions.
   Chaque fonction a un seul et unique but. Et l’ensemble de ces fonctions
   forme l’application.

   D’où le terme « Function as a Service » (FaaS) souvent associé au
   “serverless”. Le développeur a la responsabilité de coder sa ou ses
   fonctions. Et Le reste, c’est à la charge du fournisseur de services
   cloud.

   En gros, pour le développeur, ça veut dire :
     * Plus besoin de définir le nombre de serveurs, leur puissance, plus
       besoin de mettre en service, de mettre à l’échelle, d’entretenir,
       de superviser, de les mettre à jour, et toutes autres actions
       concernant la gestion des serveurs.
     * Mais aussi et c’est important : plus besoin de gérer le déploiement
       de son application  sur les différents serveurs.
     * Finis aussi les problématiques de stockage, de load balancing ou
       d’autres problématiques réseau, etc

   Pour le développeur, il faut juste déposer son code et le reste c’est
   le fournisseur de services cloud qui s’en occupe!

   Passons au fonctionnement de cette « fonction »

   Cette fonction va être déclenchée par des événements. Par exemple si la
   fonction est sollicitée par une requête HTTP. La requête déclenche
   l’exécution du code et donc la fonction. Et ici, la requête va
   déclencher la fonction qui va interroger une base de données (donc une
   action sur un autre service)

   A noter que les événements déclencheurs peuvent être divers : que ce
   soit l’ajout d’un fichier sur un espace de stockage ou alors une
   nouvelle entrée dans une BDD

   Ensuite, l’hébergeur cloud garantit le scaling automatique de la
   fonction selon les pics de trafic. Imaginons que la fonction B est
   beaucoup plus sollicitée que les autres, dans ce cas là, la fonction B
   sera exécutée plusieurs fois, cad que plusieurs « unités de travail »
   de la fonction B tourneront en parallèle pour répondre à la charge de
   travail en hausse. Ici B1, B2 et B3 sont la même instance de la
   fonction B mais tournant en en même temps pour répondre au pic de
   charge.

   Et a contrario lors de faible charge, seules les unités nécessaires
   sont éxécutées. Ici la fonction A ne nécessite qu’une seule unité de
   travail pour traiter la demande.

   Et s’il n’y a pas de sollicitation de la fonction alors elle n’est pas
   exécutée. Comme la fonction C ici que vous ne voyez pas car elle n’est
   pas lancée car non sollicitée.

   Pour aller plus loin sur ce modèle d’architecture par fonctions, je
   vous invite fortement à regarder sur les microservices où j’explique
   plus longuement les spécificités de ce type d’architecture.

   Autre point structurant du modèle serverless : la facturation

   La facturation est basée sur les ressources consommées ou le temps réel
   d’exécution du code, avec quand même la milliseconde comme unité de
   paiement. Ce qui veut aussi dire qu’en l’absence de trafic,
   l’utilisateur ne paie rien.

   C’est là tout l’intérêt économique du modèle “serverless”, fini le coût
   des serveurs : leur achats, leur gestion, leur entretiens, etc. surtout
   quand ceux ci sont sous utilisés

   Et en plus, ce modèle de paiement à l’usage incite à l’optimisation de
   la performance du code. Réduire le temps d’exécution d’une application
   serverless permet de diminuer le coût du service, et donc la facture à
   la fin du mois

   Exemple concret : AWS Lambda

   Maintenant que vous avez compris le principe, voyons quelques services
   serverless, le plus connu est AWS Lambda. AWS Lambda est un service
   d’Amazon Web Services (AWS) et il va suivre les principes que l’on a vu
   :
     * Il exécute le code seulement quand c’est nécessaire.
     * AWS lambda s’adapte automatiquement à la charge de travail
     * Et le client ne paye que le temps de calcul utilisé.

   Le prérequis est d’avoir un code dans un langage compatible avec AWS
   Lambda comme Node.js, Java, C#  et Python et respecter le temps limite
   d’exécution de la fonction

   Là je parle d’AWS parce que c’est l’offre que je connais le mieux. Mais
   c’est la même logique derrière Azure Functions de Microsoft et Google
   Cloud Functions de Google Cloud.

   Allez maintenant, on va voir à quoi ressemble une architecture
   serverless sur AWS

   Architecture serverless AWS

   L’architecture serverless est la plupart du temps une conception en
   fonctions qui vont déclencher des actions sur d’autres services.

   Dans notre exemple, les 2 fonctions sont développées en utilisant AWS
   Lambda et sont exposés via une API avec le service AWS API Gateway. Ces
   API sont le point d’entrée qui déclenche la fonction Lambda
   voulu.  Ici, on est sur un site web proposant la vente de cookies. Ici
   le client va demander la liste des cookies vegan. Dans ce cas, la
   fonction Lambda « Liste » extraire la liste des cookies avec que des
   ingrédients vegans. Ce qui déclenche le traitement du service dans le
   service de base de données DynamoDB. Ensuite, Lorsque le client fait un
   achat de cookies, il déclenche une fonction lambda « Achat » qui
   enregistre cette entrée dans AWS DynamoDB

   Ensuite, l’architecture serverless est adaptée pour la construction de
   workflows automatisés basées sur les fonctions Lambdas qui vont servir
   de liens entre les différents services AWS.

   Dans cet exemple : Un nouveau fichier est déposé sur un bucket S3
   (bucket S3 étantun service d’espace de stockage dans le cloud). Cette
   action déclenche une fonction qui va le décompresser et l’insérer dans
   DynamoDB. Cette écriture dans Dynamo DB va lui même déclencher une
   autre fonction Lambda qui va lancer le service SNS pour envoyer un SMS
   de notification

   Les limites du modèle

   Le serverless n’est pas adaptés à tous les cas d’usage. Les contraintes
   de temps d’exécution du serverless ne sont pas adaptées pour
   l’exécution de tâches lourdes et complexes (comme le traitement vidéo
   par exemple). et plus généralement les applications qui ont un trafic
   constant. Il y a donc une nécessité de bien concevoir l’architecture
   d’une application en amont : cela permet de décider si une architecture
   serverless convient pour l’application.

   Enfin, dernière contrainte de ce modèle : c’est la forte dépendance au
   fournisseur de services cloud et plus particulièrement à son framework
   : chaque fournisseur de service cloud impose des règles différentes
   (timeouts, langages supportés, etc.). Ce qui veut dire que pour migrer
   après ça va être très compliqué. Vous êtes souvent donc prisonnier des
   règles du fournisseur de services cloud qui peuvent changer.


   AWS lambdacloud computingFaaSgoogle cloud functionserverless

   Non classé

La Transformation digitale / numérique pour les nuls

   21 octobre 2018 Samson Laisser un commentaire

   Le développement technologique s’accélère et les innovations sont de
   plus en plus nombreuses.  Face à ces changements inévitables, les
   entreprises ont le choix :
     * Soit elles s’adaptent en s’appropriant ces nouvelles technologies
       pour innover
     * Soit elles peuvent ne pas réagir et mourir, dépassé par les
       concurrents qui auront réussi à tirer bénéfices de ces nouvelles
       technologies.

   Et c’est en ça que la transformation numérique est vitale pour les
   entreprises.

   Alors en quoi consiste la transformation numérique( ou appelé aussi
   transformation digitale)?

   IFRAME:
   https://www.youtube.com/embed/HjAxHRMc7mI?version=3&rel=1&fs=1&autohide
   =2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent


   Il s’agit d’un processus continu permettant aux entreprises d’intégrer
   les nouvelles technologies, comme par exemple le cloud, l’IoT ou
   l’intelligence artificielle, et ceci à tous les aspects de leurs
   activités et aux différents niveau de l’entreprise.

   Mais attention, la transformation numérique, ce n’est pas que des
   problématiques technologiques, il y a un aspect humain très important.
   Que ce soit par exemple une nouvelle culture à mettre en place, une
   nouvelle façon de gérer l’humain ou une nouvelle approche des métiers
   et des process, etc

   La transformation numérique est donc une transformation globale de
   l’entreprise.


   L’objectif c’est de capitaliser sur ces nouvelles technologies pour
   créer de la valeur et bénéficier de nouvelles opportunités business.

   Sinon il y a risque de se faire damer le pion face par des concurrents
   plus rapide, ou alors par les GAFA championne du numérique mais aussi
   par nombreuses start-up qui menace les positions des plus grandes
   entreprises.


   Maintenant qu’on a vu les enjeux, voyons 3 piliers cles d’une
   transformation numérique réussie  :

   Le premier est l’expérience client qui doit être une priorité. Pour
   l’optimiser, les entreprises doivent tirer le meilleur du digital pour
   pouvoir satisfaire, fidéliser et faire rêver le client. Sinon il ira
   voir ailleurs. Les nouvelles technologies du digital permettent ainsi
   de créer de la valeur pour le client.

   Pour être un peu plus concret, je vais prendre l’exemple des nouvelles
   technologies autour de la donnée. La donnée est considéré aujourd’hui
   par tous comme un élément clé dans cette révolution numérique.

   Les entreprises qui vont se demarquer sont celles qui vont maitriser
   les technologies capable de capitaliser sur ces données pour en créer
   de la valeur. par exemple avec le big data, et l’intelligence
   artificielle,


   Le deuxième pilier est une organisation tournée vers l’agilité . Dans
   un marché changeant et incertain; être agile est fondamental pour mieux
   s’adapter aux changements et inbtégrer rapidement les nouvelles
   technologies. Les projets sont alors plus nombreux et plus rapides à
   mettre en place.

   Cela passe par la simplification de l’organisation de l’entreprise mais
   aussi les bonnes pratiques pour permettre d’être plus réactif. Par
   exemple les principes du lean start-up, les méthodes agiles ou le
   devops.

   L’objectif de tout ça est d’avoir surtout avoir un  « time to market »
   rapide! Le time to market c’est le délai entre la naissance d’une idée
   et sa mise en place sur le marché. Ce qui veut dire que plus le Time To
   Market est rapide, plus l’entreprise aura des chances de saisir les
   opportunités business en proposant des produits ou services intégrant
   les dernières technologies

   Essayer, s’adapter et évoluer en permanence devient un mode de
   fonctionnement pour les entreprises.


   Enfin dernier pilier :  La transformation est avant tout une question
   d’humains !Rassembler les collaborateurs autour d’une vision commune
   est essetntiel. La simplification de l’organisation et donc la
   suppression des silos favorise le travail collaboratif, l émerge,ce
   d’idées et les prises d’initiatives, tout ça étant nécessaires pour
   développer l’innovation.

   Il est aussi primordial attirer, développer et fidéliser les meilleurs
   profils. Parce que oui, c’est aussi une guerre des talents.


   digitalnumériquetransformation digitaletransformation numérique

   Video

La petite histoire de Linux (en dessins)

   21 octobre 2018 Samson Laisser un commentaire

   Aujourd’hui, je vais vous raconter des anedoctes sympas sur la
   naissance de Linux

   IFRAME:
   https://www.youtube.com/embed/IquNF_DXcF8?version=3&rel=1&fs=1&autohide
   =2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent


   Première chose à retenir sur Linux parce qu’il y a pas mal de confusion
   :
     * Linux est un noyau, c’est pour ça qu’on parle d’ailleurs de “Linux
       kernel”. Kernel veut dire noyau en francais.
     * Et en gros, c’est ça qui permet de démarrer, de faire la liaison
       entre le matériel et le système de la machine, ainsi que de faire
       la liaison entre les applications installées sur la machine.

   Le hic c’est qu’on ne peut pas utiliser ce noyau seul. Il faut un
   environnement (des logiciels autour du noyau afin que tout marche bien
   : des pilotes,, de quoi gérer la machine, etc).

   C’est là où la notion de distribution apparaît :
     * On parle de distribution GNU/Linux quand il s’agit d’une solution
       prête à être intallée par l’utilisateur final sur sa machine.
     * Cette distribution GNU Linux  comprend un noyau Linux ainsi que des
       logiciels sous Licence GNU, en gros on va dire que ce sont des
       logiciels libres qui complètent le noyau pour avoir un système
       d’exploitation complet.
     * Il est à noter qu’on peut aussi très bien trouver des distributions
       qui ne contiennent pas seulement les logiciels GNU, il y a parfois
       d’autre logiciels non GNU.

   Bref, c’est ce noyau Linux + des logiciels complémentaires qui vont
   permettre d’avoir un OS complet.

   Voici des exemples de systèmes d’exploitation “Linux » :
     * Red Hat Enterprise Linux
     * Fedora Linux
     * Debian Linux
     * Ubuntu Linux

   Ensuite il y a aussi souvent une autre confusion entre Linux et
   UNIX. Alors quelle différence?
     * Déjà pour l’anecdote sachez que le système d’exploitation “Linux” a
       été créé dans le but de fournir un équivalent libre au système
       Unix.
     * Linux est un clone d’UNIX en version libre et écrit à partir de
       zéro par Linus Torvalds, le createur du noyau Linux donc,  avec
       l’aide d’une équipe d’informaticiens.
     * Par contre UNIX regroupe un ensemble de systèmes d’exploitation
       différents. Ce ne sont donc pas juste des noyaux mais bien des OS
       complets
     * Comme exemples de système Unix connus, on a HP-UX, IBM AIX, Solaris
       Sun

   Maintenant on va un peu s’intéresser au père de Linux :

   En 1991, l’étudiant finlandais Linus Torvalds qui a alors 22 ans,
   commence le développement d’un noyau de système d’exploitation
   alternatif à MINIX, qui est un clone d’UNIX utilisé à des fins
   pédagogiques pour des étudiants. Linux va au final créer avec son
   nouveau noyau une alternative à UNIX.

   Après quelques mois, Il diffusa le code de son travail via un compte
   FTP de l’Université d’Helsinki. Et pour la petite anecdote le dossier
   contenant ces travaux a été nommé « Linux » par un administrateur du
   serveur FTP.  Linux pour « Linus UNIX » ou en français l’UNIX de
   Linus. Et par la suite, ce nom restera.

   Linus publie par la suite ses travaux sur Internet en demandant à
   d’’autres développeurs de l’aider pour le finaliser. Aujourd’hui Linus
   continue de diriger le développement du noyau Linux


   Concernant la mascotte officielle de Linux, il s’agit d’un manchot du
   nom de TUX. TUX étant un acronyme composé des mots Torvalds et UNIX.  A
   noter que beaucoup pensent à tort que la mascotte de Linux est un
   pingouin, notamment parce qu’en anglais, le mot « manchot » se dit «
   penguin », mais TUX est bien un manchot

   La différence ?

   Le pingouin est un oiseau de l’hémisphère nord qui peut voler, alors
   que le manchot est un oiseau qui ne vit que dans l’hémisphère sud et
   qui est incapable de voler En gros hein!


   Aujourd’hui, bien que peu présent sur les postes de travail, Linux est
   beaucoup plus présent dans le monde des serveurs

   Le noyau Linux équipe aussi la plupart des systèmes embarqués (box,
   robots, aérospatial, drones…). mais aussi les supercalculateurs

   Et pour terminer, comme vous le savez sûrement déjà, Linux domine le
   marché des smartphones via l’OS Android qui s’appuie sur un noyau Linux


   AndroidGNULinusLinuxMINIXnoyauOSsysteme d exploitationTorvaldsTUXUNIX

   Video

Les algorithmes nous contrôlent-ils ?

   30 septembre 2018 Samson Laisser un commentaire

   Aujourd’hui on va parler des algorithmes, le buzzword du moment!

   IFRAME:
   https://www.youtube.com/embed/sp-uCwbs6H8?version=3&rel=1&fs=1&autohide
   =2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Quand le moteur de recherche Google te propose des résultat de
   recherche, c’est en fait un algorithme qui va décider des résultats qui
   te seront présentés et leur classement.

   Quand Netflix te conseille une série, c’est pareil, c’est un algorithme
   qui va te faire ces suggestions.

   Les news qui vont apparaître sur ton fil d’actualité et leur ordre,
   c’est aussi un algorithme. Pareil pour l’ordre des photos et des
   stories sur Intagram, là aussi c’est un algorithme qui organise tout
   ça.

   Le pouvoir des algorithmes est d’autant plus important que le numérique
   fait partie intégrante de notre vie (smartphone, les objets connecté,
   service en ligne, applications, etc). Et quand tu regardes un peu ce
   qu’en pense les médias c’est encore plus anxiogène. Tu as juste
   l’impression d’être l’esclaves des algorithmes, qu’on a perdu notre
   libre arbitre qu’ils nous lavent le cerveau.

   Alors, Les algorithmes nous contrôlent-ils tous?  Je fais cette vidéo
   pour un peu demystifier tout ça justement. Qu’est ce qu’il y a derrière
   les algorithmes, tout ce que vous devez savoir sur le sujet et savoir
   quels sont les vrais enjeux des algorithmes et leur réel pouvoir.


   Déjà voyons ce qu’est un algorithme : un algorithme, c’est tout
   simplement une suite d’instructions permettant de résoudre un problème.
   Et ces instructions doivent pouvoir être applicable mécaniquement, sans
   réfléchir, pour arriver à un résultat.


   Les premiers algorithmes auquels on pense ce sont forcément les
   algorithmes mathematiques. Rappelez vous en primaire… La fameuse
   division euclidienne pour trouver le plus grand commun diviseur. Vous
   avez dû apprendre cet algorithme pour arriver à trouver le plus grand
   commun diviseur entre 2 nombres entiers.

   M’enfin, au dela des mathématiques, il y a bien plus simple comme
   algorithme dans la vie de tous les jours,

   Lorsque vous suivez une recette de cuisine pour faire un gateau. Si
   vous suivez bien la recette avec les bon ingrédients, à la fin le
   resultat c’est le gâteau. La recette c’est en fait un algorithme avec
   une suite d’instructions à éxécuter étape par étape pour faire ce
   gâteau.

   Transposé à l’informatique, les algorithmes permettent tout simplement
   de dire à un programme informatique tout ce qu’il doit faire. Les
   concepteurs de programmes informatiques vont définir dans l’algorithme
   une suite d’opérations logiques pour un arriver à un résultat
   voulu. Tout ça sera ensuite codé dans un langage informatique adapté
   pour pouvoir être appliqué automatiquement par le programme
   informatique.


   Ce sont les algorithmes qui définissent les actions des bots. Ce sont
   les algorithme qui vont décrire les tâches spécifiques que doivent
   réaliser ces programme informatique. Par exemple, les algorithme sont
   derrière les moteur de recherche, les fameux bot twitter qui font des
   actions spécifiques comme retweeter ou liker un mot clé spécifiques
   défini, et ce sont les algorithmes qui sont derrière l’intelligence des
   chatbot comme ceux sur messenger ou bien même les assistants vocaux
   comme Siri ou Alexa.

   Evidemment, il y a quand même une grosse différence entre l’algorithme
   simple du bot twitter qui fait que retweeter bêtement ce qu’on lui a
   dit  aux algorithmes de facebook, netflix ou amazon qui sont capable de
   s’adapter aux consommateurs.

   Cette différence c’est ce qu’on appelle le machine learning.

   Le machine learning c’est en gros quand l’algorithme va utiliser vos
   données pour apprendre et faire des actions plus efficaces. Les
   algorithmes ne sont maintenant plus seulement les instructions de base
   programmées par un développeur. Ils sont capable d’apprendre.  La
   machine peut générer de nouvelles instructions en apprenant à partir à
   la masse de  données qui lui sont fournies.  Ces données sont notamment
   des données personnelles que vous leur fournissez sur vous

   Et c’est comme ça que les algorithmes semblent parfois bien connaître
   nos goûts, nos envies et nos besoins.  Et là vous pensez aux
   suggestions d’Amazon qui des fois sont vraiment bluffantes car c’est ce
   que vous vouliez, la playlist spotify qui vous ait proposé et qui
   correspondent bien à vos goûts


   je vais vous prendre un exemple sympa.

   L’objectif  de netflix c’est de vous faire rester le plus longtemps sur
   sa plateforme parce que c’est l’abonnement qui va rémunérer netflix. Du
   coup, pour que vous restiez sur la plateforme le but c’est que vous
   consommiez toujours plus de contenu.

   La mission de l’algorithme c’est de faire en sorte que vous consommiez
   toujours plus de contenu

   C’est pour ça que l’algorithme doit apprendre à connaitre vos goûts
   pour vous pousser vers les séries ou films susceptibles de vous faire
   continuer à regarder plus.

   Saviez vous que Netflix va jusqu’à personnaliser les vignettes des
   series en fonction des données que netflix possède sur vous.

   Cela a été fait avec Stranger things :

   L’algorithme Netflix est capable de « prédire la probabilité que vous
   cliquiez sur un contenu en fonction d’une image donnée » et la vignette
   avec la plus forte probabilité de vous faire cliquer sera affichée par
   l’algorithme Netflix. C’est comme ça que Netflix arrive à vous faire
   regarder le plus de série possible

   Que ce soit Instagram, Facebook, Amazon, Youtube, aujourd’hui ces
   algorithmes complexes ont besoin de données sur vous pour être plus
   performant. Un des éléments clés à retenir c’est que sans vos données
   personnelles, ces algorithmes ne seraient pas aussi puissants. D’où
   l’importance de bien maitriser ses données personnelles en ligne.

   En tout cas, avec le machine learning, on entre dans la notion
   d’intelligence articielle. On parle de machine learning pour désigner
   la capacité d’une machine à apprendre et donc évoluer.

   La machine acquiert alors  de nouvelles connaissances qu’on ne lui
   avait pas programmés au départ. La machine apprend, s’améliorer et
   ‘évoluer d’elle même grâce à de nouvelles données. C’est pour cela
   qu’on parle d’intelligence artificielle.


   Avec ce que l’on vient de voir, on peut constater une chose : ces
   algorithme ne sont pas NEUTRE. et c’est important de le prendre en
   compte. Ils ont été conçus et codé par des développeurs qui leur a
   transmis une façon de fonctionner et un objectif à atteindre que ce
   soit les news sur fil d’actualité sur facebook, l’exemple des résultats
   de recherches Google, l’ordre des stories et photo sur Instagram, etc

   On a l’impression que c’est objectif mais il est important de retenir
   que ce des gens qui derrière tout ça on mis en place des critères de
   classement en fonction de leurs objectifs et de ses préjugés, de
   contraintes. Quand on parle d’algorithme on a l’impression que c’est
   neutre. Alros que cela peut masquer des convictions politiques, des
   objectifs financiers, des stratégies d’entreprises, etc. D’ailleurs les
   GAFA restent très discret sur le fonctionnement des algorithmes. et
   comme on l’a vu dans la vidéo c’est parce qu’il y a de réels enjeux
   derrière.

   C’est important d’avoir du recul sur l’action des algorithmes et de
   savoir qu’ils ne sont pas neutre pourempêcher que les GAFA et des
   entreprises du numérique de  transférer leur responsabilité sur les
   algorithmes. Lorsque facebook a été utilisé ou plutot leur algorithme
   détourné pour propager des fake news notamment pour les élections
   américaines de 2016, c’est de la faute de facebook, l’algorithme c’est
   juste l’épouvantail. Facebook a une responsabilité de l’utilisation de
   sa plateforme et de ce qui en est fait (et là je vous parle meme pas
   des données).

   Les gens qui ont reussi à hacker ont détourné l’algorithme à leur
   avantages pour diffuser des fake news. C’est à Facebook d’en assumer la
   responsabilité, ils sont responsable de leur algorithme.


   algorithmesBig datadonnées personnellesGAFAIAintelligence
   artificiellemachine learning

   Video

Le DNS pour les nuls

   30 septembre 2018 Samson Laisser un commentaire

   IFRAME:
   https://www.youtube.com/embed/qzWdzAvfBoo?version=3&rel=1&fs=1&autohide
   =2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Sur Internet, quand vous voulez accéder à un site web via votre
   navigateur, on va utiliser ce que l’on appelle un nom de domaine, par
   exemple cookieconnecté.fr, Wikipedia.org, Youtube.com …

   Bref, c’est l’adresse du site web que vous tapez sur votre navigateur.

   Dans la réalité, votre navigateur, lui il va avoir besoin de l’adresse
   IP du serveur sur lequel est hebergé votre site web. Par exemple
   194.153.205.26

   L’adresse IP est un numéro d’identification qui est attribué  à chaque
   appareil connecté à un réseau informatique utilisant l’Internet
   Protocol (d’ailleurs le IP c’est pour Internet Protocol). En gros, ca
   veut dire que chaque ordinateur connecté à internet possède une adresse
   IP.

   Sauf que vous l’avez compris ce serait un peu compliqué pour nous de
   retenir ces adresses IP. Et c’est là qu’intervient le DNS (Domain Name
   System) qui va “traduire” ces noms de domaines en adresses IP. La
   résolution de noms de domaines, c’est la corrélation entre les adresses
   IP et le nom de domaine associé.

   Les serveur DNS sont tout simplement des serveurs qui font la
   correspondance entre les adresses IP et les noms de domaine associés.


   Maintenant, voyons comment tout ça marche un peu plus dans le
   détail. Je vais vous expliquer maintenant à la notion de Hiérarchie
   DNS

   Le système des noms de domaine est en fait une hiérarchie dont le
   sommet est appelé la racine. On représente cette dernière par un point
   “.” pour info ce point n’apparait pas dans les addresses de site web
   qu’on utilise sur Internet mais c’est bien le plus haut niveau.

   Les domaines se trouvant immédiatement sous la racine sont appelés
   domaine de premier niveau “.fr”, .com, .org, etc (ou top domain level
   en français)

   Dans un nom de domaine, les domaines successifs sont séparés par un
   point, les noms de domaines supérieurs étant à droite. Le domaine
   wikipedia.org. est un sous-domaine de .org. et vous l’avez compris
   fr.wikipedia.org est un sous domaine de fr.wikipedia.org

   Il est possible d’avoir plusieurs sous-domaines ainsi qu’une
   délégation, c’est-à-dire une indication que les informations de ce
   sous-domaine sont enregistrées sur un autre serveur.

   On peut voir fr.wikipedia.org comme un sous domaine hébergé sur un
   serveur spécifique par exemple et de.wikipedia.com sur un autre serveur
   spécifique

   La résolution des noms de domaines est réalisée en parcourant la
   hiérarchie depuis le sommet et en suivant les délégations successives.


   Voyons maintenant comment se passe la résolution du nom de domaine avec
   un navigateur

   Imaginez que vous entrez fr.wikipedia.org dans votre navigateur. votre
   navigateur doit commencer par le résoudre en une adresse IP. tous
   simplement Parce qu’il faut qu’il sache à quel serveur se connecter.

   Ici, on va taper fr.wikipedia.org sur notre navigateur. Il va alors
   s’adresser à un serveur dit “récursif”.

   Pour information, les fournisseurs d’accès à Internet mettent à
   disposition de leurs clients ces serveurs récursifs par défaut quand il
   se connecte à Internet. Mais Il existe également des serveurs récursifs
   ouverts comme ceux de Google Public DNS ou OpenDNS ou Cloudfare

   Quand un serveur DNS récursif doit trouver l’adresse IP de
   fr.wikipedia.org, un processus itératif commence pour consulter la
   hiérarchie DNS du nom de domaine :
     * Ce serveur demande aux serveurs DNS de nom racine quels serveurs
       peuvent lui répondre pour la partie org.
     * Le serveur va indiquer quels serveurs connaissent l’information
       pour la zone wikipedia.org.
     * Ensuite, ce serveur donnera à son tour l’information pour avoir
       l’adresse IP du serveur hébergeant fr.wikipedia.org. car il connait
       déjà l’adresse IP du serveur hébergeant le sous domaine fr de
       wikipedia.org

   Et une fois que vous avez l’adresse IP de ce domaine, le navigateur y
   accède est affiche la page demandée

   DNSDNS recursifDomaine Name systemnom de domaineserveur DNS

Navigation des articles

   1 2 … 12 Suivant →

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
   #prev next Cookie connecté » Flux Cookie connecté » Flux des
   commentaires

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : ____________________ Rechercher

   Non classé

Comprendre le métier d’architecte technique

   20 septembre 2018 Samson Laisser un commentaire

   Je suis architecte technique et dans cet article, je vais vous
   expliquer le métier d’architecte technique.

   IFRAME:
   http://www.youtube.com/embed/MjSNAlPloSk?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Avant de savoir ce que fait un architecte technique, il faut d’abord
   savoir ce qu’est  l’architecture d’un SI. Dans le langage courant quand
   on parle d’architecture par exemple de pont, d’immeuble, de maison par
   exemple, on parle de plans de comment ils ont été conçus, structurés,
   organisés, ils ont été élaboré pour répondre à tels ou tels objectifs.
   L’architecture d’un SI, c’est la même chose, c’est comment est
   structuré le SI pour répondre aux objectif de l’organisation.

   Et ce SI, il est organisé en différentes 4 couches, et à chaque couche
   correspond un type d’architecture :
     * Architecture métier définit les processus métiers, la structure
       organisationnelle, les périmètres métiers des différentes
       application, c’est là aussi où on va mettre en avant les éléments
       stratégiques d’un projet
     * Architecture fonctionnelle : c’est la traduction en exigences
       fonctionnelles des besoins métier. On s’assure que les nouvelles
       évolutions respectent les besoins exprimés, et plus largement les
       objectifs de l’organisation.
     * Architecture applicative ou logicielle : c’est l’étape où on va
       traduire des besoins fonctionnels en fonctionnalités logicielles.
       C’est à cette étape que seront décrit les différents composants
       applicatifs d’une solution mais aussi la communication entre cette
       solution et les autres applications du SI
     * Et enfin le dernier niveau c’est l’Architecture technique
       correspond à la mise en oeuvre dans le SI de ce qui a été défini
       successivement dans les niveaux précédents.Et cette partie
       ’infrastructure regroupe tous moyens techniques qui constitue le
       socle technique sur lequel on va faire tourner les applications. Au
       sens large, l’infrastructure technique inclut les serveurs
       évidemment, mais aussi le réseaux, systèmes d’exploitation, bases
       de données, les protocoles de communications, etc.

   On parle d’ailleurs souvent d’architecte infrastructure pour désigner
   les architectes techniques. Et vous l’avez donc compris, moi en tant
   qu’architecte technique, je m’occupe de ce dernier niveau.

   En gros, je vais intervenir sur les projet ou demandes d’évolutions
   ayant impact sur l’architecture technique du SI (que ce soit des
   projets de l’infrastructure ou des nouvelles applications qui vont
   utiliser l’infrastructure)

   Sur la partie Infrastructure :
     * L’architecte technique participe à la définition des différentes
       briques techniques (hébergement cloud, virtualisation, stockage,
       middleware, etc) et évidemment il doit aussi garantir la cohérence
       de ces différentes briques techniques
     * Le but est d’avoir in fine des standards techniques pour répondre
       aux besoins des applications. Par exemple pour un besoin
       d’environnements virtualisés,, vous avez telle ou telle offre, pour
       les BDD ou OS, vous avez telle ou telle techno avec tel ou tel
       version, etc
     * Et c’est justement grâce à ces connaissances que l’architecte
       technique pourra accompagner la mise en oeuvre des applications sur
       le SI

   Sur le papier, ça a l’air simple mais ça ne l’est pas forcément dans la
   pratique :
     * D’un côté, le projet va arriver avec une expression de besoins, une
       feuille de route, les caractéristiques de la solution éditeur, des
       contraintes de coûts et de planning et des exigences techniques (en
       terme de perforamnce, de disponiblité ou d’intégrité, ou tout ce
       qui est SLA)
     * De l’autre côté, Un architecte a un cadre d’architecture à
       respester ou plutôt à faire respecter, avec des principes
       d’architecture, des bonnes pratiques, des normes, un catalogues de
       services d’infrastructures disponibles, des orientations
       stratégiques, etc
     * Et le but ca va être d’essayer de faire matcher tout ça pour
       répondre aux différents points structurants dont on vient de parler

   L’implémentation de cette application sur le SI sera décrite dans un
   dossier d’architecture rédigé par l’architecte technique. Et ce dossier
   d’architecture, c’est en gros comment on réponds aux différents besoins
   et exigences et autres contraintes :
     * comment les différents les composants applicatifs de l’application
       seront mis en production  dans le SI existant,
     * et du coup, dans ce DAT, je vais décrire tout ce qu’il faut pour
       que l’application puisse être mis en production : les machines
       nécessaires, les composants techniques à installer sur cette
       machine et dans quel datacenter se situe cette machine, comment
       cette nouvelle application s’intégre dans le SI, les services
       d’infra qu’elle va utiliser et les ouvertures de flux à faire qu’il
       lui faut pour communiquer avec le reste du SI, qu’est ce qui se
       passe en cas de problème, etc


   A la fin, je dois garantir au projet que la solution est exploitable et
   pérenne dans le SI :
     * Et c’est après la validation du DAT que le projet peut commander
       ses environnements, demander les ouvertures de flux et autres
       prérequis nécessaire pour mettre en production son application.
     * Et les équipes d’exploitation vont ensuite se baser sur ce DAT pour
       mettre en production l’application

   Par contre, même si l’architecte technique est responsable de la
   rédaction du DAT. La conception et la validation de la solution n’est
   pas décidée seul par l’architecte technique. Parce qu’il y a d’une part
   plusieurs parties prenantes qui valident ce DAT.

   Par exemple :
     * Les CDP,
     * les autres architectes, applicatif, fonctionnelles et des
       architectes d’entreprise,
     * La sécurité notamment les RSI
     * etc.

   D’autre part, L’architecte technique c’est un “expert” de haut niveau
   qui est donc assez généraliste pour lui permettre d’avoir une vision
   globale du système d’information. mais c’est surtout quelqu’un qui va
   travailler et s’appuyer sur plein de personnes référentes dans leur
   domaines que ce soit sur le réseau, les middlewares, exploitation, sur
   des services d’infrastructure mais aussi sur des experts sur des
   technos spécifiques.

   Là on parle d’acteurs en interne d’une organisation mais cela peut
   aussi être des prestataires externes que ce soit les editeurs, des
   intégrateurs, des infogérants, etc

   Voilà maintenant, vous savez ce que je fais en tant qu’architecte
   technique!

   architecte infrastructurearchitecte SIarchitecte techniquearchitecture
   SI

   Video

Comprendre l’attaque DDOS

   14 juin 2018 Samson Un commentaire

   IFRAME:
   http://www.youtube.com/embed/n4Zs0qcgjXI?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Pour vous expliquer le principe d’une attaque DDOS, je vais prendre
   l’image du marchand de glaces :

   Le marchand de glace fournit un service simple : il vend les glaces
   gardées au frais dans son camion. Avec ça, Les enfants sont contents et
   les parents ont enfin eux un bref moment de répit le temps que les
   enfants finissent leur glaces. Un monde en harmonie pendant un court
   instant.

   Sauf qu’une bande de sales mioches arrivent et ils ont juste une envie
   : foutre la merde. Leur but c’est juste que personne ne puisse avoir de
   glaces. Ils vont alors faire des demandes sans s’arrêter jusqu’à
   épuiser le marchand de glaces.

   Au bout d’un moment, le marchand de glaces, face à tant de
   sollicitations, il pète un câble, il ferme boutique et les vrais
   clients ne peuvent avoir leurs glaces.

   Eh bien ce que viennent de faire la bande de sales mioches, c’est une
   attaque DDOS.


   DDOS veut dire Distributed Denial of Service, que l’on peut traduire en
   francais par Attaque de deni de service distribué.

   Une attaque DDOS est réalisée simultanément par un réseau de machines
   d’où la notion d’attaque distribuée   En fait, ces machines ont été
   corrompues au préalable par le cybercriminel via la propagation de
   malwares. On appelle aussi “botnet” ce réseau de machines infectées.

   Il est à noter qu’avec l’essor de l’IoT (ou Internet des objets en
   français), les attaques DDOS gagnent en intensité puisque les
   cybercriminels enrôlent les équipements IoT non sécurisés dans les
   botnets.

   Le cybercriminel va alors exécuter une attaque DDos en ordonnant au
   botnet de saturer le service avec de nombreuses requêtes jusqu’à le
   rendre indisponible.c’est la notion de déni de service. Ce qui va alors
   au final empêcher les vrais utilisateurs du service de l’utiliser.

   Quand je parle de service, il faut le comprendre au sens large là j’ai
   prius l’exemple d’un serveur mais  cela peut être aussi un lien réseau,
   une infrastructure, un site web, une application, etc.

   Autre variante, ce sont les attaques DDoS basées sur la réflexion et
   l’amplification.

   Dans ce cas là, le cybercriminels vont tout simplement utiliser des
   machines accessibles sur Internet et donc non corrompues. Ces machines
   appelées des “réflecteurs” ont juste pour pour but de répondre à des
   requêtes émanant d’une source quelconque.

   Le cybercriminel va envoyer des requêtes à ces réflecteurs en utilisant
   l’adresse IP de la victime comme adresse IP source. Le cybercriminel
   fait alors une usurpation d’identité ou plutôt d’adresse IP pour être
   plus précis.

   Les réflecteurs pensent alors que c’est la victime qui a fait la
   requête et ils vont donc envoyer leurs réponses  aux requêtes vers la
   victime.

   Les réflecteurs vont alors créer un trafic non sollicités par la
   victime, qui subit alors une attaque DDOS. Et là où ce type d’attaque
   peut être dangereuse, c’est qu’il peut y avoir un effet
   d’amplification. En effet, Certains protocoles génèrent des réponses
   d’une taille très supérieure à celle de la requête. on peut citer par
   exemple les protocoles DNS (pour Domain Name System) ou NTP (Network
   Time Protocol).

   Cet effet d’amplification permet de saturer encore plus  rapidement la
   bande passante réseau de la victime, ce qui entraîne le déni de
   service.


   Les motifs des attaques DDOS peuvent être divers :

   Les attaques DDOS sont très courantes dans le monde du gaming. Que ce
   soit pour le fun, par représailles, ou par ennui, le but est de faire
   ralentir la bande passante d’un autre joueur (en saturant leur box par
   exemple), et voir même la faire tomber pour l’empêcher de jouer.

   Les attaques DDOS peuvent venir d’activistes comme par exemple avec les
   Anonymous qui mènent des campagnes d’attaques DDOS contre des sites
   gouvernementaux ou extrémistes

   Et enfin, pour les entreprises, cela peut être signe qu’une menace de
   grande ampleur se prépare. C’est pas l’attaque DDOS en soi qui est la
   menace pour les entreprises mais pour les criminels, cela peut être une
   première phase préparer pour une attaque plus importante.

   L’attaque DDOS peut permettre au cybercriminel de tester la capacité
   d’une entreprise à répondre à une attaque.

   L’attaque DDOS sert aussi à faire diversion en saturant les journaux et
   fichiers de données des équipement de sécurité pour brouiller les
   pistes. Ce qui permet aux cybercriminels durant cette période par
   exemple de masquer l’implantation d’un potentiel malware ou même
   l’extraction de données

   attaque de déni de servicecyber attaquecybersécuritéDDOSSSI

   Video

Dessinons l’iMac !

   14 juin 2018 Samson Laisser un commentaire

   Dans ce poste, j’ai envie de vous parler d’une actualité tech en
   dessinant en même temps. Bon, en vrai, j’ai bien envie de tester ce
   nouvel iPad que je me suis resté récemment. Et je me suis dis pourquoi
   pas le tester directement pour une vidéo.

   IFRAME:
   http://www.youtube.com/embed/jwDK7VocjKQ?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent


   Le sujet de cette vidéo est l’iMac qui fête d’ailleurs ses 20 ans cette
   année. Et dans cette vidéo, je reviens sur cet objet qui a vraiment
   marqué un tournant dans l’histoire d’Apple.

   Il y a 20 ans, en mai 1998, Steve Jobs annonce la sortie du premier
   iMac. Il faut savoir que la sortie de l’iMac est un évènement marquant
   dans l’histoire d’Apple pour plusieurs raisons.

   Premièrement, l’iMac marque le retour de Steve Jobs chez Apple. Il faut
   savoir que Steve Jobs a été viré d’Apple en 1985 à cause de mauvais
   résultats financiers. Sauf que cela n’a fait qu’empirer jusqu’à être au
   bord de la faillite. Dos au mur, c’est à ce moment que Steve Jobs a été
   rappelé en secours. Il va alors travailler sur l’iMac pour relancer
   Apple.

   En gros, si l’iMac ne marchait pas, c’en était fini d’Apple.

   Et heureusement pour Apple, l’iMac à remporté un énorme succès : avec
   plus de 800.000 unités vendues l’année de sa sortie, l’iMac à rapporté
   plus de 400 millions à Apple.

   Avec un processeur PowerPC G3 et un modem intégré, l’iMac offrait des
   performances solides pour un ordinateur grand public de l’époque. Mais
   Steve Jobs voulait d’un ordinateur tout-en-un optimisé pour surfer sur
   Internet. D’ailleurs, le i de l’iMac est pour “Internet”.

   Steve Jobs décide par ailleurs de supprimer le lecteur de disquettes,
   ce qui a été très critiqué car c’était la norme à l’époque. Apple a
   parié sur le fait qu’Internet, les réseaux locaux et les CD
   enregistrable deviendrait les nouvelles normes pour transférer et
   échanger des fichiers. Et c’est d’autant plus intelligent qu’ Apple a
   aussi décidé de remplacer les ports ADB, geoport et SCSI par une toute
   nouvelle norme à l’époque : le port USB. L’iMac est ainsi le premier
   ordinateur au monde à proposer exclusivement des ports USB. Et vous
   connaissez la suite pour l’USB.

   Apple a donc pris des risques et a gagné son pari.

   Niveau design, alors que les ordinateurs personnels de l’époque sont
   rectangulaires et gris, l’iMac possède des angles arrondis dans une
   couleur bleu azur translucide. D’autres coloris seront disponible que
   plus tard comme mandarine, citron vert, fraise, raisin…

   Le choix des couleurs a évidemment été mis en avant comme argument
   marketing par Apple.
   Bref, La popularité de l’iMac a permis donc de relancer Apple au bord
   de la faillite. Et au delà d’un succès financier, l’iMac c’est le
   retour d’Apple dans le cœur du grand public  avec un produit innovant
   et différent dans le monde de l’informatique.

   .


   Adobe DrawAppledessiniMaciMac G3iPadPowerPCsteve jobsUSB

   Video

Voyance connectée – Mon premier court métrage

   9 juin 2018 Samson Laisser un commentaire

   IFRAME:
   http://www.youtube.com/embed/HJ_Q2mKtyrI?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Je voulais le faire depuis un petit moment et ça y est : j’ai osé! J’ai
   sorti mon premier court métrage. Le sujet est l’insouciance que nous
   avons à partager nos données personnelles sur Internet (et notamment
   sur les réseaux sociaux). Cette insouciance peut faire tomber notre vie
   privée dans de mauvaises mains (ou yeux).

   Mon conseil : Soyez conscient que ce que vous partagez de vous sur les
   réseaux sociaux , parce que une fois sur Internet, cela sort de votre
   sphère privée et peut être à la portée d’inconnus.

   court métragedonnées personnellesfacebookinstagramreseaux
   sociauxtwittervie privée

   Non classé

La Blockchain pour les nuls

   25 avril 2018 Samson Laisser un commentaire

   IFRAME:
   http://www.youtube.com/embed/bKtFYnrDXFk?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&start=223&wmode=transparent

   La blockchain qui est juste présentée comme la plus grosse révolution
   depuis Internet. Rien que ça. Pourquoi?

   Parce que tout comme Internet, la blockchain va créer de nouvelles
   opportunités et faire tomber les barrières à l’entrée de nombreux
   secteurs d’activité aujourd’hui détenus par des gros acteurs.

   La Blockchain sera à la transaction ce qu’Internet a été à
   l’information. Et dans le cas de la blockchain, ce sont les acteurs qui
   jouent le rôle d’intermédiaire de confiance dans les transactions qui
   vont voir leur position être remise en question (banque, notaire, et
   même les plateformes numériques comme Uber ou AirBnb).


   Aujourd’hui une transaction financière entre 2 personnes nécessite
   l’intervention d’un tiers de confiance.
     * Coralie veut faire un virement à Christophe pour lui payer ses
       carottes,
     * Elle envoie l’ordre de transfert d’argent à sa banque,
     * La banque va vérifier si Coralie possède déjà bien le montant sur
       son compte et elle va aussi vérifier que c’est bien Coralie qui
       demande le virement,
     * Et si c’est le cas,  la banque va faire le transfert du montant
       demandé du compte de Coralie vers le compte de Christophe.

   Ensuite, le rôle de la banque est aussi de garder une trace de tout ce
   que possède ses clients et une trace de l’ensemble des transactions
   effectuées. Pour notre explication, on dira que la banque stocke toutes
   ces informations dans un grand livre de compte.


   Voyons maintenant comment avec la blockchain il est possible de
   s’affranchir de cet intermédiaire de confiance.

   Tout d’abord, avec la blockchain, ce livre de compte devient public .
   C’est à dire qu’il n’est plus détenu que par un seul acteur mais est
   distribué à tous : chaque personne possède alors une copie de ce livre
   de compte et peut consulter l’ensemble des échanges présents et passés.
   Toutes les personnes qui possèdent ce livre de compte constitue le
   réseau de la Blockchain.

   Reprenons le même exemple mais en appliquant les principes d’une
   transaction avec la Blockchain :
     * Coralie lance l’ordre de virement
     * Les différentes personnes du réseau vont alors vérifier dans leur
       livre de compte que Coralie possède bien le montant nécessaire pour
       la transaction.
     * Si c’est le cas, alors la transaction est validée.
     * Chaque personne va alors écrire cette transaction dans une nouvelle
       page de son livre de compte, ce qui met à jour tous les livres de
       compte de la blockchain.

   Vous l’avez compris avec la blockchain ce n’est pas un seul acteur
   central qui valide ou non une transaction mais c’est l’ensemble des
   membres du réseau.

   Maintenant imaginons que vous essayez de tricher par exemple en
   prétendant posséder plus ou en essayant de falsifier votre livre de
   compte, eh bien cela se va se remarquer car tous les autres verront que
   ce n’est pas ce qui est inscrit dans leur copie du registre. Ils
   contesteront donc l’information.

   Et si on y réfléchit bien, dans ce système, on n’a même plus besoin de
   monnaie physique.

   Dès que vous faites une transaction financière, il suffit de l’annoncer
   et tous les livres de compte mettront à jour l’information. Les livres
   de comptes font foi sur ce que chacun possède et sur l’historique des
   transactions. Vous pouvez vérifiez ce que vous possédez et ce que les
   autres possèdent. Et oui c’est le principe des monnaies virtuelles
   comme le bitcoin. On y reviendra plus tard.

   Dans la vraie vie évidemment, ce ne sont pas des livres qui stockent et
   traitent l’information mais des machines avec de la puissance de calcul
   comme des ordinateurs ou des serveurs.

   Techniquement, la blockchain peut donc être vu comme une base de donnée
   distribuée sur différents noeuds de stockage. Ces noeuds de stockage,
   ce sont les utilisateurs qui vont apporter avec leur machines de la
   puissance de calcul et de l’espace de stockage pour faire fonctionner
   la blockchain.

   La blockchain est donc un système décentralisé maintenu par les
   participants du réseau eux-mêmes.


   Tout comme le livre de compte est constituées des pages de
   transactions, la blockchain est une chaîne formée de “blocs de
   transactions”.

   Chaque échange effectué entre ses utilisateurs est enregistrés sous
   forme de « blocs » qui, mis bout à bout, forme donc une « chaîne ».
   D’où la notion de “blockchain” chaîne de blocs.

   Chaque bloc de la blockchain contient :
     * un ensemble de transactions, évidemment
     * Ensuite un bloc est caractérisé par un “hash”, le hash c’est une
       suite de caracteres unique servant à identifier le bloc, c’est
       l’empreinte du bloc en gros
     * Enfin, le bloc contient aussi le “hash” du bloc précédent qui est
       donc l’identifiant unique du bloc qui le précède (pour garantir
       l’ordre du bloc dans la blockchain)


   Bon, maintenant, je vais entrer un peu plus dans le détails pour vous
   expliquer ce hash. Cela fait appel à des notions de cryptographie mais
   pas de panique je vais vous expliquer ça simplement.

   En gros, un algorithme de hashage : c’est une fonction mathématique qui
    va transformer un ensemble de données de départ en une suite de
   caractères.

   Cette suite de caractère est donc le hash et il est spécifique et
   unique aux données qui ont été prises au départ, ce qui veut dire que
   Tout changement même infime dans le message implique un important
   changement du hash.

   Ensuite, les fonctions de hashage ont une spécificité : elles ne
   marchent que dans un sens. Il n’est donc pas possible de retrouver le
   message initial à partir du hash,

   On ne peut rien faire de la seule suite de caractère du hash

   Le hash permet seulement d’avoir la garantie que les données de départ
   n’ont pas été modifié par quelqu’un.

   Parce que s’il est modifié, le hash sera modifié et vous le verriez
   tout de suite.

   Ici par exemple, on peut voir de façon évidente que le hash du bloc 5
   de Christophe est différent, on peut donc en déduire que son bloc a été
   modifié.


   Revenons maintenant au hash d’un bloc. Un nouveau bloc est identifié
   par son hash comme on l’a vu.

   Et ce hash est notamment calculé à partir du:
     * hash du bloc précédent
     * et Les transactions validées du bloc


   Passons maintenant au dernier point important de la Blockchain liée à
   la cryptographie : la signature électronique.

   Chaque demande de transaction dans la Blockchain doit être signé par
   l’émetteur pour être validé.

   Ainsi, si Nicolas essaye de dire que « Coralie donne 1000 BTC à
   Nicolas », les autres ne vous croiront pas tant qu’ils n’auront pas la
   preuve que c’est bien Alice qui a envoyé le message, et cette preuve
   c’est la signature d’Alice.

   Pour comprendre le concept de signature électronique, on va rapidement
   voir le concept de cryptographie asymétrique.

   Prenons encore l’exemple de Coralie qui veut signer son message, pour
   ça, elle va avoir besoin de génèrer un paire de clés de chiffrement :
     * Une clé privée, qui ne doit être communiquée à personne. Alice doit
       être la seule à posséder cette clé privée
     * Et une clé publique, qui peut et doit être communiquée à tout le
       monde. Ces clés publique sont stockés sur chaque ordinateur du
       réseau.
     * Ces 2 clés publiques et privées sont liés mathématiquement. On va
       voir maintenant en quoi.


   Coralie veut lancer un ordre de virement (ex : »Je donne 10 BTC à
   Christophe), elle va chiffrer ce message à l’aide de sa clé privée.
   Chiffrer un message, ça veut dire le rendre incompréhensible. Pour
   pouvoir lire ce message de nouveau, il est nécessaire de le déchiffrer
   et le seul moyen c’est d’utiliser la clé publique associée créée par
   Coralie. En fait seule cette clé publique est capable de déchiffrer les
   messages qui ont chiffres avec cette clé privée.

   Pour déchiffrer ce message sensée venir  de Coralie, les autres
   personnes du réseau vont donc utiliser la clé publique donnée par
   Coralie.

   Si on a réussi à déchiffrer son message à l’aide de la clé publique de
   Coralie , alors on sait que que le message est bien de Coralie, parce
   que seul Coralie possède la clé privé associé.

   C’est comme ça que dans la blockchain, les différentes personnes du
   réseau s’assure bien de l’identité du donneur d’ordre

   Point suivant encore lié à la cryptographie et c’est le dernier
   rassurez-vous!

   Dans la Blockchain, il n’y a pas de vrais noms.  Et heureusement! Vous
   n’avez tout de même pas envie que tout le monde sache ce que vous
   possédez et ce que vous faîtes comme transactions. Dans la pratique, on
   transfère les actifs d’une adresse à une autre.

   L’adresse est tout simplement une hash de la clé publique. Quand un
   utilisateur génère une paire de clés, il génère donc automatiquement
   une adresse à partir de sa clé publique. C’est à cette adresse que les
   BTC seront envoyé. Grâce à ce système, l’anonymat des utilisateurs est
   préservés

   C’est justement pour pouvoir garder l’anonymat que les cybercriminels
   demandent des versements en bitcoins via leur ransomware.



   Les 2 blockchains les plus connus sont aujourd’hui Bitcoin
   (principalement) et Ethereum qui commence à faire parler d’elle. Ces
   blockchains fonctionnent avec leur propre cryptomonnaie

   La blockchain Bitcoin a une cryptomonnaie qui porte le même nom,
   Bitcoin donc alors que la cryptomonnaie de la BC Ethereum est l’Ether.
   D’ailleurs Ethereum permet bien plus que les transactions en
   cryptomonnaie mais ça on verra plus tard dans la vidéo avec les smart
   contracts.

   A noter que les noeuds du stockage sont aussi appelés les “mineurs”. Et
   Lorsque l’on parle de « miner » des bitcoins, cela veut dire utiliser
   la puissance de calculs des machines pour la résolution des problèmes
   mathématiques pour générer un nouveau bloc. Les mineurs qui ont permis
   de créer un nouveau bloc sont ensuite rémunérés pour ce travail avec de
   nouveaux bitcoins


   Maintenant, prenons un exemple de transaction en bitcoin pour voir
   comment ça marche maintenant qu’on a tous les principes de la
   blockchain en tête.
     * Coralie veut transférer un bitcoin à Christophe. Elle transmet
       cette demande à l’ensemble du réseau.
     * Les mineurs vont vérifier l’ensemble de la blockchain pour
       s’assurer que Coralie possède bien ce bitcoin mais ils vont aussi
       vérifier que l’ordre donné émane bien de Coralie
     * Si tout est OK, alors chaque mineur travaille à forger un bloc
       contenant cette transaction
     * Le premier mineur qui réussit à créer le bloc transmet ce bloc aux
       autres membres pour vérification.
     * Pour qu’un nouveau bloc soit validé, il faut qu’il y ait un
       consensus entre les différents membres du réseau.
     * Revenons à notre transaction. Une fois le bloc validé par les
       membres du réseau, chacun ajoute ce dernier bloc deans leur copie
       de la blockchain
     * Et enfin, Christophe possède alors un nouveau bitcoin

   Chaque nouvelle transaction ajoutée à la blockchain, ne pourra être
   effacée. Cela permet d’assurer la validité et l’authenticité d’une
   transaction

   Jusqu’à présent on a parlé que de cryptomonnaies mais on peut très bien
   étendre ce principe de transferts à d’autres actifs

   C’est par exemple le cas avec les titres de propriétés.

   Au Ghana, une majorité des territoires ruraux ne sont pas enregistrés
   dans un cadastre officiel. Bitland, une organisation basée au Ghana,
   propose alors aux institutions et aux personnes d’enregistrer les
   titres de propriété sur la blockchain. La blockchain fournit un
   enregistrement permanent et vérifiable, et permet de cette façon
   d’aider le gouvernement ghanéen à résoudre les conflits.

   Autre exemple d’actifs stockés dans la blockchain? Les diplômes. Le
   Massachussets institute of Technology  ou MIT commence à utiliser la
   blockchain pour certifier le diplôme de leurs étudiants. Le MIT associe
   le diplôme avec l’identifiant unique de l’étudiant. Ces données sont
   cryptées, grâce à une clé privée du MIT, et stockées dans la
   blockchain.

   Les jeunes diplômés peuvent ensuite transmettre leur diplôme aux
   recruteurs, qui peuvent vérifier l’authenticité des informations sur un
   site du MIT.

   Et à terme On peut même imaginer stocker dans la blockchain tous les
   documents légaux  (par exemple des certificats de naissance, mariage,
   divorce, testament, etc).

   Autre cas d’usage : le caractère inaltérable et transparent de la
   blockchain permet de garantir la traçabilité d’un actif.

   Et c’est pour ça que Carrefour a créee la première blockchain
   alimentaire en Europe. Le but est de garantir aux consommateurs  une
   traçabilité complète des produits commercialisés. Ainsi, tous les
   poulets d’Auvergne de Carrefour intégre un QR Code. Avec ce QR code,
   vous accèdez à l’historique des événements de la vie, de l’élevage, de
   la mort et du transport du poulet. Le client pourra s’assurer que le
   poulet a été élevé dans les conditions exigées par Carrefour.

   Et enfin il y a une dernière utilisation de la blockchain qui très peu
   évoqué et qui pourtant peut être à l’origine de nombreuses
   d’innovations : ce sont les smart contracts. Et c’est ce que je vais
   vous expliquer maintenant.

   Un contrat légal traditionnel définit les règles d’un accord entre
   plusieurs parties. Un Smart Contract va lui figer ces règles dans une
   Blockchain. Mais ce n’est pas tout : Dans un second temps,le Smart
   contract permet de déclencher automatiquement des actions en fonction
   des conditions fixés par le contrat, et tout ça sans nécessité d’action
   humaine. C’est pour ça qu’on les qualifie de « smarts »ou intelligents
   en français

   Concrètement, c’est du code logiciel qui fonctionnent sur une chaine de
   blocs et est déclenché par des données externes

   Allez un petit exemple de smart contracts :

   Et c’est d’ailleurs en s’appuyant sur la Blockchain Ethereum que la
   société d’assurance Axa a lancé son premier smat contract Fizzy qui une
   assurance voyage pour les retards de vol d’avion entre Paris et les
   Etats-Unis.

   Ce smart contrat déclenche automatiquement l’indemnisation de l’assuré
   en cas de retard de son avion  et tout ceci sans avoir besoin d’une
   intervention humaine


   Et comme je l’ai dit au début, la blockchain a le potentiel pour
   « ubériser Uber ». Avec la  blockchain, les utilisateurs peuvent
   effectuer des transactions de pair-à-pair c’est à dire directement
   entre eux : que ce soit avec un chauffeur, un loueur ou un autre
   particulier.

   Ce qu’il est possible de se passer des plateformes intermédiaires,
   comme Uber, AirBnB, Blablacar qui constituent aujourd’hui le cœur de la
   révolution numérique apportées par Internet


   bitcoinblockchaincryptomonnaiedisruptionethereuminternetmonnaie
   virtuellerevolutiontransaction

Navigation des articles

   ← Précédent 1 2 3 … 12 Suivant →

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
   #Cookie connecté » Flux Cookie connecté » Flux des commentaires Cookie
   connecté » Flux de résultats de la recherche pour
   "{search_term_string}"

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : {search_term_string} Rechercher

Rien de trouvé

   Désolé, mais rien ne correspond à votre recherche. Veuillez réessayer
   avec des mots différents.
   Rechercher : {search_term_string} Rechercher

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
   #next Cookie connecté » Flux Cookie connecté » Flux des commentaires

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : ____________________ Rechercher

   Non classé

Le serverless pour les nuls

   19 janvier 2019 Samson Laisser un commentaire

   Dans cet article, je vais donc vous expliquer les concepts les plus
   importants à retenir de l’architecture serverless

   IFRAME:
   http://www.youtube.com/embed/HaehHcLVCTo?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   L’architecture serverless est un modèle de cloud computing dans lequel
   le client peut créer et exécuter ses applications sans devoir gérer la
   partie infrastructures et notamment les serveurs, d’où le terme
   “serverless”, ou “sans serveur” en français.

   Evidemment, l’application, et notamment son code, s’exécute toujours
   sur des serveurs. Parce que oui, on a toujours besoin des
   infrastructures IT pour faire tourner les applications.

   La particularité du modèle serverless elle est simple : le développeur
   doit juste fournir son code. Tout le reste est pris en charge par le
   fournisseur de services cloud.

   Le modèle “serverless” va donc faire abstraction de la partie
   infrastructures IT  pour le développeur. Ce qui veut dire que Le
   développeur s’affranchit ainsi des contraintes de l’infrastructure et
   peut se concentrer sur son travail : le développement.

   Evidemment, il y a des règles à respecter pour rentrer dans le modèle
   serverless

   Premièrement, le développeur va devoir repenser la conception de son
   code.  En effet, le code d’exécution n’est plus celui de toute
   l’application, le code d’exécution doit être décomposée en fonctions.
   Chaque fonction a un seul et unique but. Et l’ensemble de ces fonctions
   forme l’application.

   D’où le terme « Function as a Service » (FaaS) souvent associé au
   “serverless”. Le développeur a la responsabilité de coder sa ou ses
   fonctions. Et Le reste, c’est à la charge du fournisseur de services
   cloud.

   En gros, pour le développeur, ça veut dire :
     * Plus besoin de définir le nombre de serveurs, leur puissance, plus
       besoin de mettre en service, de mettre à l’échelle, d’entretenir,
       de superviser, de les mettre à jour, et toutes autres actions
       concernant la gestion des serveurs.
     * Mais aussi et c’est important : plus besoin de gérer le déploiement
       de son application  sur les différents serveurs.
     * Finis aussi les problématiques de stockage, de load balancing ou
       d’autres problématiques réseau, etc

   Pour le développeur, il faut juste déposer son code et le reste c’est
   le fournisseur de services cloud qui s’en occupe!

   Passons au fonctionnement de cette « fonction »

   Cette fonction va être déclenchée par des événements. Par exemple si la
   fonction est sollicitée par une requête HTTP. La requête déclenche
   l’exécution du code et donc la fonction. Et ici, la requête va
   déclencher la fonction qui va interroger une base de données (donc une
   action sur un autre service)

   A noter que les événements déclencheurs peuvent être divers : que ce
   soit l’ajout d’un fichier sur un espace de stockage ou alors une
   nouvelle entrée dans une BDD

   Ensuite, l’hébergeur cloud garantit le scaling automatique de la
   fonction selon les pics de trafic. Imaginons que la fonction B est
   beaucoup plus sollicitée que les autres, dans ce cas là, la fonction B
   sera exécutée plusieurs fois, cad que plusieurs « unités de travail »
   de la fonction B tourneront en parallèle pour répondre à la charge de
   travail en hausse. Ici B1, B2 et B3 sont la même instance de la
   fonction B mais tournant en en même temps pour répondre au pic de
   charge.

   Et a contrario lors de faible charge, seules les unités nécessaires
   sont éxécutées. Ici la fonction A ne nécessite qu’une seule unité de
   travail pour traiter la demande.

   Et s’il n’y a pas de sollicitation de la fonction alors elle n’est pas
   exécutée. Comme la fonction C ici que vous ne voyez pas car elle n’est
   pas lancée car non sollicitée.

   Pour aller plus loin sur ce modèle d’architecture par fonctions, je
   vous invite fortement à regarder sur les microservices où j’explique
   plus longuement les spécificités de ce type d’architecture.

   Autre point structurant du modèle serverless : la facturation

   La facturation est basée sur les ressources consommées ou le temps réel
   d’exécution du code, avec quand même la milliseconde comme unité de
   paiement. Ce qui veut aussi dire qu’en l’absence de trafic,
   l’utilisateur ne paie rien.

   C’est là tout l’intérêt économique du modèle “serverless”, fini le coût
   des serveurs : leur achats, leur gestion, leur entretiens, etc. surtout
   quand ceux ci sont sous utilisés

   Et en plus, ce modèle de paiement à l’usage incite à l’optimisation de
   la performance du code. Réduire le temps d’exécution d’une application
   serverless permet de diminuer le coût du service, et donc la facture à
   la fin du mois

   Exemple concret : AWS Lambda

   Maintenant que vous avez compris le principe, voyons quelques services
   serverless, le plus connu est AWS Lambda. AWS Lambda est un service
   d’Amazon Web Services (AWS) et il va suivre les principes que l’on a vu
   :
     * Il exécute le code seulement quand c’est nécessaire.
     * AWS lambda s’adapte automatiquement à la charge de travail
     * Et le client ne paye que le temps de calcul utilisé.

   Le prérequis est d’avoir un code dans un langage compatible avec AWS
   Lambda comme Node.js, Java, C#  et Python et respecter le temps limite
   d’exécution de la fonction

   Là je parle d’AWS parce que c’est l’offre que je connais le mieux. Mais
   c’est la même logique derrière Azure Functions de Microsoft et Google
   Cloud Functions de Google Cloud.

   Allez maintenant, on va voir à quoi ressemble une architecture
   serverless sur AWS

   Architecture serverless AWS

   L’architecture serverless est la plupart du temps une conception en
   fonctions qui vont déclencher des actions sur d’autres services.

   Dans notre exemple, les 2 fonctions sont développées en utilisant AWS
   Lambda et sont exposés via une API avec le service AWS API Gateway. Ces
   API sont le point d’entrée qui déclenche la fonction Lambda
   voulu.  Ici, on est sur un site web proposant la vente de cookies. Ici
   le client va demander la liste des cookies vegan. Dans ce cas, la
   fonction Lambda « Liste » extraire la liste des cookies avec que des
   ingrédients vegans. Ce qui déclenche le traitement du service dans le
   service de base de données DynamoDB. Ensuite, Lorsque le client fait un
   achat de cookies, il déclenche une fonction lambda « Achat » qui
   enregistre cette entrée dans AWS DynamoDB

   Ensuite, l’architecture serverless est adaptée pour la construction de
   workflows automatisés basées sur les fonctions Lambdas qui vont servir
   de liens entre les différents services AWS.

   Dans cet exemple : Un nouveau fichier est déposé sur un bucket S3
   (bucket S3 étantun service d’espace de stockage dans le cloud). Cette
   action déclenche une fonction qui va le décompresser et l’insérer dans
   DynamoDB. Cette écriture dans Dynamo DB va lui même déclencher une
   autre fonction Lambda qui va lancer le service SNS pour envoyer un SMS
   de notification

   Les limites du modèle

   Le serverless n’est pas adaptés à tous les cas d’usage. Les contraintes
   de temps d’exécution du serverless ne sont pas adaptées pour
   l’exécution de tâches lourdes et complexes (comme le traitement vidéo
   par exemple). et plus généralement les applications qui ont un trafic
   constant. Il y a donc une nécessité de bien concevoir l’architecture
   d’une application en amont : cela permet de décider si une architecture
   serverless convient pour l’application.

   Enfin, dernière contrainte de ce modèle : c’est la forte dépendance au
   fournisseur de services cloud et plus particulièrement à son framework
   : chaque fournisseur de service cloud impose des règles différentes
   (timeouts, langages supportés, etc.). Ce qui veut dire que pour migrer
   après ça va être très compliqué. Vous êtes souvent donc prisonnier des
   règles du fournisseur de services cloud qui peuvent changer.


   AWS lambdacloud computingFaaSgoogle cloud functionserverless

   Non classé

La Transformation digitale / numérique pour les nuls

   21 octobre 2018 Samson Laisser un commentaire

   Le développement technologique s’accélère et les innovations sont de
   plus en plus nombreuses.  Face à ces changements inévitables, les
   entreprises ont le choix :
     * Soit elles s’adaptent en s’appropriant ces nouvelles technologies
       pour innover
     * Soit elles peuvent ne pas réagir et mourir, dépassé par les
       concurrents qui auront réussi à tirer bénéfices de ces nouvelles
       technologies.

   Et c’est en ça que la transformation numérique est vitale pour les
   entreprises.

   Alors en quoi consiste la transformation numérique( ou appelé aussi
   transformation digitale)?

   IFRAME:
   http://www.youtube.com/embed/HjAxHRMc7mI?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent


   Il s’agit d’un processus continu permettant aux entreprises d’intégrer
   les nouvelles technologies, comme par exemple le cloud, l’IoT ou
   l’intelligence artificielle, et ceci à tous les aspects de leurs
   activités et aux différents niveau de l’entreprise.

   Mais attention, la transformation numérique, ce n’est pas que des
   problématiques technologiques, il y a un aspect humain très important.
   Que ce soit par exemple une nouvelle culture à mettre en place, une
   nouvelle façon de gérer l’humain ou une nouvelle approche des métiers
   et des process, etc

   La transformation numérique est donc une transformation globale de
   l’entreprise.


   L’objectif c’est de capitaliser sur ces nouvelles technologies pour
   créer de la valeur et bénéficier de nouvelles opportunités business.

   Sinon il y a risque de se faire damer le pion face par des concurrents
   plus rapide, ou alors par les GAFA championne du numérique mais aussi
   par nombreuses start-up qui menace les positions des plus grandes
   entreprises.


   Maintenant qu’on a vu les enjeux, voyons 3 piliers cles d’une
   transformation numérique réussie  :

   Le premier est l’expérience client qui doit être une priorité. Pour
   l’optimiser, les entreprises doivent tirer le meilleur du digital pour
   pouvoir satisfaire, fidéliser et faire rêver le client. Sinon il ira
   voir ailleurs. Les nouvelles technologies du digital permettent ainsi
   de créer de la valeur pour le client.

   Pour être un peu plus concret, je vais prendre l’exemple des nouvelles
   technologies autour de la donnée. La donnée est considéré aujourd’hui
   par tous comme un élément clé dans cette révolution numérique.

   Les entreprises qui vont se demarquer sont celles qui vont maitriser
   les technologies capable de capitaliser sur ces données pour en créer
   de la valeur. par exemple avec le big data, et l’intelligence
   artificielle,


   Le deuxième pilier est une organisation tournée vers l’agilité . Dans
   un marché changeant et incertain; être agile est fondamental pour mieux
   s’adapter aux changements et inbtégrer rapidement les nouvelles
   technologies. Les projets sont alors plus nombreux et plus rapides à
   mettre en place.

   Cela passe par la simplification de l’organisation de l’entreprise mais
   aussi les bonnes pratiques pour permettre d’être plus réactif. Par
   exemple les principes du lean start-up, les méthodes agiles ou le
   devops.

   L’objectif de tout ça est d’avoir surtout avoir un  « time to market »
   rapide! Le time to market c’est le délai entre la naissance d’une idée
   et sa mise en place sur le marché. Ce qui veut dire que plus le Time To
   Market est rapide, plus l’entreprise aura des chances de saisir les
   opportunités business en proposant des produits ou services intégrant
   les dernières technologies

   Essayer, s’adapter et évoluer en permanence devient un mode de
   fonctionnement pour les entreprises.


   Enfin dernier pilier :  La transformation est avant tout une question
   d’humains !Rassembler les collaborateurs autour d’une vision commune
   est essetntiel. La simplification de l’organisation et donc la
   suppression des silos favorise le travail collaboratif, l émerge,ce
   d’idées et les prises d’initiatives, tout ça étant nécessaires pour
   développer l’innovation.

   Il est aussi primordial attirer, développer et fidéliser les meilleurs
   profils. Parce que oui, c’est aussi une guerre des talents.


   digitalnumériquetransformation digitaletransformation numérique

   Video

La petite histoire de Linux (en dessins)

   21 octobre 2018 Samson Laisser un commentaire

   Aujourd’hui, je vais vous raconter des anedoctes sympas sur la
   naissance de Linux

   IFRAME:
   http://www.youtube.com/embed/IquNF_DXcF8?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent


   Première chose à retenir sur Linux parce qu’il y a pas mal de confusion
   :
     * Linux est un noyau, c’est pour ça qu’on parle d’ailleurs de “Linux
       kernel”. Kernel veut dire noyau en francais.
     * Et en gros, c’est ça qui permet de démarrer, de faire la liaison
       entre le matériel et le système de la machine, ainsi que de faire
       la liaison entre les applications installées sur la machine.

   Le hic c’est qu’on ne peut pas utiliser ce noyau seul. Il faut un
   environnement (des logiciels autour du noyau afin que tout marche bien
   : des pilotes,, de quoi gérer la machine, etc).

   C’est là où la notion de distribution apparaît :
     * On parle de distribution GNU/Linux quand il s’agit d’une solution
       prête à être intallée par l’utilisateur final sur sa machine.
     * Cette distribution GNU Linux  comprend un noyau Linux ainsi que des
       logiciels sous Licence GNU, en gros on va dire que ce sont des
       logiciels libres qui complètent le noyau pour avoir un système
       d’exploitation complet.
     * Il est à noter qu’on peut aussi très bien trouver des distributions
       qui ne contiennent pas seulement les logiciels GNU, il y a parfois
       d’autre logiciels non GNU.

   Bref, c’est ce noyau Linux + des logiciels complémentaires qui vont
   permettre d’avoir un OS complet.

   Voici des exemples de systèmes d’exploitation “Linux » :
     * Red Hat Enterprise Linux
     * Fedora Linux
     * Debian Linux
     * Ubuntu Linux

   Ensuite il y a aussi souvent une autre confusion entre Linux et
   UNIX. Alors quelle différence?
     * Déjà pour l’anecdote sachez que le système d’exploitation “Linux” a
       été créé dans le but de fournir un équivalent libre au système
       Unix.
     * Linux est un clone d’UNIX en version libre et écrit à partir de
       zéro par Linus Torvalds, le createur du noyau Linux donc,  avec
       l’aide d’une équipe d’informaticiens.
     * Par contre UNIX regroupe un ensemble de systèmes d’exploitation
       différents. Ce ne sont donc pas juste des noyaux mais bien des OS
       complets
     * Comme exemples de système Unix connus, on a HP-UX, IBM AIX, Solaris
       Sun

   Maintenant on va un peu s’intéresser au père de Linux :

   En 1991, l’étudiant finlandais Linus Torvalds qui a alors 22 ans,
   commence le développement d’un noyau de système d’exploitation
   alternatif à MINIX, qui est un clone d’UNIX utilisé à des fins
   pédagogiques pour des étudiants. Linux va au final créer avec son
   nouveau noyau une alternative à UNIX.

   Après quelques mois, Il diffusa le code de son travail via un compte
   FTP de l’Université d’Helsinki. Et pour la petite anecdote le dossier
   contenant ces travaux a été nommé « Linux » par un administrateur du
   serveur FTP.  Linux pour « Linus UNIX » ou en français l’UNIX de
   Linus. Et par la suite, ce nom restera.

   Linus publie par la suite ses travaux sur Internet en demandant à
   d’’autres développeurs de l’aider pour le finaliser. Aujourd’hui Linus
   continue de diriger le développement du noyau Linux


   Concernant la mascotte officielle de Linux, il s’agit d’un manchot du
   nom de TUX. TUX étant un acronyme composé des mots Torvalds et UNIX.  A
   noter que beaucoup pensent à tort que la mascotte de Linux est un
   pingouin, notamment parce qu’en anglais, le mot « manchot » se dit «
   penguin », mais TUX est bien un manchot

   La différence ?

   Le pingouin est un oiseau de l’hémisphère nord qui peut voler, alors
   que le manchot est un oiseau qui ne vit que dans l’hémisphère sud et
   qui est incapable de voler En gros hein!


   Aujourd’hui, bien que peu présent sur les postes de travail, Linux est
   beaucoup plus présent dans le monde des serveurs

   Le noyau Linux équipe aussi la plupart des systèmes embarqués (box,
   robots, aérospatial, drones…). mais aussi les supercalculateurs

   Et pour terminer, comme vous le savez sûrement déjà, Linux domine le
   marché des smartphones via l’OS Android qui s’appuie sur un noyau Linux


   AndroidGNULinusLinuxMINIXnoyauOSsysteme d exploitationTorvaldsTUXUNIX

   Video

Les algorithmes nous contrôlent-ils ?

   30 septembre 2018 Samson Laisser un commentaire

   Aujourd’hui on va parler des algorithmes, le buzzword du moment!

   IFRAME:
   http://www.youtube.com/embed/sp-uCwbs6H8?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Quand le moteur de recherche Google te propose des résultat de
   recherche, c’est en fait un algorithme qui va décider des résultats qui
   te seront présentés et leur classement.

   Quand Netflix te conseille une série, c’est pareil, c’est un algorithme
   qui va te faire ces suggestions.

   Les news qui vont apparaître sur ton fil d’actualité et leur ordre,
   c’est aussi un algorithme. Pareil pour l’ordre des photos et des
   stories sur Intagram, là aussi c’est un algorithme qui organise tout
   ça.

   Le pouvoir des algorithmes est d’autant plus important que le numérique
   fait partie intégrante de notre vie (smartphone, les objets connecté,
   service en ligne, applications, etc). Et quand tu regardes un peu ce
   qu’en pense les médias c’est encore plus anxiogène. Tu as juste
   l’impression d’être l’esclaves des algorithmes, qu’on a perdu notre
   libre arbitre qu’ils nous lavent le cerveau.

   Alors, Les algorithmes nous contrôlent-ils tous?  Je fais cette vidéo
   pour un peu demystifier tout ça justement. Qu’est ce qu’il y a derrière
   les algorithmes, tout ce que vous devez savoir sur le sujet et savoir
   quels sont les vrais enjeux des algorithmes et leur réel pouvoir.


   Déjà voyons ce qu’est un algorithme : un algorithme, c’est tout
   simplement une suite d’instructions permettant de résoudre un problème.
   Et ces instructions doivent pouvoir être applicable mécaniquement, sans
   réfléchir, pour arriver à un résultat.


   Les premiers algorithmes auquels on pense ce sont forcément les
   algorithmes mathematiques. Rappelez vous en primaire… La fameuse
   division euclidienne pour trouver le plus grand commun diviseur. Vous
   avez dû apprendre cet algorithme pour arriver à trouver le plus grand
   commun diviseur entre 2 nombres entiers.

   M’enfin, au dela des mathématiques, il y a bien plus simple comme
   algorithme dans la vie de tous les jours,

   Lorsque vous suivez une recette de cuisine pour faire un gateau. Si
   vous suivez bien la recette avec les bon ingrédients, à la fin le
   resultat c’est le gâteau. La recette c’est en fait un algorithme avec
   une suite d’instructions à éxécuter étape par étape pour faire ce
   gâteau.

   Transposé à l’informatique, les algorithmes permettent tout simplement
   de dire à un programme informatique tout ce qu’il doit faire. Les
   concepteurs de programmes informatiques vont définir dans l’algorithme
   une suite d’opérations logiques pour un arriver à un résultat
   voulu. Tout ça sera ensuite codé dans un langage informatique adapté
   pour pouvoir être appliqué automatiquement par le programme
   informatique.


   Ce sont les algorithmes qui définissent les actions des bots. Ce sont
   les algorithme qui vont décrire les tâches spécifiques que doivent
   réaliser ces programme informatique. Par exemple, les algorithme sont
   derrière les moteur de recherche, les fameux bot twitter qui font des
   actions spécifiques comme retweeter ou liker un mot clé spécifiques
   défini, et ce sont les algorithmes qui sont derrière l’intelligence des
   chatbot comme ceux sur messenger ou bien même les assistants vocaux
   comme Siri ou Alexa.

   Evidemment, il y a quand même une grosse différence entre l’algorithme
   simple du bot twitter qui fait que retweeter bêtement ce qu’on lui a
   dit  aux algorithmes de facebook, netflix ou amazon qui sont capable de
   s’adapter aux consommateurs.

   Cette différence c’est ce qu’on appelle le machine learning.

   Le machine learning c’est en gros quand l’algorithme va utiliser vos
   données pour apprendre et faire des actions plus efficaces. Les
   algorithmes ne sont maintenant plus seulement les instructions de base
   programmées par un développeur. Ils sont capable d’apprendre.  La
   machine peut générer de nouvelles instructions en apprenant à partir à
   la masse de  données qui lui sont fournies.  Ces données sont notamment
   des données personnelles que vous leur fournissez sur vous

   Et c’est comme ça que les algorithmes semblent parfois bien connaître
   nos goûts, nos envies et nos besoins.  Et là vous pensez aux
   suggestions d’Amazon qui des fois sont vraiment bluffantes car c’est ce
   que vous vouliez, la playlist spotify qui vous ait proposé et qui
   correspondent bien à vos goûts


   je vais vous prendre un exemple sympa.

   L’objectif  de netflix c’est de vous faire rester le plus longtemps sur
   sa plateforme parce que c’est l’abonnement qui va rémunérer netflix. Du
   coup, pour que vous restiez sur la plateforme le but c’est que vous
   consommiez toujours plus de contenu.

   La mission de l’algorithme c’est de faire en sorte que vous consommiez
   toujours plus de contenu

   C’est pour ça que l’algorithme doit apprendre à connaitre vos goûts
   pour vous pousser vers les séries ou films susceptibles de vous faire
   continuer à regarder plus.

   Saviez vous que Netflix va jusqu’à personnaliser les vignettes des
   series en fonction des données que netflix possède sur vous.

   Cela a été fait avec Stranger things :

   L’algorithme Netflix est capable de « prédire la probabilité que vous
   cliquiez sur un contenu en fonction d’une image donnée » et la vignette
   avec la plus forte probabilité de vous faire cliquer sera affichée par
   l’algorithme Netflix. C’est comme ça que Netflix arrive à vous faire
   regarder le plus de série possible

   Que ce soit Instagram, Facebook, Amazon, Youtube, aujourd’hui ces
   algorithmes complexes ont besoin de données sur vous pour être plus
   performant. Un des éléments clés à retenir c’est que sans vos données
   personnelles, ces algorithmes ne seraient pas aussi puissants. D’où
   l’importance de bien maitriser ses données personnelles en ligne.

   En tout cas, avec le machine learning, on entre dans la notion
   d’intelligence articielle. On parle de machine learning pour désigner
   la capacité d’une machine à apprendre et donc évoluer.

   La machine acquiert alors  de nouvelles connaissances qu’on ne lui
   avait pas programmés au départ. La machine apprend, s’améliorer et
   ‘évoluer d’elle même grâce à de nouvelles données. C’est pour cela
   qu’on parle d’intelligence artificielle.


   Avec ce que l’on vient de voir, on peut constater une chose : ces
   algorithme ne sont pas NEUTRE. et c’est important de le prendre en
   compte. Ils ont été conçus et codé par des développeurs qui leur a
   transmis une façon de fonctionner et un objectif à atteindre que ce
   soit les news sur fil d’actualité sur facebook, l’exemple des résultats
   de recherches Google, l’ordre des stories et photo sur Instagram, etc

   On a l’impression que c’est objectif mais il est important de retenir
   que ce des gens qui derrière tout ça on mis en place des critères de
   classement en fonction de leurs objectifs et de ses préjugés, de
   contraintes. Quand on parle d’algorithme on a l’impression que c’est
   neutre. Alros que cela peut masquer des convictions politiques, des
   objectifs financiers, des stratégies d’entreprises, etc. D’ailleurs les
   GAFA restent très discret sur le fonctionnement des algorithmes. et
   comme on l’a vu dans la vidéo c’est parce qu’il y a de réels enjeux
   derrière.

   C’est important d’avoir du recul sur l’action des algorithmes et de
   savoir qu’ils ne sont pas neutre pourempêcher que les GAFA et des
   entreprises du numérique de  transférer leur responsabilité sur les
   algorithmes. Lorsque facebook a été utilisé ou plutot leur algorithme
   détourné pour propager des fake news notamment pour les élections
   américaines de 2016, c’est de la faute de facebook, l’algorithme c’est
   juste l’épouvantail. Facebook a une responsabilité de l’utilisation de
   sa plateforme et de ce qui en est fait (et là je vous parle meme pas
   des données).

   Les gens qui ont reussi à hacker ont détourné l’algorithme à leur
   avantages pour diffuser des fake news. C’est à Facebook d’en assumer la
   responsabilité, ils sont responsable de leur algorithme.


   algorithmesBig datadonnées personnellesGAFAIAintelligence
   artificiellemachine learning

   Video

Le DNS pour les nuls

   30 septembre 2018 Samson Laisser un commentaire

   IFRAME:
   http://www.youtube.com/embed/qzWdzAvfBoo?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Sur Internet, quand vous voulez accéder à un site web via votre
   navigateur, on va utiliser ce que l’on appelle un nom de domaine, par
   exemple cookieconnecté.fr, Wikipedia.org, Youtube.com …

   Bref, c’est l’adresse du site web que vous tapez sur votre navigateur.

   Dans la réalité, votre navigateur, lui il va avoir besoin de l’adresse
   IP du serveur sur lequel est hebergé votre site web. Par exemple
   194.153.205.26

   L’adresse IP est un numéro d’identification qui est attribué  à chaque
   appareil connecté à un réseau informatique utilisant l’Internet
   Protocol (d’ailleurs le IP c’est pour Internet Protocol). En gros, ca
   veut dire que chaque ordinateur connecté à internet possède une adresse
   IP.

   Sauf que vous l’avez compris ce serait un peu compliqué pour nous de
   retenir ces adresses IP. Et c’est là qu’intervient le DNS (Domain Name
   System) qui va “traduire” ces noms de domaines en adresses IP. La
   résolution de noms de domaines, c’est la corrélation entre les adresses
   IP et le nom de domaine associé.

   Les serveur DNS sont tout simplement des serveurs qui font la
   correspondance entre les adresses IP et les noms de domaine associés.


   Maintenant, voyons comment tout ça marche un peu plus dans le
   détail. Je vais vous expliquer maintenant à la notion de Hiérarchie
   DNS

   Le système des noms de domaine est en fait une hiérarchie dont le
   sommet est appelé la racine. On représente cette dernière par un point
   “.” pour info ce point n’apparait pas dans les addresses de site web
   qu’on utilise sur Internet mais c’est bien le plus haut niveau.

   Les domaines se trouvant immédiatement sous la racine sont appelés
   domaine de premier niveau “.fr”, .com, .org, etc (ou top domain level
   en français)

   Dans un nom de domaine, les domaines successifs sont séparés par un
   point, les noms de domaines supérieurs étant à droite. Le domaine
   wikipedia.org. est un sous-domaine de .org. et vous l’avez compris
   fr.wikipedia.org est un sous domaine de fr.wikipedia.org

   Il est possible d’avoir plusieurs sous-domaines ainsi qu’une
   délégation, c’est-à-dire une indication que les informations de ce
   sous-domaine sont enregistrées sur un autre serveur.

   On peut voir fr.wikipedia.org comme un sous domaine hébergé sur un
   serveur spécifique par exemple et de.wikipedia.com sur un autre serveur
   spécifique

   La résolution des noms de domaines est réalisée en parcourant la
   hiérarchie depuis le sommet et en suivant les délégations successives.


   Voyons maintenant comment se passe la résolution du nom de domaine avec
   un navigateur

   Imaginez que vous entrez fr.wikipedia.org dans votre navigateur. votre
   navigateur doit commencer par le résoudre en une adresse IP. tous
   simplement Parce qu’il faut qu’il sache à quel serveur se connecter.

   Ici, on va taper fr.wikipedia.org sur notre navigateur. Il va alors
   s’adresser à un serveur dit “récursif”.

   Pour information, les fournisseurs d’accès à Internet mettent à
   disposition de leurs clients ces serveurs récursifs par défaut quand il
   se connecte à Internet. Mais Il existe également des serveurs récursifs
   ouverts comme ceux de Google Public DNS ou OpenDNS ou Cloudfare

   Quand un serveur DNS récursif doit trouver l’adresse IP de
   fr.wikipedia.org, un processus itératif commence pour consulter la
   hiérarchie DNS du nom de domaine :
     * Ce serveur demande aux serveurs DNS de nom racine quels serveurs
       peuvent lui répondre pour la partie org.
     * Le serveur va indiquer quels serveurs connaissent l’information
       pour la zone wikipedia.org.
     * Ensuite, ce serveur donnera à son tour l’information pour avoir
       l’adresse IP du serveur hébergeant fr.wikipedia.org. car il connait
       déjà l’adresse IP du serveur hébergeant le sous domaine fr de
       wikipedia.org

   Et une fois que vous avez l’adresse IP de ce domaine, le navigateur y
   accède est affiche la page demandée

   DNSDNS recursifDomaine Name systemnom de domaineserveur DNS

Navigation des articles

   1 2 … 12 Suivant →

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
   #prev next Cookie connecté » Flux Cookie connecté » Flux des
   commentaires

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : ____________________ Rechercher

   Video

Les microservices expliqués simplement

   25 mars 2018 Samson Laisser un commentaire

   IFRAME:
   http://www.youtube.com/embed/ucHwp1jUS2w?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&start=73&wmode=transparent

   Pour donner une définition des microservices, on peut dire que c’est
   une approche d’architecture logicielle où une application est
   décomposée en plusieurs petits services. Et ces services sont souvent
   spécialisés dans une seule tâche.

   A noter que quand on parle de service, il faut comprendre service
   métier, c’est à dire un groupe de services techniques qui fournissent
   une fonctionnalité avec un sens métier.

   Si on prend l’exemple d’un site de vente en ligne, on aura des
   microservices par exemple pour le panier, la page d’accueil,
   l’historique, l’inventaire, etc

   Ensuite, l’architecture microservices a été inventée pour répondre aux
   problèmes rencontrées par les applications dites monolithes.

   Une application monolithe est une application qui a pour ambition de
   traiter toutes les demandes possibles et répondre à un maximum de cas
   d’usage. Sauf qu’avec le temps, les applications ont tendance à grossir
   en intégrant toujours plus de nouvelles fonctionnalités mais en
   supprimant rarement les anciennes fonctionnalités, même lorsqu’elles
   deviennent inutiles ou obsolètes. Et avec le temps les différentes
   briques développent des interdépendances entre elles. Et avec ça, la
   quantité de code augmente et ce code devient de plus en plus complexe.

   Il devient alors impossible d’avoir en tête un modèle global du projet.
   On se retrouve devant une application difficile à maîtriser et à faire
   évoluer.

   Enfin, plus un projet est gros, plus il est critique pour l’entreprise,
   et moins on va prendre de risques pour tester des nouveautés, on va
   donc préférer la stabilité à l’innovation

   La réponse de l’architecture microservices à ce problème est simple :
   découper l’application en différents modules fonctionnels, en
   microservices.

   Chaque microservice exécute une partie spécifique et unique de
   l’application. Et ces services peuvent être accédés par le client via
   l’API du microservice correspondant. Le but de l’architecture
   microservices est de redonner un maximum d’agilité et d’évolutivité à
   une application.

   Côté technique l’architecture microservices est très souvent couplé à
   la technologie des conteneurs, et notamment Docker.

   Quant aux conteneurs, Le principe est d’avoir un conteneur par unité de
   microservices. Ainsi, Chaque microservice a son propre environnement
   d’exécution pour héberger son code. Avec les conteneurs, Il est donc
   très facile en fonction du besoin d’adapter le nombre de microservices,
   à la hausse comme à la baisse.

   SI un service est plus demandé lors d’un pic de charge, il suffit de
   créer plus de conteneurs fournissant ce microservice. A contrario,
   quand la demande de ce service diminue, il suffit de ne garder que le
   minimum de microservices pour couvrir la demande. Dans l’architecture
   microservices, il suffit juste d’adapter le nombre de ce microservice
   au besoin alors que dans les application monolithe, il aurait fallu
   modifier la totalité de l’application à cause des interdépendance.

   Et c’est en étant couplé avec l’utilisation des conteneurs que Chaque
   microservice devient autonome vis à vis des autres microservices
   Un microservice peut être alors modifiée, supprimée ou déployée sans
   impacter les autres microservices.

   Ce qui veut dire qu’avec une application découpée en microservices, il
   est plus simple de cibler les différentes parties impactées d’une
   application lors d’une évolution. Ce qui facilite la modification des
   parties concernées sans risque pour le reste de l’application non
   impliqué.

   Du coup, les mises à jour et nouvelles fonctionnalités peuvent être
   déployées beaucoup plus facilement et rapidement, rendant le
   déploiement continu possible.

   Concernant l’organisation humaine, la taille des projets est limitée à
   une équipe de quelques personnes. Chaque équipe est autonome et va donc
   gérer son organisation et sa base de code.
   Une équipe est alors libre des choix techniques en fonction de leurs
   besoins propres.

   Terminons par des points d’attention à propos des microservices
   Et tout ce que l’on vient de voir doit permettre aux entreprise d’avoir
   un atout très très important et c’est d’ailleurs ça qui va pousser à
   l’adoption des microservices.

   Et cette carotte c’est le fait d’avoir un time to market plus rapide.
   Le time to market c’est le délai de mise sur le marché.cad le temps
   qu’il y a entre la naissance d’une idée jusqu’à son lancement sur le
   marché. Aujourd’hui un time to market rapide est devenu un facteur
   stratégique majeur, il permet à une entreprise de prendre un avantage
   concurrentiel décisif sur ces concurrents en intégrant la toute
   dernière innovation dans ses produits ou d’adapter ses produits aux
   nouveaux besoins du marché.

   Comme on l’a vu tout à l’heure les microservices permettent justement
   de déployer plus rapidement et facilement. Ce qui veut dire être
   capable de s’adapter plus rapidement à la demande du marché et aux
   nouveautés.

   Par contre et il est important de souligner :

   Plus les itérations sont nombreuses et rapides (notamment dans le cadre
   d’un déploiement continu), plus cela va demander cela va demander aux
   équipes de se synchroniser rapidement.
   Cela va demander une organisation mature pour la communication et
   coordination entre les équipes et une synchronisation de leurs
   priorités et objectifs pour qu’ils soient alignés avec les enjeux
   business


   architecture logicielleconteneurDockermicroservice

   Video

Qu’est ce qu’un bot? (chatbot, botnet, spambot…)

   11 mars 2018 Samson Laisser un commentaire

   IFRAME:
   http://www.youtube.com/embed/BZRr1ABDkKA?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Le terme Bot est la contraction du mot anglais“robot”. Et les bots sont
   des programmes informatique développés à l’origine pour effectuer des
   tâches répétitives.

   Principalement parce que cela permet de faire économiser du temps aux
   humains et d’autre part parce que les bots sont bien plus efficace pour
   ce genre de tâches répétitives. Du coup il existe autant de variété de
   bot que de tâches automatisables. Et comme nous les humains, on est des
   grosses feignasses, on demande aux bots de faire plein de trucs à notre
   place.

   Voyons quelques exemples pour mieux comprendre le grand nombre mais
   aussi la diversité des bots sur le web.

   Premier exemple, les robots d’indexation chez Google. Ces bots passent
   leur temps à parcourir le web, à analyser des tonnes d’informations
   pour pouvoir indexer les pages web pour le moteur de recherche. C’est
   d’ailleurs comme ça que Google arrive à proposer des résultats
   pertinents. C’est donc le boulot d’indexation de ces bots qui t’évite
   de perdre des heures à regarder chaque page web une par une à la
   recherche de la bonne information.

   Autre exemple : Sur twitter, des comptes twitter réagissent à des mots
   clés spécifiques. Par exemple si tu tweetes le mot Bitcoin, tu verras
   des comptes débarquer liker ton tweet ou même te répondre. Ce sont des
   compte twitter qui peuvent être tenus par des vraies personnes mais qui
   sont aidés par des bots. Le but de ces bots c’est de repérer toutes les
   personnes intéressées par le sujet et essayer de capter leur attention.

   Ensuite, Il est aussi possible de créer des bots pour lire des vidéos
   Youtube  ou mettre des likes automatiquement. Il y a des entreprises
   qui vendent des likes.

   Bref tout ça pour dire qu’on peut faire faire et qu’on fait déjà faire
   beaucoup de choses sur internet par des bots, ce qui explique qu’ils
   sont en plus grand nombre en terme de trafic sur le web que les
   humains.

   Bon là c’étaient des exemples de bots qui exécutent des tâches simples
   et basiques. Mais avec le progrès, certains bots deviennent des
   applications à part entière avec une gamme très large de
   fonctionnalités. En effet, certains intégrent même des programmes
   d’Intelligence Artificielle. Prenons l’exemple des des chatbot qui sont
   très à la mode en ce moment.

   Alors le chatbot, c’est un logiciel programmé pour simuler une
   conversation en langage naturel par messagerie d’où le terme “chat”.

   C’est le cas avec les bots messenger de facebook : tu peux demander le
   temps qu’il fait dehors avec le chat Bot Poncho ou commander une pizza
   via le chatbot de Pizzahut.

   Plus besoin de lignes de commande, suffit juste de leur poser une
   question comme si on s’adressait à un autre humain. Et le chatbot va au
   besoin affiner la demande à travers une conversation pour mieux
   comprendre le besoin et ainsi fournir le service demandé.

   Comme ça tu n’as plus qu’à demander à ton chatbot. Et le chatbot lui va
   s’occuper de s’interfacer avec la bonne application ou base de données
   pour répondre à ta demande. Ces chatbots se comporte donc comme des
   assistants personnels.

   Et le niveau suivant de ces bots assistants personnels c’est de
   s’affranchir de l’ordinateur ou du mobile, on peut par exemple citer
   Google Home ou Alexa d’Amazon. Dans ce cas, il suffit juste de parler,
   c’est encore plus simple et plus naturel.

   Bon, Là j’ai parlé des bots sympas qui aident les humains mais il
   existe aussi des mauvais bots dont les actions ont une finalité
   malveillante. Par exemple, il existe une version mauvais bot
   d’indexation Google, c’est le spambot.

   Les spambots parcourt le web à la recherche des adresses mail qu’il
   trouve sur des sites web ou de forums de discussions par exemple. Le
   but de construire des listes d’adresses pour l’envoi de spam.

   Les mauvais bots ne sont que des actions malveillantes automatisés
   après tout.

   Enfin, une catégorie de mauvais bot bien plus dangereux : les Botnets.

   Les botnets désignent un réseau de machines zombies, c’est à dire
   contrôlés à l’insu des utilisateurs par un cybercriminel.

   Les botnets malveillants peuvent par exemple :
     * Réaliser des opérations de phishing ;
     * Infecter d’autres machines par diffusion de malwares ;
     * Participer à des attaques de déni de service (qu’on appelle aussi
       DDoS) ;
     * Récupérer des informations sur les machines compromises (mots de
       passe, informations personnelles ou données bancaire).

   AIautomatisationbotbotnetchatbotIAintelligence artificielle

   Video

Le chiffrement SSL/TLS pour les débutants

   27 février 2018 Samson Un commentaire

   Bonjour à tous!

   Dans cette vidéo je vais vous parler de chiffrement des communication
   sur le web. Plus concrètement c’est lorsque vous surfez sur des sites
   en https. Alors oui, vous savez maintenant que le S c’est pour dire que
   la communication est sécurisée car chiffrée.

   Et dans cette vidéo, je vous explique comment tout ça marche dans cette
   vidéo.



   IFRAME:
   http://www.youtube.com/embed/7W7WPMX7arI?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

   Mais voyons ce qu’est le chiffremement web avec un exemple :
     * Lorsque vous vous connectez sur le site de votre banque, la
       connexion se fait toujours en https pour des raisons de sécurité
     * Vous pouvez vérifier ce sera toujours le cas (ou alors changez de
       banque!)
     * Mais que se passerait-il si la communication se faisait en HTTP?

   Eh bien c’est simple, toutes les informations échangées transiteraient
   en clair. Ce qui veut dire qu’une personne malveillante peut
   intercepter les échanges avec votre banque et donc avoir toutes les
   informations qui y transitent

   En fait le HTTPS c’est une connexion HTTP dans un tunnel chiffré
   SSL/TLS. Et ce tunnel va sécuriser vos échanges car mêmce si une
   personne malveillante intercepte vos échanges, les informations sont
   chiffrées et donc incompréhensibles pour elles.

   SSL veut Secure Sockets Layer. TLS veut dire Transport Layer Security.
   SSL et TLS sont des protocoles de sécurisation des échanges sur
   Internet. Aujourd’hui c’est TLS qui est utilisé, SSL étant obsolète.
   Mais on parle parfois de SSL/TLS pour parler juste de TLS.


   Maintenant voyons ce qui se passe derrière ce chiffrement SSL/TLS.

   Le chiffrement consiste à transformer vos données afin de les rendre
   illisible grâce un algorithme de chiffrement et une clé de chiffrement

   La clé de chiffrement est utilisé par un algorithme, pour chiffrer et
   déchiffrer des données utiles (l’information qu’on veut faire
   transiter). La clé de chiffrement c’est une donnée (en gros c’est une
   suite de bits comme une phrase ou une série de chiffres) qu’on peut
   voir comme un mdp. Un algorithme de chiffrement c’est juste une méthode
   de chiffrement, cad une façon de rendre inintelligible vos données.

   Pour pouvoir lire ces données de nouveau, il est nécessaire de
   connaître l’algorithme et la clé de chiffrement pour les déchiffrer


   Maintenant que vous avez compris ça, passons à la notion de
   cryptographie symétrique :
    1. Ici Alice et Bob ont la même clé secrète.
    2. Alice veut envoyer un message à Bob. Elle veut que personne d’autre
       que Bob ne puisse lire ce message. Du coup, elle prend sa clé
       secrète et va chiffrer le message avec
    3. Elle envoie le message chiffré à Bob
    4. Lorsque Bob recoit le message d’Alice, il ne peut pas encore le
       comprendre à la reception. Il faut d’abord qu’il déchiffre le
       message avec la même clé secrète. Et c’est seulement là qu’il
       pourra lire le message
    5. Et si Bob veut répondre à Alice de façon sécurisé, il peut utiliser
       la clé secrète pour chiffrer sa réponse et ensuite l’envoyer à
       Alice.

   Il y a donc une seule clé pour chiffrer et déchiffrer un message

   Le Gros problème de la cryptographie symétrique c’est l’échange de ces
   clés. En effet, Le fait que les 2 personnes. doivent utiliser la même
   clé impose d’avoir un canal sécurisé pour l’échange de la clé parce que
   si quelqu’un d’autre arrive à s’emparer de la clé… il sera capable de
   lire le message…

   Passons maintenant à la cryptographie asymétrique

   Le principe du chiffrement asymétrique repose sur l’utilisation de 2
   clefs :
     * on appelle une des 2 clefs la clef privée et l’autre la clef
       publique.
     * Quand l’utilisateur chiffre avec la première clef, il peut
       déchiffrer avec la deuxième clé
     * Quand l’utilisateur chiffre avec la deuxième clef, il peut
       déchiffrer avec la première clef.
     * Peu importe l’ordre des clés utilisés parce qu’en fait ces 2 clés
       ou algorithme de chiffrement sont liés mathématiquement

   Reprenons avec Alice qui a maintenant une clé privée et une clé
   publique :
     * La clef privée n’est jamais transmise à personne (ça porte bien son
       nom d’ailleurs).
     * Par contre, Alice peut diffuser sa clé publique à n’importe qui,
     * Donc là Alice a envoyé sa clé publique à Bob pour que les 2 puisse
       communiquer

   Voyons maintenant comment ça marche :
    1. Ici Bob et Alice se sont transmis leur clé publique et garde leur
       clé privé
    2. Bob veut envoyer un message à Alice et veut que seul Alice puisse
       lire le message. Il chiffre donc son message avec la clef publique
       d’Alice
    3. Alice déchiffre le message avec sa clef privée (il n’y a qu’elle
       qui possède cette clef). Alice est la seule à pouvoir déchiffrer
       les messages qui lui sont adressés
    4. De façon similaire, Si Alice veut répondre à Bob. Alice utilise la
       clef publique de Bob pour envoyer le message;
    5. Bob utilisera sa propre clef privée pour le déchiffrer le message

   Ce procédé assure la confidentialité de l’échange c’est-à-dire être sûr
   que Alice et Bob sont les seuls à échanger.

   Bob est sûr que seul Alice peut lire son message puisque Bob a utilisé
   la clef publique d’Alice pour chiffrer son message. Seule la clé privé
   d’Alice peut déchiffrer le message de bob. Bob est donc sûr que seule
   Alice peut lire le message et inversement pour Alice avec la clef
   publique de Bob

   Ensuite la cryptographie asymétrique garantit aussi l’authenticité de
   l’expéditeur :
     * C’est-à-dire que pour Bob c’est être sur le message d’Alice vient
       bien Alice)
     * Eh oui parce que si Bob réussit à déchiffrer le message avec la clé
       publique d’Alice c’est que le message a été chiffré avec la clé
       privée d’Alice
     * Tous ceux qui ont la clé publique peuvent déchiffrer le message
       d’Alice, mais seule Alice possède sa clé privé
     * Si Bob arrive a déchiffrer le message avec la clé publique d’Alice
       il sait que le message est bien d’Alice

   Le problème va venir de la transmission de la clé publique. Notamment
   si une personne malveillante, qu’on va appeler M pour la suite, se
   positionne entre Alice et Bob, et se fait passer pour l’un d’eux et
   donne sa clé publique à la place. C’est l’attaque du MITM ou de l’homme
   du milieu en français

   Il va diffuser une clé publique à Bob en se faisant passer pour ALice.
   Bob croit alors que c’est la clé publique d’Alice. Alice et Bob ont
   tous les deux la clef publique de M, en pensant qu’ils ont celle de
   leur interlocuteur. M intercepte et modifie l’échange de clefs entre
   Alice et Bob.

   Du coup, lorsque Alice veut envoyer un message à Bob, elle va l’envoyer
   en chiffrant avec la clé publique supposé appartenir à Bob. En fait, M
   va intercepter le message, il va le déchiffrer avec sa clé privé et
   lire le message. Ensuite pour ne pas éveiller les soupçon, il va
   chiffrer le message avec la clé publique de bob et envoyer le message à
   Bob.

   Comme ça Bob déchiffre avec sa clé privé pour lire le message. M est
   donc capable de lire les conversations entre les 2 et de récupérer des
   informations importantes.

   Et à l’inverse, quand bob veut échanger avec alice, il utilise la clé
   publique de M pour chiffrer et M fait la même chose cad qu’il
   intercepte le message, l’ouvre, le lit et le rechiffre avec la clé
   publique d’alice.

   Pour éviter que probleme de MITM, il faudrait pouvoir certifier
   l’identité du porteur de cette clé. Et ça c’est le rôle du certificat.

   Un certificat  est un fichier avec ensemble de données contenant :
     * une clef publique (au minimum)
     * des informations pouvant identifier la personne : nom, e-mail,
       localisation…
     * des informations liées au certificat, notamment sa date de validité
     * Et une signature électronique d’une autorité de certification

   La signature électronique est la preuve le certificat a bien été
   vérifiée par l’autorité de certification puisque qu’il y a sa
   signature. Elle est la garantie de son intégrité (cad la preuve que le
   document n’a pas subit d’altération entre l’instant où il a été signé
   par son auteur et celui où il a été consulté).

   A noter que la signature électronique du certificat c’est la
   combinaison de vos information et de votre clé publique, tout ça
   chiffré par la clé privé de l’autorité de certification

   une Autorité de Certification est l’institution responsable d’émettre
   ces certificats et elle garantit que les informations contenus dans ces
   certificats sont correctes.

   Dans notre cas, si Alice veut créer son certificat, il faut qu’elle
   fournisse sa clé publique et des informations sur elle à l’autorité de
   certification et des sous (parce que ce n’est pas gratuit), qui elle
   vérifie tout ça, L’autorité de certification va créer un certificat
   pour Alice avec la signature électronique de l’AC,

   Le certificat atteste donc  que la clef publique du certificat
   appartient bien à la personne désignée dans le certificat.


   Maintenant que vous avez toutes ces notions en tête, on peut passer à
   l’explication du chiffrement SSL/TLS.

   Imaginons que vous voulez vous connecter à votre banque, vous allez
   taper l’adresse de votre banque en https sur votre navigateur :
    1. Vous allez envoyer une demande de connexion sécurisée à votre
       banque
    2. Votre banque va alors vous envoyer son certificat avec sa clé
       publique
    3. Votre navigateur vérifie la signature du certificat et sa validité.
       Il faut savoir que le navigateur a déjà un certain nombre de clés
       publique d’AC dans sa base de données
    4. Ensuite le navigateur va prendre la clé publique de l’AC qui a
       certifié le certificat de la banque.
    5. Il va déchiffrer la signature du certificat, s’il y arrive. Cela
       veut dire que le certificat est de confiance car seul l’AC possède
       sa clé privé
    6. Si tout est OK, le client et le serveur négocie ensemble pour se
       mettre d’accord sur un algorithme de chiffrement ainsi qu’une clé
       secrète commune qu’ils vont utiliser pour cette session d’échange,
       connus de 2 seulement comme dans la cryptographie symétrique
    7. C’est avec cette clé que vous allez chiffrer et déchiffrer vos
       échanges avec votre banque et donc communiquer de façon sécurisé

   chiffrementchiffrement webclé de chiffrementclé privéeclé
   publiquecryptographiecryptographie asymétriquecryptographie
   symétriquehttpHTTPSman in the middle

   Non classé

Démystifier le RGPD / GDPR (avec la CNIL)

   10 février 2018 Samson Laisser un commentaire

   Vous avez dû surement voir énormément de titres racoleurs sur le RGPD :
     *         “Etes-vous prêt pour le RGPD?”
     *         “Attention, le RGPD arrive! Préparez vous !”
     *         “Faites le quizz pour savoir si vous êtes conforme au RGPD”
     *         “Le TOP 10 des raisons pour se mettre au RGPD, le 4ème va
       vous étonner!” (Bon OK, ça je l’ai inventé)

   Tout ça montre que le RGPD est un sujet qui suscite beaucoup
   d’interrogations. Et c’est pour cette raison qu’avec la CNIL, on a
   décidé de faire cette vidéo FAQ spécial RGPD pour répondre à vos
   questions.

   IFRAME:
   http://www.youtube.com/embed/OUMGp3HHel4?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&start=836&wmode=transparent




   Petit rappel du RGPD

   RGPD veut dire Règlement général sur la protection des données. On voit
   aussi souvent le terme GDPR qui est la traduction en anglais pour
   General data protection Regulation.

   Il s’agit du texte de référence européen en matière de protection des
   données personnelles pour les résidents de l’Union européenne. En gros,
   le RGPD va harmoniser la régulation des données personnelles  dans
   l’ensemble des pays de l’Union Européenne.

   Et Il est applicable à partir du 25 mai 2018.

   Par donnée personnelle on entend « toute information se rapportant à
   une personne physique identifiée ou identifiable » donc, à la fois des
   données de type nom, prénom, un numéro d’identification, des données de
   localisation, un identifiant en ligne, etc,



   Q1 de Philippe par mail : Vous parlez des structures qui vont être
   impactées dans votre vidéo  mais il semble après avoir surfé sur le Web
   que toutes les entreprises ne sont pas concernées.

   Pourriez-vous me dire précisément quels sont les critères qui font
   qu’une structure doit mener des actions en lien avec RGPD ?

   La règle d’or, c’est que le RGPD s’applique à une organisation à chaque
   fois :
     * qu’ elle traite des données personnelles,
     * qu’un résident européen est directement visé par un traitement de
       données.

   En d’autres termes cela veut dire que le RGPD s’applique aussi bien sur
     *  une organisation établie sur le territoire de l’Union européenne
     *  qu’une organisation hors UE qui met en œuvre des traitements pour
       fournir des biens et des services aux résidents européens.

   Exemple : Les entreprises US comme Uber, les GAFA ou les sites de
   ecommerce chinois doivent donc respecter le RGPD dès lors qu’ils
   ciblent les résidents européens.

   Le RGPD s’applique à tous les organismes quelque soit leur taille, leur
   secteur ou leur caractère public ou privé.

   Le RGPD concerne donc :
     *         Les entreprises
     *         Les organismes publics,
     *         Les associations
     *         Ainsi que les sous-traitants dont les activités rentrent
       dans ce cadre

   Toutes les entreprises doivent respecter le règlement.

   Mais en fonction de la sensibilité des données, de leur volumétrie et
   des impacts des données sur le business, le travail de conformité au
   RGPD de l’organisation sera différent.

   Exemple : Une grosse entreprise multinationale (de grande surface par
   exemple) qui traite de volumétrie importante de données aura des
   problématiques plus importantes sur la gestion et le suivi, et
   l’organisation interne de ses données.

   Alors qu’une startup de santé qui gère peu de clients mais qui traite
   des données relatives à leur santé (donc avec un fort impact sur les
   libertés des personnes). Cette startup va avoir un plus gros travail de
   sécurisation des données (peu de données mais des données très
   sensibles)

   Voici les types de données considérées comme sensibles
     * des données qui révèlent l’origine prétendument raciale ou
       ethnique, les opinions politiques, philosophiques ou religieuses,
       l’appartenance syndicale,
     * des données concernant la santé ou l’orientation sexuelle,
     * des données génétiques ou biométriques,
     *  des données d’infraction ou de condamnation pénale,

   Enfin concernant les structures impactées, il faut aussi prendre en
   compte les sous traitants. Et c’est un grand changement du RGPD, il est
   à noter que les sous-traitants ont désormais une responsabilité propre
   et sont tenus de respecter des obligations spécifiques.

   Ils ont notamment une obligation de conseil auprès du responsables de
   traitement (donc leur client) et doivent donc l’aider à respecter le
   règlement, ou encore une obligation d’assurer la sécurité des données
   qui leur sont confiées.

   Le responsable du traitement (l’entreprise qui contracte avec le
   sous-traitant) n’est donc plus le seul responsable. Le sous-traitant
   l’est aussi.

   Donc avec le RGPD, le responsable de traitement et le sous-traitant
   pourront être sanctionnés !


   Q2 Quel impact aura le #RGPD pour le monde associatif ? Des infos
   précises au sujet de la mise en conformité de ces structures ?

   Oui cela concerne les associations comme on l’a vu. Et voici plus
   concrètement les actions pour la mise en conformité au RGPD pour les
   associations.

   Une petite association qui souhaite refaire son site et qui prévoit de
   collecter des données devra notamment prévoir des mentions
   d’information :
     *  informer les personnes de qui est derrière la collecte,
     *  combien de temps seront conservé les fichiers
     *  la finalité des données collectées
     *  et comment les personnes peuvent exercer leurs droits

   Pour information, Vous avez même un Générateur de mentions dans les
   liens dans la description (qui a été fait par la CNIL pour vous aider :
   https://www.cnil.fr/fr/modeles/mention

   Et comme l’association traite des données (un fichier d’adhérents, un
   fichier RH sur ses salariés…), elle devra :
     * tenir un registre des traitements de ces données.
     * être en mesure de répondre à des sollicitations d’une personne de
       qui on a récupéré des données à accéder à ces informations (accès,
       modification et droit suppression)
     * penser à prévoir des clauses sur la protection des données dans le
       contrat qu’elle passe avec un sous traitant.


   Q3 Si je ne suis pas une organisation mais que je collecte des données
   personnel sur mon site je rentre dans le cadre de cette loi?

   Cela dépend de la finalité, si c’est pour une activité exclusivement
   personnelle, le RGPD ne s’applique pas.

   Mais si c’est dans le cadre pro et que vous tentez par exemple d’en
   tirer des revenus comme avec bannières publicitaires, vente de données,
   partenariats, etc, ça rentre dans le champ du RGPD

   Autre cas, si c’est fait dans le cadre pro et même si vous ne retirez
   aucun bénéfice par exemple en tant que consultant d’une société X, vous
   donnez des conseils sur un blog pro, le RGPD s’applique

   Et pour rappel, dans tous les cas, la protection de la vie privée est
   un  principe énoncé à l’article 9 du code civil et même dans la Charte
   des droits fondamentaux de l’UE et ça, ça concerne tout le monde !



   Q4 : Le DPO c’est que pour les grandes entreprises ?

   NON!

   Toutes les organisations peuvent désigner un délégué. Dans certains
   cas, désigner un DPO est obligatoire.

   Pour rappel, le DPO (Data protection officer) ou Délégué à la
   protection des données, c’est le « Chef d’orchestre » de la conformité
   en matière de protection des données au sein de son organisme,

   Ses missions vont être  :
     * d’informer et de conseiller l’organisation, ainsi que leurs
       employés ;
     * de contrôler le respect du RGPD ;
     * de conseiller l’organisme sur la réalisation d’une analyse d’impact
       relative à la protection des données et d’en vérifier l’exécution ;
     * de coopérer avec la CNIL et d’être son point de contact privilégié

   A noter que pour les petites structures (ex: startup où il y a peu
   personnes), il est évidemment possible de faire appel à un délégué
   externe, partagé avec plusieurs organismes.

   Le DPO est obligatoire pour les cas suivants :
     *  Tous les organismes publics, (ex.une mairie, un ministère)
     *  Les organisations dont les activités de base exigent un suivi
       régulier et systématique à grande échelle des personnes concernées
       (ex : compagnie d’assurance, banques, publicité ciblée sur internet
        exemple). Pas nécessaire pour un fleuriste
     *  Les organismes dont les activités de base les amènent à traiter à
       grande échelle des données dites « sensibles » (ex. un hôpital, une
       compagnie d’assurance, un site de rencontre).

   Plus d’informations sur le DPO :
   https://www.cnil.fr/fr/devenir-delegue-la-protection-des-donnees


   Q5 : Est-ce qu’il y a un label qui prouve qu’on est conforme au RGPD?

   Alors, la CNIL délivre bien des labels qui sont pour l’instant que sur
   4 domaines spécifiques. Oui des labels sont prévus pas le RGPD mais ce
   n’est pas obligatoire pour justifier qu’on est conforme au RGPD.

   Pour prouver sa conformité au RGPD, le plus important est de mettre en
   place un certain nombre d’actions et  prouver par une documentation
   écrite que vous assurez une protection des données en continu. C’est ce
   qu’on appelle « l’accountability ». Cela revient donc à montrer comment
   des actions ont été mises en œuvre et à les rendre vérifiable. On
   pourrait le traduire en français par l’« obligation de rendre compte ».

   Voici un exemple de démarches pour aller vers la conformité au RGPD

   On va les séparer en 3 grandes étapes :

   Pour commencer :
     * Il faudra mettre des mentions d’information sur vos formulaires. Et
       j’en ai déjà parlé mais j’insiste encore une fois mais il est très
       important d’informer de la finalité des différentes données
       collectées
     * mettre un formulaire de contact pour que les gens qui se souhaitent
       puissent accéder à l’ensemble des données qui les concernent,
     * Demander dans certains cas l’accord des personnes et leur donner la
       possibilité de retirer leur accord.
     * assurer, des mesures sécurité des données adaptées à la sensibilité
       du fichier.

   Dans un second temps, il faudra :
     *  Analyser votre SI, vos fichiers et tous les documents qui
       contiennent des données personnelles.
     *  Vous devrez également élaborer un registre des traitements.
     *   Pensez aussi à revoir les clauses de confidentialité passées avec
       vos sous-traitants exemple de clause à adapter ici
       https://www.cnil.fr/fr/sous-traitance-exemple-de-clauses
     *  Notifiez à la CNIL les violations de données dont vous êtes
       victimes

   Enfin, si vous traitez, par exemple, des données sensibles ou à risque
   ou que vous faite du tracking à grande échelle Une analyse d’impact sur
   la protection des données (PIA) est obligatoire car il y a un risque
   élevé pour les personnes concernées ! Elle vous permet d’anticiper et
   traiter les risques pour les droits et libertés des personnes.



   Q6 Est ce que les sanctions touchent aussi les organisations publiques?

   Pour rappel les sanctions du RGPD peuvent aller jusqu’à 4 % du chiffre
   d’affaires annuel mondial ou 20 millions d’euros.  La somme la plus
   importante entre les 2 est retenue.


   Il y a une vrai nécessité pour les collectivités de prendre en compte
   les exigences car en cas de manquement – et outre des avertissements
   publics – les CNIL européennes pourront prononcer des amendes
   administratives allant jusqu’à 20 millions d’euros.

   Enfin, il estr à noter que l’l’Etat ne peut pas recevoir de sanction
   financière, contrairement aux collectivités territoriales. Par contre,
   l’Etat peut quand même être sanctionné (avec des. sanction publiques
   par exemple)


   Q7 Quel est le délai raisonnable de réponse d’un site internet pour la
   demande d’informations sur les données perso renseignées ?

   Délai raccourci pour les droits : meilleurs délais ! Ce qui veut dire 1
   mois maximum après réception de la demande.

   Prolongation possible de 2 mois mais uniquement si vous en informez la
   personne et que vous prouvez que la demande est complexe et nécessite
   un délai supplémentaire


   Q8 Quid des délais obligatoires et réglementaires de conservation des
   données (paie, RH, compta, etc… ) vs droit d’effacement RGPD ?

   Dans le cadre du futur règlement, les organismes doivent tenir une
   documentation interne complète et notamment « un registre » sur leurs
   traitements de données personnelles.

   Un registre permet de justement de s’assurer que les différents
   traitements respectent bien les nouvelles obligations légales et
   notamment les durées de conservation.

   Ce qui implique notamment de fixer des règles strictes pour déterminer
   :
     * Quelles données qui doivent être supprimées une fois que l’objectif
       est atteint ?
     * Quelles données qui doivent être conservées au titre d’obligations
       légales ?

   Par exemple une facture doit être conservée 10 ans mais uniquement dans
   « vos archives intermédiaires ». En clair, les données existent
   toujours mais ne seront plus accessibles que par le comptable ou le
   service contentieux de l’entreprise.


   Dernière partie :  les confusions

   Parmi les questions qui ont été posées, j’ai vu qu’il y avait beaucoup
   de confusions et d’incompréhension, ou d’idées reçues du coup, je vais
   faire cette dernière partie pour revenir sur ça en disant ce que le
   RGPD n’est pas.

   LE RGPD est un big bang :

   RGPD ce n’est pas un big bang, le RGPD n’est pas apparu comme ça du
   jour au lendemain.

   Pour rappel, il existait déjà la loi Informatique et libertés qui date
   de 1978 qui est une  loi française dont le but est de réglementer le
   traitement des données personnelles, c’est-à-dire préserver les
   libertés des personnes dans un contexte d’informatisation croissante de
   la société.

   Depuis 1978, elle a été modifiée à plusieurs reprises pour se conformer
   aux directives européennes et à l’évolution des usages.

   Le Règlement Général sur la Protection des Données (RGPD) vient donc
   renforcer la loi Informatique et libertés qui fera l’objet d’une
   adaptation.

   RGPD : seulement des solutions techniques ?

   RGPD, ce n’est pas une préconisation de solutions techniques
   d’anonymisation des données, de chiffrements, etc. parce qu’il y avait
   beaucoup de questions sur le sujet.

   Le RGPD c’est un cadre pour définir ce qui est attendu en termes de
   protection des données personnelles des résidents européens pour que
   les organisations puisse s’y conformer et être sûr que ce soit le cas à
   différents niveaux (SI, process, documentation, etc)

   En parlant de ça, on voit souvent des outils (logiciel, solution
   hardware) certifiés RGPD dont l’achat permet  d’être 100 % conforme au
   RGPD

   La conformité au RGPD ne dépend pas d’une solution technique. La
   conformité s’obtient par un effort soutenu à tous les niveaux,
   combinant des mesures humaines (comme sensibiliser les utilisateurs),
   des mesures organisationnelles (prévoir des procédures pour gérer les
   incidents afin de pouvoir réagir en cas de violation de données, gérer
   la sous-traitance…) et des mesures techniques (comme authentifier les
   utilisateurs et gérer les habilitations, sécuriser les postes de
   travail, sécuriser les échanges avec d’autres organisations).

   Et pour avoir un premier guide des chantiers à mener, vous avez le
   guide de sécurité de la CNIL :
   https://www.cnil.fr/fr/principes-cles/guide-de-la-securite-des-donnees-
   personnelles

   Enfin, pour terminer ce post, je tiens à remercier la CNIL pour leur
   aide. Et ça a été un vrai plaisir de collaborer avec eux pour faire
   cette vidéo.

   Liens utiles vers de la documentation rédigée par la CNIL pour vous
   aider à mieux comprendre le RGPD et se conformer au règlement :

   https://www.cnil.fr/fr/principes-cles/guide-de-la-securite-des-donnees-
   personnelles

   https://www.cnil.fr/fr/principes-cles/reglement-europeen-se-preparer-en
   -6-etapes

   https://www.cnil.fr/fr/cartographier-vos-traitements-de-donnees-personn
   elles

   https://www.cnil.fr/fr/outil-pia-telechargez-et-installez-le-logiciel-d
   e-la-cnil

   https://www.cnil.fr/fr/sous-traitance-exemple-de-clauses

   https://www.cnil.fr/fr/modeles/mention

   https://www.cnil.fr/fr/devenir-delegue-la-protection-des-donnees




   CNILcomplianceconformitédata protection officerdonnées
   personnellesDPOeuropeFAQGDPRGeneral Data Protection
   Regulationquestionsregelement européen de protection des donnéesRGPDvie
   privée

   Non classé

Kubernetes pour les débutants

   26 janvier 2018 Samson Laisser un commentaire

   IFRAME:
   http://www.youtube.com/embed/NChhdOZV4sY?version=3&rel=1&fs=1&autohide=
   2&showsearch=0&showinfo=1&iv_load_policy=1&wmode=transparent

Kubernetes et les conteneurs

   Pour comprendre ce qu’est Kubernetes, il faut d’abord savoir ce qu’est
   un conteneur :
     * En gros, la virtualisation par conteneur est une méthode de
       cloisonnement au niveau de l’OS basé sur la technologie de
       virtualisation Linux LXC, pour Linux Containers.
     * Le principe est de faire tourner des environnements Linux isolés
       les uns des autres dans des conteneurs tout en se partageant le
       même noyau Linux, le Kernel donc.

   Le conteneur virtualise seulement l’environnement d’exécution (comme le
   processeur, la mémoire vive ou le système de fichier…) et ne virtualise
   donc pas la machine entière comme pour une VM (Pas de virtualisation
   d’OS inviténotamment dans un conteneur par rapport à une VM).

   Le conteneur est donc plus léger que la VM, ce qui permet de créer
   beaucoup plus de conteneurs que de VM sur un même serveur. Docker est
   un exemple de technologie de virtualisation par container.

   A noter que pour le reste de la vidéo, je vais prendre l’exemple des
   conteneurs Docker pour illustrer les fonctionnalités de kubernetes.

   Et justement comme un conteneur est fortement relié au kernel, le
   conteneur n’a pas “conscience” de ce qui se passe en dehors de ce
   kernel et de la machine hôte.

   Et c’est là que Kubernetes intervient :
     * c’est Kubernetes qui va apporter l’orchestration et la gestion des
       conteneurs sur des clusters de serveurs
     * Dis autrement, Kubernetes permet ainsi de prendre en charge
       plusieurs kernel et pouvoir gérer les conteneurs sur ces différents
       serveur hôtes Linux (qu’ils soient physique ou virtuel d’ailleurs).
       Ces clusters peuvent couvrir des hôtes situés dans des clouds
       publics, privés ou hybrides.

Les fonctionnalités de Kubernetes

   Les fonctionnalités d’orchestration de Kubernetes vous permettent de :
     * créer des services applicatifs ( que ce soir front end ou backend)
       et ceci sur plusieurs conteneurs,
     * planifier l’exécution de ces conteneurs dans un cluster,
     * garantir leur intégrité au fil du temps.
     * assurer leur monitoring

   Avec Kubernetes, le développeur n’ a plus à s’occuper de la gestion des
   VM, il à disposition directement son environnement d’exécution (qui est
   le conteneur) pour y déployer son code, et c’est kubernetes qui
   s’occupe des couches d’infrastructures sous-jacentes.

   Avec Kubernetes, le développeur n’a plu à s’occuper de la partie
   infrastructure, il n’a pas besoin de savoir où tournent leur
   applications, l’infra sous-jacente est masquée pour le développeur

Architecture de Kubernetes

   Il y a d’abord le Kubernetes Master qui est le serveur contrôlant les
   nodes : ce sont des noeuds esclaves et ce sont des machines hébergeant
   les hôtes Docker qui exécutent les tâches qui leur sont assignées. Au
   sein d’un node tourne un pod. Le pod est un environnement d’exécution
   d’un ou plusieurs conteneur(s) Docker.

   C’est le master qui va dire quel node va faire tourner un pod non
   ordonnancé en se basant sur la disponibilité des ressources. Le master
   gère l’utilisation des ressources sur chaque node afin de s’assurer que
   la charge de travail n’est pas en excès par rapport aux ressources
   disponibles.

   Pour accomplir cet objectif, l’ordonnanceur doit connaître les
   ressources disponibles et celles actuellement assignées sur les
   serveurs. Et c’est ces information qui sont apporté par les kubelets.
   Kubelet est un composant exécuté sur des nœuds et qui s’assure que les
   conteneurs définis ont démarré et fonctionnent comme comme prévus lors
   de leur conception. Si un noeud tombe par exemple, c’est Kubelet qui va
   le signaler au master.

   Et c’est le master qui vérifie le nombre de copies identiques demandée
   d’un pod qui doivent s’exécuter dans le cluster. Le master gère la
   résilience des pod.


   Voyons de plus près la notion de  pod :
     * Cet environnement d’exécution peut contenir un ou plusieurs
       conteneur(s) Docker (on va déployer deux containers sur un même POD
       s’il est nécessaire de partager des ressources locales).
     * En effet Tous les conteneurs d’un pod partagent une même adresse
       IP, un même nom d’hôte et les même ports réseau et d’autres
       ressources.
     * La scalabilité horizontale sera réalisée en instanciant
       l’application dans de multiples pods,

   Un volume c’est un espace de stockage accessible à tous les conteneurs
   sur un pod.

   Il repond à 2 besoins :
     * le premier c’est le besoin de préserver les données au delà du
       cycle de vie d’un conteneur : les données et fichiers dans un
       conteneur sont éphémères, donc si des données utilisées par les
       conteneurs doivent être conservés au dela du cycle de vie d’un
       contneeur, ces données seront stocké dans le volume.
     * Ensuite, le volume est necessaire pour Le partage des données entre
       2 conteneurs : quand plusieurs conteneurs s’exécutent dans un même
       pod, il est souvent nécessaire de partager les fichiers (et
       données) entre eux. Et c’est réalisé via le volume.

   Passons maintenant à la notion de service :
     * Le « Service » est un point d’entrée permettant un accès «
       load-balancé » à un groupe de containers identiques, autrement dit
       c’est une VIP ou Virtual IP.
     * Kubernetes fournit un service de routage en assignant une adresse
       IP et un nom de domaine à un service, et équilibre la charge du
       trafic vers les différents pods.
     * Les requêtes de service sont alors transférés par Kubernetes vers
       un des pods.


   Fonctionnement de Kubernetes

   Kubernetes s’exécute au-dessus de l’OS et interagit avec les pods de
   conteneurs qui s’exécutent sur les nœuds.

   Le master Kubernetes reçoit les commandes de la part d’un
   administrateur (ou d’une équipe DevOps) et relaie ces instructions aux
   nodes. Comme on l’a vu tout à l’heure, ce système de transfert
   fonctionne avec une multitude de services et choisit automatiquement le
   nœud le plus adapté pour chaque tâche. Il alloue ensuite les ressources
   aux pods désignés dans ce nœud pour qu’ils effectuent la tâche requise.

   Lorsque le Kubernetes master planifie un pod dans un nœud, le kubelet
   de ce nœud ordonne à Docker de lancer les conteneurs spécifiés. Docker
   démarre/arrête les conteneurs, comme d’habitude.

   Le kubelet collecte ensuite en continu le statut de ces conteneurs via
   Docker et rassemble ces informations sur le serveur master.

   On voit donc qu’avec Kubernetes, les ordres proviennent d’un système
   automatisé et non plus d’un administrateur qui assigne manuellement des
   tâches à tous les nœuds pour chaque conteneur.

   containerconteneurDevOpsDockerkubeletkuberneteskubernetes
   masternodeorchestrateurpodserviceswarmvolume

Navigation des articles

   ← Précédent 1 2 3 4 … 12 Suivant →

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
   #Cookie connecté » Flux Cookie connecté » Flux des commentaires Cookie
   connecté » Flux de résultats de la recherche pour
   "{search_term_string}"

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : {search_term_string} Rechercher

Rien de trouvé

   Désolé, mais rien ne correspond à votre recherche. Veuillez réessayer
   avec des mots différents.
   Rechercher : {search_term_string} Rechercher

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
   #Cookie connecté » Flux Cookie connecté » Flux des commentaires Cookie
   connecté » Flux de résultats de la recherche pour
   "{search_term_string}"

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : {search_term_string} Rechercher

Rien de trouvé

   Désolé, mais rien ne correspond à votre recherche. Veuillez réessayer
   avec des mots différents.
   Rechercher : {search_term_string} Rechercher

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
   #Cookie connecté » Flux Cookie connecté » Flux des commentaires Cookie
   connecté » Galaxy Note 7 « fan edition » : Samsung revient avec du
   réchauffé Flux des commentaires alternate alternate

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : ____________________ Rechercher

   Dessin

Galaxy Note 7 « fan edition » : Samsung revient avec du réchauffé

   18 juillet 2017 Samson Laisser un commentaire

   samsung galaxy note 7, fan edition,

   Selon les experts de iFixit (réalisant le démontage de smartphones), la
   version fan édition du Galaxy Note 7 n’a rien de nouveau à part une
   batterie différente : une batterie plus petite et moins performante
   mais qui n’explose pas cette fois!

   Source : 01net

   AndroidAppleexplosionGalaxy Note 7high techmobileNote fan
   editionSamsungsmartphonetechnologie

Navigation des articles

   Article précédentComprendre le GDPR / RGPD avec des emojisArticle
   suivantFaites attention à vos données personnelles sur Internet

Laisser un commentaire Annuler la réponse

   Votre adresse de messagerie ne sera pas publiée. Les champs
   obligatoires sont indiqués avec *

   Commentaire
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________

   Nom * ______________________________

   Adresse de messagerie * ______________________________

   Site web ______________________________

   Laisser un commentaire

   [ ] Prévenez-moi de tous les nouveaux commentaires par e-mail.

   [ ] Prévenez-moi de tous les nouveaux articles par email.

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
   #Cookie connecté » Flux Cookie connecté » Flux des commentaires
   alternate alternate

   Cookie connecté

Cookie connecté

   Recherche

   (BUTTON) Menu principal Aller au contenu
     * Les Cookies
     * A propos de ce blog
     * Me contacter

   Rechercher : ____________________ Rechercher

Me contacter

   Nom(obligatoire) ____________________
   E-mail(obligatoire) ____________________
   Site Web ____________________
   Commentaire(obligatoire)
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   Envoyer »

Fanpage Cookie connecté

     Fanpage Cookie connecté

Suivez-moi sur Twitter

   Mes Tweets

L'architecture technique en cookies

Abonnez-vous au blog par e-mail.

   Saisissez votre adresse e-mail pour vous abonner à ce blog et recevoir
   une notification de chaque nouvel article par email.

   Adresse e-mail ____________________

   Abonnez-vous

   RSS Feed  RSS - Articles

Archives

   Archives [Sélectionner un moiss]

   Fièrement propulsé par WordPress
