   #Search ProSecure Help Front page

   Accueil
   Bienvenue, (invité) S'identifier Mes Préférences
   The ERC Project ProSecure
   Navigation Rapide___ (Ouvrir le meilleur résultat !)
   voir éditer dupliquer trouver
   Recherche rapide (écrivez là)
   Recherches récentes (Effacer)
   Dernières pages vues :
     * Plus...

   Voir Attacher Info

Provably secure systems: foundations, design, and modularity#

   February 2011 - January 2016

   Our research project ProSecure is supported by the European Research
   Council ("Starting Grant Project"). This is a long-term project (5
   years) aiming at developping provably secure systems such as security
   protocols.

Context of the project#

   Security protocols are short distributed computer programs dedicated to
   securing communications on digital networks. They are designed to
   achieve various goals such as data privacy and data authenticity, even
   when communication channels are controlled by malicious users. Their
   increasing penetration in many important applications makes it a very
   important research challenge to design and establish security
   properties. In the last decade, formal approaches and automated
   veriﬁcation techniques have been successfully applied for detecting
   potential attacks. However, the security guarantees obtained so far
   usually hold in a rather abstract model, and are limited to isolated
   speciﬁc protocols analyzed for a few set of speciﬁc security
   properties. Moreover new types of protocols are still emerging in order
   to face new technological and societal challenges.

Goals of the project#

   The goal of the project is to propose foundations for a careful
   analysis and design of large classes of up-to-date protocols. We plan
   to develop general verification techniques for new classes of protocols
   that are of primary interest in nowadays life like e-voting protocols,
   routing protocols or APIs. Our techniques will first be developed in
   symbolic models where messages are represented by terms but we will
   also consider the cryptographic part of the primitives that are used in
   such protocols (encryption, signatures, ...), obtaining higher security
   guarantees. We aim at proposing modular results both for the analysis
   and design of protocols. As a particular outcome, we should
   characterize simple design principles that ease the analysis (thus the
   security) of protocols and discard families of attacks.

Research themes#

     * Security protocols: authentication and confidentiality protocols,
       e-votings, security APIs, routing protocols
     * Automatic verification: rewriting, constraint solving, automatic
       deduction
     * Provable security

Members#

     * Vincent Cheval (permanent researcher)
     * Rémy Chrétien (PhD student)
     * Véronique Cortier (permanent researcher, principal investigator of
       the project)
     * Catalin Dragan (postdoc)
     * Jannik Dreier (permanent researcher)
     * Stéphane Glondu (engineer)
     * Steve Kremer (permanent researcher)
     * Éric Le Morvan (PhD student)
     * Mathieu Turuani (permanent researcher)

Former members#

     * Jérémy Dubut (as internship)
     * Alexandre Debant (as internship)
     * Jan Degrieck (as Master internship)
     * Mounira Kourjieh (as post-doc)
     * David Galindo (researcher)
     * Joseph Lallemand (as Master internship)
     * Malika Izabachene (post-doc)
     * Joseph Lallemand (Master internship)
     * Antoine Plet (as internship)
     * Guillaume Scerri (PhD student)
     * Ben Smyth (as post-doc)
     * Cyrille Wiedling (PhD student)

Visiting researchers#

     * Myrto Arapinis
     * David Galindo
     * Zhiwei Li
     * Graham Steel
     * Bogdan Warinschi

Ajouter un attachement

   Seuls les utilisateurs autorisés peuvent publier de nouveaux
   attachements.
   « Cette page (révision-54) a été modifiée pour la dernière fois le
   07-mars-2016 16:18 par cortier
   Bienvenue, (invité) S'identifier Mes Préférences
     * Voir le source de la page
     *
          + Main page
          + Recent Changes
          + Unused pages
          + Undefined pages
          + Page Index
          + SystemInfo

   The project :
     * HomePage
     * Members
     * Publications
     * Cassis team
     * Search
     __________________________________________________________________

   Management :
     * Recent changes
     * Unused pages
     * Undefined pages
     * Page index
     * Old homepage

   Server informations :
     * Text formatting rules
     * Special page index
     * Give edition rights
     * System information
     * About
     __________________________________________________________________

   [erc-logo.png]
   Project supported
   by the European
   Research Council
     __________________________________________________________________

   JSPWiki v2.8.4
   Accueil
   Copyright Loria-INRIA, ERC projet ProSecure.
   JSPWiki v2.8.4
   #Search ProSecure Help Front page

   Accueil
   Bienvenue, (invité) S'identifier Mes Préférences
   $
   Navigation Rapide___ (Ouvrir le meilleur résultat !)
   voir éditer dupliquer trouver
   Recherche rapide (écrivez là)
   Recherches récentes (Effacer)
   Dernières pages vues :
     * Plus...

   Voir
   Bienvenue, (invité) S'identifier Mes Préférences
     *
          + Main page
          + Recent Changes
          + Unused pages
          + Undefined pages
          + Page Index
          + SystemInfo

   The project :
     * HomePage
     * Members
     * Publications
     * Cassis team
     * Search
     __________________________________________________________________

   Management :
     * Recent changes
     * Unused pages
     * Undefined pages
     * Page index
     * Old homepage

   Server informations :
     * Text formatting rules
     * Special page index
     * Give edition rights
     * System information
     * About
     __________________________________________________________________

   [erc-logo.png]
   Project supported
   by the European
   Research Council
     __________________________________________________________________

   JSPWiki v2.8.4
   Accueil
   Copyright Loria-INRIA, ERC projet ProSecure.
   JSPWiki v2.8.4
   #Search ProSecure Help Front page

   Accueil
   Bienvenue, (invité) S'identifier Mes Préférences
   Search
   Navigation Rapide___ (Ouvrir le meilleur résultat !)
   voir éditer dupliquer trouver
   Recherche rapide (écrivez là)
   Recherches récentes (Effacer)
   Dernières pages vues :
     * Plus...

   Recherche Wiki Aide

Entrez votre requête ici :

   ________________________________ [ ] Montrer les détails
   [Rechercher sur tout] Trouver ! Ouvrir le meilleur résultat !

   This page gives a quick overview of the search engine query syntax.
   This page is called Search Page Help.

   Use '+' to require a word, '-' to forbid a word. For example:
          +java -emacs jsp

   finds pages that MUST include the word "java", and MAY NOT include the
   word "emacs". Also, pages that contain the word "jsp" are ranked before
   the pages that don't.

   All searches are case insensitive. If a page contains both forbidden
   and required keywords, it is not shown.

Query syntax table#

   For more info look at Lucene's query syntax .

   term find a single Term is easy hello
   "..." find a group of words "hello dolly"
   ? any single character (the ? can not be the 1st character of a search)
   te?t
   * any multiple character (the * can not be the 1st character of a
   search) test*
   OR match document if either of the terms exist "hello dolly" hello
   "hello dolly" OR hello
   AND match documents where both terms exists "hello dolly" AND "dolly
   lucy"
   + requires that the term after the "+" symbol exist +hello dolly
   -
   NOT exclude documents that contain the term after the "-" symbol
   exclude also supported with NOT or ! "hello dolly" -"dolly lucy"
   "hello dolly" NOT "dolly lucy"
   (...) use parentheses to form sub queries (hello OR dolly) AND website
   ~ fuzzy searchs to match terms similar in spelling roam
   ~n proximity search, within a distance expressed in number of words
   "hello dolly"~10
   ^n boost factor to increase importance in a search "hello dolly"^4
   "dolly lucy"
   \ escape special characters: + - && || ! ( ) { } [ ] ^ " * ? : \
   \(1\+1\)\:2 to find (1+1):2

   You can restrict the search domain by prefixing your query:
     author:term   find pages modified by certain author(s) author:~JohnFoo
   attachment:term find pages with certain attachment name
   attachment:brushed*
      name:term    find pages with certain page name        name:Main
    content:term   find pages with certain content          content:jspwiki
   Bienvenue, (invité) S'identifier Mes Préférences
     *
          + Main page
          + Recent Changes
          + Unused pages
          + Undefined pages
          + Page Index
          + SystemInfo

   The project :
     * HomePage
     * Members
     * Publications
     * Cassis team
     * Search
     __________________________________________________________________

   Management :
     * Recent changes
     * Unused pages
     * Undefined pages
     * Page index
     * Old homepage

   Server informations :
     * Text formatting rules
     * Special page index
     * Give edition rights
     * System information
     * About
     __________________________________________________________________

   [erc-logo.png]
   Project supported
   by the European
   Research Council
     __________________________________________________________________

   JSPWiki v2.8.4
   Accueil
   Copyright Loria-INRIA, ERC projet ProSecure.
   JSPWiki v2.8.4
   #Search ProSecure Help Front page

   Accueil
   Bienvenue, (invité) S'identifier Mes Préférences
   TextFormattingRules
   Navigation Rapide___ (Ouvrir le meilleur résultat !)
   voir éditer dupliquer trouver
   Recherche rapide (écrivez là)
   Recherches récentes (Effacer)
   Dernières pages vues : The ERC Project ProSecure
     * Plus...

   Voir Attacher Info

   This page describes the wiki syntax used by JSPWiki. For details about
   how this differs from the syntax used by Wikipedia, please see
   MigratingFromMediaWiki .

Table des matières

     * Quick Reference
     * Writing text
     * Hyperlinks
     * Footnotes
     * InterWiki links
     * Adding pictures
     * Bulleted lists
     * Numbered lists
     * Definition lists and comments
     * Text effects
     * Preformatted text
     * Tables
     * CSS styles
     * Conflicts
     * Deleting pages
     * Adding new pages
     * Aliasing a Page
     * Editing the alias/redirect pages
     * Inserting variables
     * Inserting plugins

   When you've figured out how the editor works, then you should read the
   WikiEtiquette so that you would know how to use your newly acquired
   skills. The SandBox is a great place to try them out.

   A long version of this help can be found in the Full Text Formating
   Rules.

Quick Reference#

----       = make a horizontal ruler. Extra '-' is ignored.
\\         = force a line break

[link]     = create a hyperlink to an internal WikiPage called 'Link'.
[this is also a link] = create a hyperlink to an internal WikiPage called
             'ThisIsAlsoALink' but show the link as typed with spaces.
[a sample|link] = create a hyperlink to an internal WikiPage called
             'Link', but display the text 'a sample' to the
             user instead of 'Link'.
~NoLink    = disable link creation for the word in CamelCase.
[1]        = make a reference to a footnote numbered 1.
[#1]       = mark the footnote number 1.
[[link]     = create text '[link]'.

!heading   = small heading with text 'heading'
!!heading  = medium heading with text 'heading'
!!!heading = large heading with text 'heading'

''text''   = print 'text' in italic.
__text__   = print 'text' in bold.
{{text}}   = print 'text' in monospaced font.
[text]    = print 'text' underscored (dummy hyperlink)
* text     = make a bulleted list item with 'text'
# text     = make a numbered list item with 'text'
;term:ex   = make a definition for 'term' with the explanation 'ex'

Writing text#

   You don't need to know anything about the Wiki text formatting rules to
   use Wiki. Just write normal text, and then use an empty line to mark a
   paragraph. It's just like writing an email. You can always Edit this
   page (look at the left sidebar) to see how the different effects on
   this page are used.

Hyperlinks#

   The link can also be a direct URL starting with http:, ftp:, mailto:,
   https:, or news:, in which case the link points to an external entity.
   For example, to point at the java.sun.com home page, use
   [http://java.sun.com], which becomes http://java.sun.com/ or [Java home
   page|http://java.sun.com], which becomes Java home page . If you do not
   start the link with one of the above "protocols", the wiki assumes a
   normal link to another page in the wiki space, you need to use a letter
   as the first character of the page, purely numeric page names are not
   allowed. If you want to use square brackets ([]) in the page without
   creating a hyperlink, use two opening square brackets. So the text
   [[Example Non-Link], will appear as [Example Non-Link]. To add a new
   page you just create a link to it from somewhere else. After all, there
   isn't much point in having a page if you can't access it! You'll then
   see the page name underlined with a red-dashed line when you return to
   that page. Then click on it and you have created a new page! It's
   allowed to use almost any kind of characters inside a WikiName , as
   long as they are letters or numbers. Note also that this Wiki can be
   configured to support standard CamelCase linking (if it's supported,
   the word CamelCase should be a link, if it doesn't start with '~').
   It's off by default, but if your friendly administrator has turned it
   on, then well, CamelCase all you want =).

Footnotes#

   These are a special kind of hyperlink. By using nothing but a number
   inside a hyperlink you create a reference to a footnote, like this [1],
   which creates a footnote[1]. To make the actual footnote, you just put
   a [#1] where you want that footnote to point at. Look below to find the
   footnote. You can also make a named footnote, just as if you were doing
   a normal hyperlink, such as [Footnote name|1] as another way of
   referring to the first footnote[Footnote name]. Or you can put the
   custom name at the footnote itself[2].

InterWiki links#

   You can also do links between different Wikis without knowing the URL.
   Just use a link in the form [Wiki:WikiPage] and JSPWiki will create a
   link for you. For example, this link points to the JSPWiki
   TextFormatting rules . Check the SystemInfo page for more information
   on which Wiki links are available. If an InterWiki link is not
   supported, you'll get a notification of it on the page when you save
   your page.

Adding pictures#

   You can embed any image in the wiki code by putting the image available
   somewhere on the web in one of the allowed formats, and then just
   linking to it. If you specify a link text ([this one
   here|http://example.com/example.png]) it becomes the ALT text for those
   who either can't or don't want to view images. The list of accepted
   image types depends on the Wiki. See the SystemInfo page for a list of
   the different image types. It is also possible to use the Image plugin
   to gain more control over the image placement and attributes. To force
   a flush after an image, use \ \ \ (that is, three consecutive
   backslashes instead of two).

Bulleted lists#

   Use an asterisk (*) in the first column to make bulleted lists. Use
   more asterisks for deeper indentation. For example:
* One \\ one and a half
* Two
* Three
** Three.One

   creates
     * One
       one and a half
     * Two
     * Three
          + Three.One

Numbered lists#

   Just like with bulleted lists, but use a hash (#) instead of the
   asterisk. Like this:
# One \\ one and a half
# Two
# Three
## Three.One

   creates
    1. One
       one and a half
    2. Two
    3. Three
         1. Three.One

   If you want to write the list item on multiple lines, just add one or
   more spaces on the next line and the line will be automatically added
   to the previous item. For example:
* This is a single-line item.
* This is actually a multi-line item.
  We continue the second sentence on a line on a line of its own.
  We might as well do a third line while we're at it...
  Notice, however, as all these sentences get put inside a single item!
* The third line is again a single-line item for your convenience.

   produces:
     * This is a single-line item.
     * This is actually a multi-line item. We continue the second sentence
       on a line on a line of its own. We might as well do a third line
       while we're at it... Notice, however, as all these sentences get
       put inside a single item!
     * The third line is again a single-line item for your convenience.

Definition lists and comments#

   A simple way to make definition lists is to use the ';:' -construct:
;__Construct__:''Something you use to do something with''

   is rendered as:

   Construct
          Something you use to do something with

   Another nice use for the ';:' is that you can use it to comment shortly
   on other people's text, by having an empty 'term' in the definition,
   like this:
;:''Comment here.''

   Which would be seen as

          Comment here.

Text effects#

   You may use bold text or italic text, by using two underscores (_) and
   two single quotes ('), respectively. If you're on a Windows computer,
   make sure that you are using the correct quote sign, as there is one
   that looks the same, but really isn't. A underscore effect can be
   produced by using a hyperlink to nowhere, [like this|]

Preformatted text#

   If you want to add preformatted text (like code) just use three
   consecutive braces ({) to open a block, and three consecutive braces
   (}) to close a block. Edit this page for an example.

Tables#

   You can do simple tables by using pipe signs ('|'). Use double pipe
   signs to start the heading of a table, and single pipe signs to then
   write the rows of the table. End with a line that is not a table. For
   example:
|| Heading 1 || Heading 2
| ''Gobble'' | Bar \\ foo
| [Departement] | [SandBox]

   gives you the following table. Note how you can use links also inside
   tables.
   Heading 1 Heading 2
   Gobble Bar
   foo
   Departement SandBox

CSS styles#

   While not in line with the keep it simple principle, CSS styles can be
   used inline for those special occasions when you really need to
   emphasize part of a page.

Conflicts#

   If someone happens to edit the same page as you at the same time,
   JSPWiki will prevent you from doing changes and show a conflict page
   instead. Sorry to say, but the first one to make changes wins... A word
   of warning: If you use the Back button of your browser to go into the
   Edit page, you will almost certainly get a conflict. This is because
   the browser thinks it's still editing an earlier copy of the page.

Deleting pages#

   This is not possible. You can, of course, remove all the links to that
   page, which makes it inaccessible. Or you can email the administrator,
   and I'll remove the page. You may also add a DELETEME link.

Adding new pages#

   Create a link that points to a new (not existing) page using its
   WikiName . Click that new link, which should now have a question mark
   (?) suffix and you will get an editor for the new page. -- Asser

Aliasing a Page#

   Sometimes it's useful to have one page really mean some other page. For
   example, you might have a page called "Page Aliases", but you would
   also like people to have it available under "Aliases". In such a case,
   you can use a "page alias":

   Put the following on the "PageAliases" -page: (We have an example page
   there, so if you click on it, you will be returned back here.)
[{SET alias='PageAlias'}]

   Every time someone views the page "PageAlias", they will be
   automatically redirected to this page. This is very useful if you want
   to be able to use the irregular plural forms, for example. Normally,
   JSPWiki does properly recognize English language plural forms of page
   names, but it's not smart enough to recognize certain forms, such as
   "aliases".

Editing the alias/redirect pages#

   Well, obviously you cannot click on the "Edit this page" -link, because
   you are redirected every time you try to view a page. You can, however,
   edit the page directly by just writing Edit.jsp?page=pagename after the
   base URL. Alternatively, you can use the interWikiRef defined for
   editing, by default it is set to "Edit" (i.e., [Edit Aliases
   Page|Edit:Aliases])

Inserting variables#

   There are many possible variables you can insert on a page. The basic
   form is: [{$variablename}], where variablename is the name of the
   variable you want to insert. Note that variable names are
   case-insensitive - that is, "pagename" is the same as "paGeNamE" and
   "PageName". You can see the list of available of variables at
   WikiVariables .

Inserting plugins#

   The basic incantation to insert a plugin looks like this: [{INSERT
   WHERE param1=value, param2=value, ...}] There is more information in
   JSPWikiPlugins .
     __________________________________________________________________

   [#1] Here's the footnote I mentioned. [2-The other footnote] The other
   footnote. Note how its name is different?
     __________________________________________________________________

   Any ideas ? Any questions ?

Ajouter un attachement

   Seuls les utilisateurs autorisés peuvent publier de nouveaux
   attachements.
   « Cette page (révision-2) a été modifiée pour la dernière fois le
   08-juil.-2011 17:18 par Mathieu Turuani
   Bienvenue, (invité) S'identifier Mes Préférences
     * Voir le source de la page
     *
          + Main page
          + Recent Changes
          + Unused pages
          + Undefined pages
          + Page Index
          + SystemInfo

   The project :
     * HomePage
     * Members
     * Publications
     * Cassis team
     * Search
     __________________________________________________________________

   Management :
     * Recent changes
     * Unused pages
     * Undefined pages
     * Page index
     * Old homepage

   Server informations :
     * Text formatting rules
     * Special page index
     * Give edition rights
     * System information
     * About
     __________________________________________________________________

   [erc-logo.png]
   Project supported
   by the European
   Research Council
     __________________________________________________________________

   JSPWiki v2.8.4
   Accueil
   Copyright Loria-INRIA, ERC projet ProSecure.
   JSPWiki v2.8.4
   #Search ProSecure Help Front page

   Accueil
   Bienvenue, (invité) S'identifier Mes Préférences
   The ERC Project ProSecure
   Navigation Rapide___ (Ouvrir le meilleur résultat !)
   voir éditer dupliquer trouver
   Recherche rapide (écrivez là)
   Recherches récentes (Effacer)
   Dernières pages vues : The ERC Project ProSecure, TextFormattingRules
     * Plus...

   Voir Attacher Info

Provably secure systems: foundations, design, and modularity#

   February 2011 - January 2016

   Our research project ProSecure is supported by the European Research
   Council ("Starting Grant Project"). This is a long-term project (5
   years) aiming at developping provably secure systems such as security
   protocols.

Context of the project#

   Security protocols are short distributed computer programs dedicated to
   securing communications on digital networks. They are designed to
   achieve various goals such as data privacy and data authenticity, even
   when communication channels are controlled by malicious users. Their
   increasing penetration in many important applications makes it a very
   important research challenge to design and establish security
   properties. In the last decade, formal approaches and automated
   veriﬁcation techniques have been successfully applied for detecting
   potential attacks. However, the security guarantees obtained so far
   usually hold in a rather abstract model, and are limited to isolated
   speciﬁc protocols analyzed for a few set of speciﬁc security
   properties. Moreover new types of protocols are still emerging in order
   to face new technological and societal challenges.

Goals of the project#

   The goal of the project is to propose foundations for a careful
   analysis and design of large classes of up-to-date protocols. We plan
   to develop general verification techniques for new classes of protocols
   that are of primary interest in nowadays life like e-voting protocols,
   routing protocols or APIs. Our techniques will first be developed in
   symbolic models where messages are represented by terms but we will
   also consider the cryptographic part of the primitives that are used in
   such protocols (encryption, signatures, ...), obtaining higher security
   guarantees. We aim at proposing modular results both for the analysis
   and design of protocols. As a particular outcome, we should
   characterize simple design principles that ease the analysis (thus the
   security) of protocols and discard families of attacks.

Research themes#

     * Security protocols: authentication and confidentiality protocols,
       e-votings, security APIs, routing protocols
     * Automatic verification: rewriting, constraint solving, automatic
       deduction
     * Provable security

Members#

     * Vincent Cheval (permanent researcher)
     * Rémy Chrétien (PhD student)
     * Véronique Cortier (permanent researcher, principal investigator of
       the project)
     * Catalin Dragan (postdoc)
     * Jannik Dreier (permanent researcher)
     * Stéphane Glondu (engineer)
     * Steve Kremer (permanent researcher)
     * Éric Le Morvan (PhD student)
     * Mathieu Turuani (permanent researcher)

Former members#

     * Jérémy Dubut (as internship)
     * Alexandre Debant (as internship)
     * Jan Degrieck (as Master internship)
     * Mounira Kourjieh (as post-doc)
     * David Galindo (researcher)
     * Joseph Lallemand (as Master internship)
     * Malika Izabachene (post-doc)
     * Joseph Lallemand (Master internship)
     * Antoine Plet (as internship)
     * Guillaume Scerri (PhD student)
     * Ben Smyth (as post-doc)
     * Cyrille Wiedling (PhD student)

Visiting researchers#

     * Myrto Arapinis
     * David Galindo
     * Zhiwei Li
     * Graham Steel
     * Bogdan Warinschi

Ajouter un attachement

   Seuls les utilisateurs autorisés peuvent publier de nouveaux
   attachements.
   « Cette page (révision-54) a été modifiée pour la dernière fois le
   07-mars-2016 16:18 par cortier
   Bienvenue, (invité) S'identifier Mes Préférences
     * Voir le source de la page
     *
          + Main page
          + Recent Changes
          + Unused pages
          + Undefined pages
          + Page Index
          + SystemInfo

   The project :
     * HomePage
     * Members
     * Publications
     * Cassis team
     * Search
     __________________________________________________________________

   Management :
     * Recent changes
     * Unused pages
     * Undefined pages
     * Page index
     * Old homepage

   Server informations :
     * Text formatting rules
     * Special page index
     * Give edition rights
     * System information
     * About
     __________________________________________________________________

   [erc-logo.png]
   Project supported
   by the European
   Research Council
     __________________________________________________________________

   JSPWiki v2.8.4
   Accueil
   Copyright Loria-INRIA, ERC projet ProSecure.
   JSPWiki v2.8.4
