   #SCons ATOM Feed

   (BUTTON) Toggle navigation [SCons-Bricks.png]
     * Community
          + SCons Mailing Lists
          + Contact
          + Donate
          + References
     * Development
          + SCons Developer's Guidelines
          + Development
          + Bugs and Feature Requests
     * Documentation
          + Current Documentation
          + SCons Version Specific Documentation
          + Frequently Asked Questions
          + Logos
     * Download
     * Archives
     * Releases
     * News

SCons: A software construction tool

What is SCons?

   SCons is an Open Source software construction tool—that is, a
   next-generation build tool. Think of SCons as an improved,
   cross-platform substitute for the classic Make utility with integrated
   functionality similar to autoconf/automake and compiler caches such as
   ccache. In short, SCons is an easier, more reliable and faster way to
   build software.

What makes SCons better?

     * Configuration files are Python scripts--use the power of a real
       programming language to solve build problems.
     * Reliable, automatic dependency analysis built-in for C, C++ and
       Fortran--no more "make depend" or "make clean" to get all of the
       dependencies. Dependency analysis is easily extensible through
       user-defined dependency Scanners for other languages or file types.
     * Built-in support for C, C++, D, Java, Fortran, Yacc, Lex, Qt and
       SWIG, and building TeX and LaTeX documents. Easily extensible
       through user-defined Builders for other languages or file types.
     * Building from central repositories of source code and/or pre-built
       targets.
     * Built-in support for fetching source files from SCCS, RCS, CVS,
       BitKeeper and Perforce.
     * Built-in support for Microsoft Visual Studio .NET and past Visual
       Studio versions, including generation of .dsp, .dsw, .sln and
       .vcproj files.
     * Reliable detection of build changes using MD5 signatures; optional,
       configurable support for traditional timestamps.
     * Improved support for parallel builds--like make -j but keeps N jobs
       running simultaneously regardless of directory hierarchy.
     * Integrated Autoconf-like support for finding #include files,
       libraries, functions and typedefs.
     * Global view of all dependencies--no more multiple build passes or
       reordering targets to build everything.
     * Ability to share built files in a cache to speed up multiple
       builds--like ccache but for any type of target file, not just C/C++
       compilation.
     * Designed from the ground up for cross-platform builds, and known to
       work on Linux, other POSIX systems (including AIX, BSD systems,
       HP/UX, IRIX and Solaris), Windows NT, Mac OS X, and OS/2.

Where did SCons come from?

   SCons began life as the ScCons build tool design which won the Software
   Carpentry SC Build competition in August 2000. That design was in turn
   based on the Cons software construction utility. This project has been
   renamed SCons to reflect that it is no longer directly connected with
   Software Carpentry (well, that, and to make it slightly easier to
   type...).

     * Badges
          + [IRC-scons-blue.svg]
          + [scons.svg]
          + [scons.svg]
          + Travis CI Build Status
          + Coveralls.io Coverage Status
     * Links
          + SCons on GitHub
          + SCons wiki
          + Python.org
          + SCons on Openhub
          + SCons Discord Server
     * Latest Tweets
       Tweets by



Tags



Social

     * RSS
     __________________________________________________________________

   © 2019 SCons Foundation · Powered by pelican-bootstrap3, Pelican,
   Bootstrap

   Back to top
