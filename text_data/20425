   (BUTTON) Toggle navigation Pharo
     * About
     * Week 1
     * Week 2
     * Week 3
     * Week 4
     * Week 5
     * Week 6
     * Week 7
     * Resources
     * Download

The Pharo MOOC

   Welcome to the Pharo Mooc (a set of videos, exercises, challenges, and
   miniprojects). The Pharo Mooc is fully dubbed in french and english. It
   comes with subtitles in Japanese, english, french and spanish. This web
   site contains all the material of this Mooc in free access. In
   addition, in average every 18 months the Mooc is proposed and run on
   the France Universit√© Num√©rique platform (Even if the platform is
   french the mooc is run in both languages). When you participate to the
   mooc you get access to the quizz and the credit validation.

Join the 2019 Mooc run

   Fourth run will start 6th of May 2019. Join, have fun and learn (check
   the testimonies below). This MOOC includes some presequel videos about
   Object-oriented Programming (OOP) for newbies French version and
   English version.

News

April 2019

   For its third run, the Pharo Mooc got more than 3200 participants with
   around 500 active learners from more than 100 countries with 181
   participants that obtained the attestation by answering quiz.

   We would like want to thanks our sponsors: Unit, Unisciel, and the
   LearningLab of Inria.

February 2018

   For its second run, the Pharo Mooc got more than 2500 participants with
   around 500 active learners from 92 countries with 176 participants that
   finished it.

   We would like want to thanks our sponsors: Unit, Unisciel, and the
   LearningLab of Inria.

Testimonies

   This Mooc is demanding but rewarding - check below what the
   participants are saying :) Thank you for these messages, they boost us!
     *
I just completed the @pharoproject Mooc the best investment I have ever made of
my time. MAQBOOL
     *
 Hi! I finished the MOOC some weeks ago and I would like to congratulate everybo
dy involved! After a decade+ of Python programming I think I found my new favori
te language :). I'm making a small Teapot server for Slack command bots, I'm goo
na push it to Github (yay Iceberg), if anyone is interested.
EduardoPadoan
     *
Tieryn - Today at 1:58 PM
Hey all - I've just finished the Mooc - thanks for an excellent course and a tho
uroughly interesting look at a new way to program :smile: Looking forward to sta
rting to play with Pharo on some upcoming ideas I've had.
     *
rogersm - Last Thursday at 5:21 PM
Well, I just finished the MOOC!:ok_hand: Great experience!
     *
I finished the Pharo MOOC a few days ago. Thank you very much to Damien, Stephan
e, and Luc for their work on the material! I enjoyed it very much
     *
Hey, I've just finished the Mooc. It's awesome. I'm sending you the typos or min
or issues I've noticed throughout the mooc. Additionally, there must be a bug in
 the scoring algorithm, since I got >100% even though I failed some quizs.
     *
Hey all - I've just finished the Mooc - thanks for an excellent course and a tho
uroughly interesting look at a new way to program :smile: Looking forward to sta
rting to play with Pharo on some upcoming ideas I've had üëå3
     *
¬´ Really one of the best mooc I have ever attended. And I have attended quite a
few (openSAP, openHPI). As an old fashioned ABAP developer I want to be reborn a
s Pharo developer in my next life :-) ¬ª
     *
I already had previous Smalltalk experience, but yes, I'm extremely happy Chapte
r 7 has been extremely fulfilling
     *
A general comment I wanted to make is that the MOOC so far has been great. Impre
ssed with the quality and content, and grateful that it is available and free. M
any thanks! Aryeh
     *
Merci beaucoup! üëç1 üá´üá∑1
     *
IMHO the videos were very well done. I would even say shockingly well done‚Ä¶ for
a bunch of programmers who are supposed to be clueless about design SeanDeNigris
 - 10/26/2017
     *
The more I learning about @pharoproject the more I appreciate it's beauty and si
mplicity, finally, object-oriented programming is done right MAQBOOL
     *
Mooc absolument remarquable. Superbe voyage autour de Pharo. Le paradigme objet
qui (re)prend enfin du sens ! - Anonymous - 01/03/2019

About this course

   If you are either a beginner or an expert in object-oriented
   programming, this MOOC will change the way you program with objects:
   come and learn or rediscover object-oriented programming with Pharo!

   Pharo is a pure object-oriented programming language in the tradition
   of Smalltalk. It offers a unique developing experience in constant
   interaction with live objects. Pharo is elegant, fun to use and very
   powerful. It is very easy to learn and enables to understand advanced
   concept in a natural way. When programming in Pharo, you are immersed
   in a world of live objects. You have immediate feedback at any moment
   of your development on objects representing web applications, code
   itself, graphics, network. More‚Ä¶

   Pharo is also a very powerful open-source environment used by companies
   to develop web applications.

   In this MOOC, we will present more specifically Pharo‚Äôs Web stack which
   changes the way you build web applications.

   In addition we will present fundamental programming concepts and how
   Pharo uses them. We will present some coding idioms and Design Patterns
   to better design object-oriented applications. Such concepts can be
   applied to any object-oriented programming language.

   This MOOC is intended for people with a programming experience but
   everyone motivated could follow the course thanks to the numerous
   resources proposed. This MOOC will also have an interest for computer
   programming teachers: Pharo is a good teaching tool for object-oriented
   programming and the course will discuss object-oriented design
   principles (e.g. polymorphism, message sending, self/super, design
   patterns).

   Throughout this MOOC you will :
     * learn how to program in Pharo,
     * be immersed in a live environment and live a new programming
       experience,
     * develop a web application to apply the different aspects of Pharo
       presented in the course.

   This MOOC will also provide a new vision of the fundamental principles
   of object-oriented programming, i.e. polymorphism and late binding.

   This course lasts 7 weeks.

   Each week is composed of several sequences containing a video lecture,
   quizzes and other videos proposing application exercises and
   programming demonstrations.

   This course is proposed in french and in english. Videos are in french
   with french and english subtitles. Pdf course documents (in english
   only) will be available. All other materials (quizzes, explanation
   texts‚Ä¶) will be offered in both languages.

Obtaining the MOOC

   We strongly suggest to follow the MOOC during the next session on
   France Universit√© Num√©rique that will start May 6th, 2019 because you
   will be able to discuss with other learners.

   Join the discord channel mooc on the Pharo community (Invitation at
   http://discord.gg/QewZMZa)

   But, you can also access all resources of this MOOC offline on:
     * WebPortal: full online lecture with all videos and exercises,
     * CanalU: one of the key website that delivers resources for teaching
       and research.

How to follow this MOOC?

   We propose five profiles to follow this MOOC at different speed and
   levels. The Mooc sequences will be tagged according to these profiles.
   The profiles are not exclusive: to become a pharo expert you need to
   start as a newbie and grow up. Of course, you can also follow the full
   MOOC.
     * üê• Total newbies [Newbies] Focus on the beginning of the lectures,
       you can skip the Seaside/Mongo and tinyBlog exercises. Follow the
       end of the Mooc but without trying to understand everything. Take
       it easy and spend time understanding that the system is written in
       itself. Focus on the navigation tools (senders and implementors).
     * üåê Looking for Web [Web] For those that focus on web development, we
       suggest to get started with the syntax (since we really love this
       lecture you should really watch the not implementation and
       sequels), then look at Teapot and Seaside/Mongo combo. From the
       exercise stand point, focus on tinychat and tinyblog.
     * üéÅ Refresh your OO perspective [OO] If you want to rethink your OO
       perspective, pay attention that even Pharo essential libraries such
       as Booleans or collections are plain objects. Yes you send a
       message to a collection to perform a loop. Yes you send a message
       to a Boolean to perform a conditional.
     * üå∂ Wanna be a Pharo expert [Xpert] Well it means that you should
       have a look at everything. You may drop the Web and the Black Magic
       parts if you are in a hurry.
     * üîÆ Looking for Black Magic [Magic] If you are interesting by really
       advanced notions close to black magic ;-) It explains things such
       as reflection, meta-classes, meta-programming, etc. that makes
       Pharo a unique OO language. Of course, these lectures require
       almost everything except the Web part.

Download & Install Pharo for this MOOC

   During this MOOC, we assume that you use exacty this MOOC specific
   version of Pharo.

  Automatic Installation Using PharoLauncher (simplest method)

    1. Download and install the Pharo Launcher for your OS
    2. Execute Pharo Launcher and select create image menu entry in the
       contextual menu of Pharo Mooc
       Pharo Launcher
    3. Select your newly downloaded Pharo Mooc image in the right pane and
       click on the green play button on the uppper right button bar
       Pharo Launcher

Manual Installation

   During this MOOC, we assume that you use exacty this MOOC specific
   version of Pharo. To install it, please follow these steps:
    1. Download the Pharo Virtual Machine (VM) for your Operating System:
       Mac OsX Windows GNU/Linux
       The Pharo VM is 32bits. It works on 64bits OS if you correctly
       install dependencies libraries in 32bits (cf. Linux 64).
    2. Download the MOOC specific PharoWeb Image: PharoWeb Image
    3. Download the Pharo source file (if needed): Pharo Source
    4. Run the Pharo image using Pharo VM
          + On OsX: drag and drop the image (PharoWeb.image file) on the
            virtual machine (Pharo5.0.app) which may be stored in your
            /Applications folder to be correctly executed depending on
            your OsX version.
          + On Windows: drag and drop the image (PharoWeb.image file) on
            the virtual machine (Pharo.exe).
          + On Linux and other Unixes: pass the image as parameter to the
            virtual machine (./pharo PharoWeb.image).

Week 1: Welcome on Board and Syntax Discovery

   Download the slides, videos, english videos and exercises.
    1. üê• Lecture Objectives of this MOOC
    2. üê• Lecture Pharo: an Immersive Object-Oriented System
    3. üê• Lecture Pharo Vision
    4. üê• Lecture Pharo Object Model in a Nutshell
    5. üê• Lecture Pharo Syntax in a Nutshell
    6. üê• Lecture Class and Method Definitions
    7. üê• Live Selecting and executing expressions
    8. üê• Live Learn Pharo with Prof Stef
    9. üê• Live Syntax Highlighting gives Feedback
   10. üê• Live Learn Keyboard Shortcuts
   11. üê• Redo Coding a Counter
   12. üê• Exercise Expressions and Messages
   13. üê• Exercise TinyBlog: Presentation and Model
   14. üå∂ Challenge Challenge 0

Week 2: Pharo Syntax, Blocks and Inspector

   Download the slides, videos, english videos and exercises.
    1. üê• Lecture Understanding Messages
    2. üê• Lecture Messages for Java programmer
    3. üê• Lecture Messages: Composition and Precedence
    4. üê• Lecture Understanding Messages: Sequence and Cascade
    5. üê• Live Finding Methods with Finder
    6. üê• Live GTInspector 1: Inspect and Interact with Objects
    7. üê• Lecture Introduction to Blocks
    8. üê• Lecture Loops
    9. üê• Lecture Booleans and Conditions
   10. üê• Lecture Parenthesis vs Square Brackets
   11. üê• Lecture Yourself
   12. üéÅ Lecture The Essence of Dispatch through an Exercise
   13. üê• Live Nautilus 1: First Meet with the Code Browser
   14. üê• Live Nautilus 2: Packages, Tags and Groups
   15. üê• Live Nautilus 3: Inheritance view
   16. üê• Redo Coding a Counter in the Debugger
   17. üê• Exercise Solution: Expressions and Messages
   18. üê• Exercise Expression Results
   19. üê• Exercise TinyBlog: Extending and Testing the Model
   20. üå∂ Challenge Solution: Challenge 0
   21. üå∂ Challenge Challenge 1

Week 3: Design, Class Methods and Collections

   Download the slides, videos , english videos and exercises.
    1. üê• Lecture Essence of Dispatch: Taking Pharo Booleans as Example
    2. üê• Lecture Essence of Dispatch
    3. üê• Lecture Variables
    4. üê•üåê Lecture A Simple HTTP Application: a Pretext to Revisit Pharo
       Syntax
    5. üê• Live Nautilus 4: How to Become a Super Pharo Developer:
       Understanding Sender and Implementors
    6. üê• Live Nautilus 5: Navigating Fast Inside Classes
    7. üê• Lecture Class Methods
    8. üê• Lecture An Overview of Essential Collections
    9. üê• Live Spotter 1: Find and Browse a Class
   10. üê• Live Spotter 2: Filter Results by Category
   11. üéÅ Lecture Iterators
   12. üê• Lecture Stream Overview
   13. üê• Lecture Understanding Return
   14. üê• Redo Coding a Little Domain Specific Language
   15. üê• Exercise Solution: Expression Results
   16. üê• Exercise Rewriting Expressions
   17. üê• Exercise TinyBlog: A Simple Teapot Web Interface
   18. üå∂ Challenge Solution: Challenge 1
   19. üå∂ Challenge Challenge 2

Week 4: Inheritance & Lookup and Web Development

   Download the slides, videos, english videos and exercises.
    1. üê• Lecture Inheritance Basics
    2. üê• Lecture Inheritance & Lookup: Lookup
    3. üê• Lecture Inheritance & Lookup: Super
    4. üê• Lecture Inheritance & Lookup: DoesNotUnderstand:
    5. üå∂ Lecture Inheritance & Lookup: Lookup in Metaclasses
    6. üéÅ Lecture Class Methods at Work
    7. üåê Lecture Overview of Pharo Web Stack
    8. üåê Lecture Seaside: an Innovative Web Application Framework
    9. üåê Lecture Seaside: Rendering Components
   10. üåê Lecture Seaside: a Glance at MetaData and REST
   11. üåê Lecture Voyage: NoSql Object Database
   12. üê• Live How to load code from repository
   13. üê• Live How to load projects
   14. üéÅ Live Nautilus 6: An overview of Refactorings
   15. üéÅ Live Nautilus 7: Using the Quality Assistant and Code Critic
   16. üê• Exercise Solution: Rewriting Expressions
   17. üåê Exercise TinyBlog: Data Persitency using Voyage and Mongo
   18. üåê Exercise TinyBlog: Building a Web Interface with Seaside
   19. üåê Exercise Building a Simple Contact Book Application
   20. üå∂ Challenge Solution: Challenge 2
   21. üå∂ Challenge Challenge 3

Week 5: Exception, Debugging and Reflection

       Download the slides, videos, english videos and exercises.
         1. üåê Lecture Seaside: Composing Components
         2. üéÅ Lecture Really Understanding Class Methods
         3. üê• Lecture Common Errors
         4. üå∂ Lecture Powerful Exceptions: an Overview
         5. üê• Lecture Debugging in Pharo
         6. üê• Lecture SUnit: Unit Tests in Pharo
         7. üå∂ Lecture Files in Pharo
         8. üîÆ Lecture Reflection: Basic Introspection
         9. üå∂ Lecture Benchmarking in Pharo
        10. üê• Live Spotter 3: Scoping and Reducing Search
        11. üê• Live Spotter 6: Search, Navigate and Preview Files
        12. üê• Live Learning the Debugger
        13. üê• Live How to find a bug?
        14. üê• Live GTInspector 2: Inspect Files and Directories
        15. üåê Exercise TinyBlog: Building an Admin Seaside Web Interface
            with Magritte
        16. üê• Exercise TinyChat
        17. üå∂ Challenge Solution: Challenge 3
        18. üå∂ Challenge Challenge 4

Week 6: Rethink Lookup and Advanced Object-Oriented Design

       Download the slides, videos , english videos and exercises.
         1. üéÅ Lecture Did You Really Understand Super?
         2. üê• Lecture Understanding the Implementation of ifTrue:ifFalse:
         3. üéÅ Lecture Dice new vs. self class new
         4. üéÅ Lecture Message sends are plans for reuse
         5. üéÅ Lecture Hooks and Templates
         6. üê• Lecture Runtime Architecture
         7. üê• Lecture Characters, Strings and Symbols
         8. üê• Lecture Dynamic Vs. Literal Arrays
         9. üê• Live Understanding Images and Changes Files
        10. üê• Live Using the Pharo Launcher to manage your Pharo images
        11. üå∂ Live Diffing and Merging in Pharo
        12. üê• Live GTInspector 4: Build Custom Tab Views for your Objects
        13. üåê Exercise TinyBlog: Deployment
        14. üå∂ Challenge Solution: Challenge 4
        15. üå∂ Challenge Challenge 5

Week 7: More on Object-Oriented Design and Testing

       Download the slides, videos , english videos and exercises.
         1. üå∂ Lecture Advanced Points on Classes
         2. üê• Lecture Variable Size Objects
         3. üîÆ Lecture Understanding Metaclasses
         4. üîÆ Lecture Reflective Operations for Live Programming
         5. üîÆ Lecture DoesNotUnderstand: a Precious Hook
         6. üîÆ Lecture Reflection: Stack as an Object
         7. üéÅ Lecture Avoid Null Checks
         8. üê• Lecture A Journey in Pharo: A Bright Future
         9. üå∂ Live Spotter 4: The Preview pane
        10. üå∂ Live Spotter 5: Search in Playground History
        11. üå∂ Live GTInspector 3: Understand Pharo Internals by Inspection
        12. üå∂ Challenge Solution: Challenge 5

Resources

       You can find free and online resources in the Documentation page.
       We recommend the Updated Pharo by Example book, the Pharo
       cheat-sheet, and the new book Learning Object-Oriented Programming,
       Design and TDD with Pharo on http://books.pharo.org

About

       Damien Cassou

Damien Cassou
       Damien Cassou received his PhD degree in Computer Science from the
       University of Bordeaux, France. He is working as associate
       professor (ma√Ætre de conf√©rences) at the University of Lille,
       France, and is a member of the RMoD research group (Inria,
       CRIStAL). Damien is working on dynamic programming languages (most
       notably around traits and modules) and software engineering (mainly
       tools for developers). Damien has co-organized many events
       (including ECOOP‚Äô14 and ESUG many times) and co-wrote several
       books. Because he loves programming, Damien is also an active
       member of the Smalltalk and Emacs-Lisp communities. Finally, he
       maintains many packages for NixOS.
       St√©phane Ducasse

St√©phane Ducasse
       St√©phane Ducasse is directeur de recherche at Inria. He leads the
       RMoD team. He is expert in two domains: object-oriented language
       design and reengineering. His works on traits have been introduced
       in AmbientTalk, Slate, Pharo, Perl-6, PHP 5.4 and Squeak. They have
       also influenced JavaScript, Scala and Fortress. St√©phane is also
       expert on software quality, program understanding, program
       visualisations, reengineering and metamodeling. He is one of the
       developers of Pharo. He is also one of the developers of Moose, an
       open-source software analysis platform. He created Synectique a
       company building dedicated tools for advanced software analysis.
       St√©phane wrote several books on programming learning and other
       topics such as web programming.
       Luc Fabresse

Luc Fabresse
       Luc Fabresse received his PhD in computer science in 2007 from the
       University of Montpellier 2, France. He is currently an associate
       professor in the CAR research theme at Mines Douai, Mines-Telecom
       Institute. Luc is the co-author of several research papers
       advocating the use of dynamic and reflective languages such as
       Pharo to support live programming of mobile and autonomous robots
       in an efficient way. Luc's long-term vision is to be able to use
       Jedi mind trick on mobile robots ;-) Meanwhile, he concretizes all
       his ideas (models and tools) in the PhaROS platform (a Pharo client
       for the Robotics Operating System) to develop, debug, test, deploy,
       execute and benchmark robotics applications. Each year, Luc gives
       many computer science lectures and co-organizes events (technical
       days, conferences, ...). He also promotes Smalltalk (ESUG board
       member) and participates to its open-source implementation Pharo.
       The Partners
       logo inria recherche logo Universit√© de Lille logo IMT Lille Douai
       logo investissement d'avenir logo utop logo unit logo unisciel logo
       CanalU
       This webpage is hosted in github.
